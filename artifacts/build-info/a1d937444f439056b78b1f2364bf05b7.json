{
	"id": "a1d937444f439056b78b1f2364bf05b7",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.30",
	"solcLongVersion": "0.8.30+commit.73712a01",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/BountyEscrow.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.24;\n\nimport {IERC20} from \"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol\";\nimport {SafeERC20} from \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\";\nimport {ReentrancyGuard} from \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\";\nimport {Pausable} from \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\";\nimport {Ownable} from \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\";\nimport {IERC20Metadata} from \"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol\";\nimport {SafeCast} from \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\";\nimport {Math} from \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\";\n\n/**\n * @title BountyEscrow\n * @notice Minimal, USDC-based escrow for GitHub issue bounties.\n *         Sponsor funds a bounty; a designated resolver can settle to a recipient before the deadline;\n *         sponsors can cancel or refund after deadline. Owner sets fee params and can pause.\n *\n * @dev Design:\n * - Token: single ERC-20 (intended USDC). Address immutable. Decimals cached (best-effort, fallback=6).\n * - State machine per-bounty: None → Open → (Resolved | Refunded | Canceled). Terminal states are final.\n * - Funds held in-contract; payouts are pull-style via resolver/sponsor actions.\n * - Fee assessed only on successful resolution; transfers: recipient (net) + feeVault (fee).\n * - Reentrancy: public state-changing entrypoints are nonReentrant; CEI respected.\n * - Pausability: owner can pause/unpause all state-changing flows.\n *\n * @custom:security\n * - Resolver authority is scoped per bounty; cannot change post-creation.\n * - Sponsor is the caller that created the bounty; only sponsor can top-up/cancel/refund.\n * - No arbitrary token transfers; only the configured _usdc is handled.\n * - Fee bounded by MAX_FEE_BPS (10%).\n *\n * @custom:oz-version\n * - OpenZeppelin 5.0.2 (imports pinned via versioned paths).\n */\ncontract BountyEscrow is ReentrancyGuard, Pausable, Ownable {\n    using SafeERC20 for IERC20;\n    using SafeCast for uint256;\n\n    /// @notice Maximum protocol fee in basis points (1_000 = 10%).\n    uint16 public constant MAX_FEE_BPS = 1_000;\n\n    /// @dev Basis point denominator (10_000 = 100%).\n    uint256 private constant FEE_DENOM = 10_000;\n\n    /**\n     * @notice Lifecycle status of a bounty.\n     * @dev Transitions:\n     * - None (default) → Open (on createBounty)\n     * - Open → Resolved (resolver calls resolve)\n     * - Open → Refunded (sponsor calls refundExpired after deadline)\n     * - Open → Canceled (sponsor calls cancel before deadline)\n     * Terminal states: Resolved, Refunded, Canceled.\n     */\n    enum Status {\n        None,\n        Open,\n        Resolved,\n        Refunded,\n        Canceled\n    }\n\n    /**\n     * @notice Bounty storage layout.\n     * @param repoIdHash Hash of repository identity (e.g., chain-agnostic slug hash).\n     * @param sponsor EOA/contract that funded the bounty; only sponsor can top-up/cancel/refund.\n     * @param resolver Address authorized to resolve this bounty to a recipient.\n     * @param amount Current escrowed amount (USDC units).\n     * @param deadline Unix timestamp; after this, sponsor may refund if still Open.\n     * @param issueNumber GitHub issue number (or equivalent reference).\n     * @param status Lifecycle state (see Status enum).\n     */\n    struct Bounty {\n        bytes32 repoIdHash;\n        address sponsor;\n        address resolver;\n        uint96 amount;\n        uint64 deadline;\n        uint64 issueNumber;\n        Status status;\n    }\n\n    // -------- Storage --------\n\n    /// @dev Immutable reference to the ERC-20 used for all transfers (intended USDC).\n    IERC20 private immutable _usdc;\n\n    /// @dev Cached decimals for display/UX; logic does not assume a specific precision.\n    uint8 private immutable _usdcDecimals;\n\n    /// @dev BountyId (keccak256(sponsor, repoIdHash, issueNumber)) → Bounty.\n    mapping(bytes32 => Bounty) private _bounties;\n\n    /// @notice Protocol fee in basis points (out of 10_000).\n    uint16 public feeBps;\n\n    /// @notice Address that receives protocol fees upon resolution.\n    address public feeVault;\n\n    // -------- Events --------\n\n    /**\n     * @notice Emitted when a bounty is created and funded.\n     * @param bountyId Deterministic id: keccak256(sponsor, repoIdHash, issueNumber).\n     * @param sponsor Bounty sponsor (msg.sender of createBounty).\n     * @param repoIdHash Repository identifier hash associated with the issue.\n     * @param issueNumber Issue number within the repository.\n     * @param deadline Expiration timestamp for refund eligibility.\n     * @param resolver Address authorized to resolve this bounty.\n     * @param amount Initial funded amount (USDC units).\n     */\n    event BountyCreated(\n        bytes32 indexed bountyId,\n        address indexed sponsor,\n        bytes32 indexed repoIdHash,\n        uint64 issueNumber,\n        uint64 deadline,\n        address resolver,\n        uint256 amount\n    );\n\n    /**\n     * @notice Emitted when the sponsor tops up an existing Open bounty.\n     * @param bountyId Id of the bounty funded.\n     * @param newAmount New total escrowed amount after top-up.\n     */\n    event Funded(bytes32 indexed bountyId, uint256 newAmount);\n\n    /**\n     * @notice Emitted on successful resolution and payout.\n     * @param bountyId Id of the bounty.\n     * @param recipient Address receiving the net payout.\n     * @param net Amount sent to recipient (gross - fee).\n     * @param fee Amount sent to feeVault.\n     */\n    event Resolved(\n        bytes32 indexed bountyId,\n        address indexed recipient,\n        uint256 net,\n        uint256 fee\n    );\n\n    /**\n     * @notice Emitted when an expired Open bounty is refunded to the sponsor.\n     * @param bountyId Id of the bounty.\n     * @param sponsor Sponsor receiving the refund.\n     * @param amount Amount refunded.\n     */\n    event Refunded(\n        bytes32 indexed bountyId,\n        address indexed sponsor,\n        uint256 amount\n    );\n\n    /**\n     * @notice Emitted when an Open bounty is canceled by the sponsor before deadline.\n     * @param bountyId Id of the bounty.\n     * @param sponsor Sponsor receiving the returned funds.\n     * @param amount Amount returned.\n     */\n    event Canceled(\n        bytes32 indexed bountyId,\n        address indexed sponsor,\n        uint256 amount\n    );\n\n    /**\n     * @notice Emitted when fee parameters are updated by owner.\n     * @param feeBps New fee in basis points.\n     * @param feeVault Address to receive fees.\n     */\n    event FeeParamsUpdated(uint16 feeBps, address feeVault);\n\n    // -------- Errors --------\n\n    /// @notice Thrown when parameters fail validation (range/overflow/state).\n    error InvalidParams();\n\n    /// @notice Thrown when attempting to create a bounty that already exists.\n    error AlreadyExists();\n\n    /// @notice Thrown when action requires an Open bounty but it is not Open.\n    error NotOpen();\n\n    /// @notice Thrown when caller is not the bounty sponsor.\n    error NotSponsor();\n\n    /// @notice Thrown when caller is not the designated resolver.\n    error NotResolver();\n\n    /// @notice Thrown when refund attempted before deadline.\n    error DeadlineNotReached();\n\n    /// @notice Thrown when an address argument is zero.\n    error ZeroAddress();\n\n    /// @notice Thrown when an amount argument is zero.\n    error ZeroAmount();\n\n    // -------- Constructor --------\n\n    /**\n     * @param usdc_ ERC-20 token address used for all escrowed transfers (intended USDC).\n     * @param _feeBps Initial protocol fee in basis points (≤ MAX_FEE_BPS).\n     * @param _feeVault Address to receive protocol fees on resolution.\n     * @param initialOwner Contract owner (admin for pause/fee params).\n     */\n    constructor(\n        address usdc_,\n        uint16 _feeBps,\n        address _feeVault,\n        address initialOwner\n    ) Ownable(initialOwner) {\n        if (\n            usdc_ == address(0) ||\n            _feeVault == address(0) ||\n            initialOwner == address(0)\n        ) revert ZeroAddress();\n        if (_feeBps > MAX_FEE_BPS) revert InvalidParams();\n\n        _usdc = IERC20(usdc_);\n\n        // Cache token decimals; if token does not implement IERC20Metadata, default to 6 (typical USDC).\n        uint8 dec;\n        try IERC20Metadata(usdc_).decimals() returns (uint8 d) {\n            dec = d;\n        } catch {\n            dec = 6;\n        }\n        _usdcDecimals = dec;\n\n        feeBps = _feeBps;\n        feeVault = _feeVault;\n    }\n\n    // -------- Pure / View Utilities --------\n\n    /**\n     * @notice Compute the deterministic bounty id.\n     * @dev Establishes a one-bounty-per (sponsor, repoIdHash, issueNumber) invariant.\n     * @param sponsor Address of the sponsor (creator/funder).\n     * @param repoIdHash Repository identifier hash.\n     * @param issueNumber Issue number reference.\n     * @return bountyId keccak256(sponsor, repoIdHash, issueNumber).\n     */\n    function computeBountyId(\n        address sponsor,\n        bytes32 repoIdHash,\n        uint64 issueNumber\n    ) public pure returns (bytes32 bountyId) {\n        return keccak256(abi.encodePacked(sponsor, repoIdHash, issueNumber));\n    }\n\n    // -------- Admin --------\n\n    /**\n     * @notice Pause all state-changing functions.\n     * @dev Only owner. Idempotent via OZ Pausable.\n     */\n    function pause() external onlyOwner {\n        _pause();\n    }\n\n    /**\n     * @notice Unpause all state-changing functions.\n     * @dev Only owner. Idempotent via OZ Pausable.\n     */\n    function unpause() external onlyOwner {\n        _unpause();\n    }\n\n    /**\n     * @notice Update protocol fee and fee vault address.\n     * @dev Only owner. Fee bounded by MAX_FEE_BPS. feeVault must be non-zero.\n     * @param _feeBps New fee in basis points.\n     * @param _feeVault New fee receiver address.\n     */\n    function setFeeParams(\n        uint16 _feeBps,\n        address _feeVault\n    ) external onlyOwner {\n        if (_feeVault == address(0)) revert ZeroAddress();\n        if (_feeBps > MAX_FEE_BPS) revert InvalidParams();\n        feeBps = _feeBps;\n        feeVault = _feeVault;\n        emit FeeParamsUpdated(_feeBps, _feeVault);\n    }\n\n    // -------- Core Flows --------\n\n    /**\n     * @notice Create a new bounty and fund it in a single transaction.\n     * @dev Requirements:\n     * - resolver != 0\n     * - repoIdHash != 0 and issueNumber != 0\n     * - deadline > now\n     * - amount > 0\n     * - bountyId (sponsor, repoIdHash, issueNumber) must not already exist\n     * Effects:\n     * - Initializes Bounty struct with Status.Open\n     * - Transfers `amount` of _usdc from msg.sender to this contract\n     * @param resolver Address allowed to resolve this bounty.\n     * @param repoIdHash Repository identifier hash.\n     * @param issueNumber Issue number within the repository.\n     * @param deadline Timestamp after which sponsor can refund if still Open.\n     * @param amount Amount to escrow (USDC units).\n     * @return bountyId Deterministic id for the created bounty.\n     */\n    function createBounty(\n        address resolver,\n        bytes32 repoIdHash,\n        uint64 issueNumber,\n        uint64 deadline,\n        uint256 amount\n    ) external nonReentrant whenNotPaused returns (bytes32 bountyId) {\n        if (resolver == address(0)) revert ZeroAddress();\n        if (repoIdHash == bytes32(0) || issueNumber == 0)\n            revert InvalidParams();\n        if (deadline <= block.timestamp) revert InvalidParams();\n        if (amount == 0) revert ZeroAmount();\n\n        bountyId = computeBountyId(msg.sender, repoIdHash, issueNumber);\n        if (_bounties[bountyId].status != Status.None) revert AlreadyExists();\n\n        Bounty storage b = _bounties[bountyId];\n        b.repoIdHash = repoIdHash;\n        b.sponsor = msg.sender;\n        b.resolver = resolver;\n        b.amount = amount.toUint96(); // downcast after additive overflow checks elsewhere\n        b.deadline = deadline;\n        b.issueNumber = issueNumber;\n        b.status = Status.Open;\n\n        _usdc.safeTransferFrom(msg.sender, address(this), amount);\n\n        emit BountyCreated(\n            bountyId,\n            msg.sender,\n            repoIdHash,\n            issueNumber,\n            deadline,\n            resolver,\n            amount\n        );\n    }\n\n    /**\n     * @notice Top up an existing Open bounty.\n     * @dev Only the sponsor can fund. Amount must be > 0. Status must be Open.\n     *      Emits the new total escrowed amount for auditability.\n     * @param bountyId Target bounty.\n     * @param amount Additional amount to escrow.\n     */\n    function fund(\n        bytes32 bountyId,\n        uint256 amount\n    ) external nonReentrant whenNotPaused {\n        Bounty storage b = _bounties[bountyId];\n        if (b.status != Status.Open) revert NotOpen();\n        if (msg.sender != b.sponsor) revert NotSponsor();\n        if (amount == 0) revert ZeroAmount();\n\n        // Prevent uint96 overflow post-top-up.\n        uint256 newAmt = uint256(b.amount) + amount;\n        if (newAmt > type(uint96).max) revert InvalidParams();\n        b.amount = newAmt.toUint96();\n\n        _usdc.safeTransferFrom(msg.sender, address(this), amount);\n\n        emit Funded(bountyId, newAmt);\n    }\n\n    /**\n     * @notice Cancel an Open bounty before the deadline and retrieve funds.\n     * @dev Only sponsor; bounty must be Open. Sets status to Canceled and returns all funds.\n     * @param bountyId Target bounty.\n     */\n    function cancel(bytes32 bountyId) external nonReentrant whenNotPaused {\n        Bounty storage b = _bounties[bountyId];\n        if (b.status != Status.Open) revert NotOpen();\n        if (msg.sender != b.sponsor) revert NotSponsor();\n\n        b.status = Status.Canceled;\n        uint256 gross = b.amount;\n        b.amount = 0;\n\n        if (gross > 0) _usdc.safeTransfer(b.sponsor, gross);\n        emit Canceled(bountyId, b.sponsor, gross);\n    }\n\n    /**\n     * @notice Resolve an Open bounty to a recipient, paying out net amount and fee.\n     * @dev Only the designated resolver; recipient must be non-zero.\n     *      Fee = floor(gross * feeBps / 10_000); Net = gross - fee.\n     *      Uses Math.mulDiv for precise, overflow-safe multiplication/division.\n     * @param bountyId Target bounty.\n     * @param recipient Address receiving the net payout.\n     */\n    function resolve(\n        bytes32 bountyId,\n        address recipient\n    ) external nonReentrant whenNotPaused {\n        if (recipient == address(0)) revert ZeroAddress();\n\n        Bounty storage b = _bounties[bountyId];\n        if (b.status != Status.Open) revert NotOpen();\n        if (msg.sender != b.resolver) revert NotResolver();\n\n        b.status = Status.Resolved;\n        uint256 gross = b.amount;\n        b.amount = 0;\n\n        // Compute fee and net with overflow-safe mulDiv.\n        uint256 fee = Math.mulDiv(gross, feeBps, FEE_DENOM);\n        uint256 net = gross - fee;\n\n        if (net > 0) _usdc.safeTransfer(recipient, net);\n        if (fee > 0) _usdc.safeTransfer(feeVault, fee);\n\n        emit Resolved(bountyId, recipient, net, fee);\n    }\n\n    /**\n     * @notice Refund an Open bounty after the deadline back to the sponsor.\n     * @dev Only sponsor; requires block.timestamp ≥ deadline.\n     *      Sets status to Refunded and returns all funds.\n     * @param bountyId Target bounty.\n     */\n    function refundExpired(\n        bytes32 bountyId\n    ) external nonReentrant whenNotPaused {\n        Bounty storage b = _bounties[bountyId];\n        if (b.status != Status.Open) revert NotOpen();\n        if (block.timestamp < b.deadline) revert DeadlineNotReached();\n        if (msg.sender != b.sponsor) revert NotSponsor();\n\n        b.status = Status.Refunded;\n        uint256 gross = b.amount;\n        b.amount = 0;\n\n        if (gross > 0) _usdc.safeTransfer(b.sponsor, gross);\n        emit Refunded(bountyId, b.sponsor, gross);\n    }\n\n    // -------- Explicit Getters --------\n\n    /**\n     * @notice ERC-20 token used for escrow (intended USDC).\n     */\n    function usdc() external view returns (IERC20) {\n        return _usdc;\n    }\n\n    /**\n     * @notice Cached decimals of the escrow token (best-effort; default 6).\n     */\n    function usdcDecimals() external view returns (uint8) {\n        return _usdcDecimals;\n    }\n\n    /**\n     * @notice Read the full Bounty struct for a given id.\n     * @dev Returns a memory copy; safe for off-chain indexing/UX.\n     * @param bountyId Bounty id to query.\n     */\n    function getBounty(bytes32 bountyId) external view returns (Bounty memory) {\n        return _bounties[bountyId];\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Muldiv operation overflow.\n     */\n    error MathOverflowedMulDiv();\n\n    enum Rounding {\n        Floor, // Toward negative infinity\n        Ceil, // Toward positive infinity\n        Trunc, // Toward zero\n        Expand // Away from zero\n    }\n\n    /**\n     * @dev Returns the addition of two unsigned integers, with an overflow flag.\n     */\n    function tryAdd(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            uint256 c = a + b;\n            if (c < a) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the subtraction of two unsigned integers, with an overflow flag.\n     */\n    function trySub(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b > a) return (false, 0);\n            return (true, a - b);\n        }\n    }\n\n    /**\n     * @dev Returns the multiplication of two unsigned integers, with an overflow flag.\n     */\n    function tryMul(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            // Gas optimization: this is cheaper than requiring 'a' not being zero, but the\n            // benefit is lost if 'b' is also tested.\n            // See: https://github.com/OpenZeppelin/openzeppelin-contracts/pull/522\n            if (a == 0) return (true, 0);\n            uint256 c = a * b;\n            if (c / a != b) return (false, 0);\n            return (true, c);\n        }\n    }\n\n    /**\n     * @dev Returns the division of two unsigned integers, with a division by zero flag.\n     */\n    function tryDiv(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a / b);\n        }\n    }\n\n    /**\n     * @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag.\n     */\n    function tryMod(uint256 a, uint256 b) internal pure returns (bool, uint256) {\n        unchecked {\n            if (b == 0) return (false, 0);\n            return (true, a % b);\n        }\n    }\n\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a > b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds towards infinity instead\n     * of rounding towards zero.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        if (b == 0) {\n            // Guarantee the same behavior as in a regular Solidity division.\n            return a / b;\n        }\n\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a == 0 ? 0 : (a - 1) / b + 1;\n    }\n\n    /**\n     * @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n     * denominator == 0.\n     * @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n     * Uniswap Labs also under MIT license.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {\n        unchecked {\n            // 512-bit multiply [prod1 prod0] = x * y. Compute the product mod 2^256 and mod 2^256 - 1, then use\n            // use the Chinese Remainder Theorem to reconstruct the 512 bit result. The result is stored in two 256\n            // variables such that product = prod1 * 2^256 + prod0.\n            uint256 prod0 = x * y; // Least significant 256 bits of the product\n            uint256 prod1; // Most significant 256 bits of the product\n            assembly {\n                let mm := mulmod(x, y, not(0))\n                prod1 := sub(sub(mm, prod0), lt(mm, prod0))\n            }\n\n            // Handle non-overflow cases, 256 by 256 division.\n            if (prod1 == 0) {\n                // Solidity will revert if denominator == 0, unlike the div opcode on its own.\n                // The surrounding unchecked block does not change this fact.\n                // See https://docs.soliditylang.org/en/latest/control-structures.html#checked-or-unchecked-arithmetic.\n                return prod0 / denominator;\n            }\n\n            // Make sure the result is less than 2^256. Also prevents denominator == 0.\n            if (denominator <= prod1) {\n                revert MathOverflowedMulDiv();\n            }\n\n            ///////////////////////////////////////////////\n            // 512 by 256 division.\n            ///////////////////////////////////////////////\n\n            // Make division exact by subtracting the remainder from [prod1 prod0].\n            uint256 remainder;\n            assembly {\n                // Compute remainder using mulmod.\n                remainder := mulmod(x, y, denominator)\n\n                // Subtract 256 bit number from 512 bit number.\n                prod1 := sub(prod1, gt(remainder, prod0))\n                prod0 := sub(prod0, remainder)\n            }\n\n            // Factor powers of two out of denominator and compute largest power of two divisor of denominator.\n            // Always >= 1. See https://cs.stackexchange.com/q/138556/92363.\n\n            uint256 twos = denominator & (0 - denominator);\n            assembly {\n                // Divide denominator by twos.\n                denominator := div(denominator, twos)\n\n                // Divide [prod1 prod0] by twos.\n                prod0 := div(prod0, twos)\n\n                // Flip twos such that it is 2^256 / twos. If twos is zero, then it becomes one.\n                twos := add(div(sub(0, twos), twos), 1)\n            }\n\n            // Shift in bits from prod1 into prod0.\n            prod0 |= prod1 * twos;\n\n            // Invert denominator mod 2^256. Now that denominator is an odd number, it has an inverse modulo 2^256 such\n            // that denominator * inv = 1 mod 2^256. Compute the inverse by starting with a seed that is correct for\n            // four bits. That is, denominator * inv = 1 mod 2^4.\n            uint256 inverse = (3 * denominator) ^ 2;\n\n            // Use the Newton-Raphson iteration to improve the precision. Thanks to Hensel's lifting lemma, this also\n            // works in modular arithmetic, doubling the correct bits in each step.\n            inverse *= 2 - denominator * inverse; // inverse mod 2^8\n            inverse *= 2 - denominator * inverse; // inverse mod 2^16\n            inverse *= 2 - denominator * inverse; // inverse mod 2^32\n            inverse *= 2 - denominator * inverse; // inverse mod 2^64\n            inverse *= 2 - denominator * inverse; // inverse mod 2^128\n            inverse *= 2 - denominator * inverse; // inverse mod 2^256\n\n            // Because the division is now exact we can divide by multiplying with the modular inverse of denominator.\n            // This will give us the correct result modulo 2^256. Since the preconditions guarantee that the outcome is\n            // less than 2^256, this is the final result. We don't need to compute the high bits of the result and prod1\n            // is no longer required.\n            result = prod0 * inverse;\n            return result;\n        }\n    }\n\n    /**\n     * @notice Calculates x * y / denominator with full precision, following the selected rounding direction.\n     */\n    function mulDiv(uint256 x, uint256 y, uint256 denominator, Rounding rounding) internal pure returns (uint256) {\n        uint256 result = mulDiv(x, y, denominator);\n        if (unsignedRoundsUp(rounding) && mulmod(x, y, denominator) > 0) {\n            result += 1;\n        }\n        return result;\n    }\n\n    /**\n     * @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n     * towards zero.\n     *\n     * Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11).\n     */\n    function sqrt(uint256 a) internal pure returns (uint256) {\n        if (a == 0) {\n            return 0;\n        }\n\n        // For our first guess, we get the biggest power of 2 which is smaller than the square root of the target.\n        //\n        // We know that the \"msb\" (most significant bit) of our target number `a` is a power of 2 such that we have\n        // `msb(a) <= a < 2*msb(a)`. This value can be written `msb(a)=2**k` with `k=log2(a)`.\n        //\n        // This can be rewritten `2**log2(a) <= a < 2**(log2(a) + 1)`\n        // → `sqrt(2**k) <= sqrt(a) < sqrt(2**(k+1))`\n        // → `2**(k/2) <= sqrt(a) < 2**((k+1)/2) <= 2**(k/2 + 1)`\n        //\n        // Consequently, `2**(log2(a) / 2)` is a good first approximation of `sqrt(a)` with at least 1 correct bit.\n        uint256 result = 1 << (log2(a) >> 1);\n\n        // At this point `result` is an estimation with one bit of precision. We know the true value is a uint128,\n        // since it is the square root of a uint256. Newton's method converges quadratically (precision doubles at\n        // every iteration). We thus need at most 7 iteration to turn our partial result with one bit of precision\n        // into the expected uint128 result.\n        unchecked {\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            result = (result + a / result) >> 1;\n            return min(result, a / result);\n        }\n    }\n\n    /**\n     * @notice Calculates sqrt(a), following the selected rounding direction.\n     */\n    function sqrt(uint256 a, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = sqrt(a);\n            return result + (unsignedRoundsUp(rounding) && result * result < a ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 2 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 128;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 64;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 32;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 16;\n            }\n            if (value >> 8 > 0) {\n                value >>= 8;\n                result += 8;\n            }\n            if (value >> 4 > 0) {\n                value >>= 4;\n                result += 4;\n            }\n            if (value >> 2 > 0) {\n                value >>= 2;\n                result += 2;\n            }\n            if (value >> 1 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log2(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log2(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 10 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >= 10 ** 64) {\n                value /= 10 ** 64;\n                result += 64;\n            }\n            if (value >= 10 ** 32) {\n                value /= 10 ** 32;\n                result += 32;\n            }\n            if (value >= 10 ** 16) {\n                value /= 10 ** 16;\n                result += 16;\n            }\n            if (value >= 10 ** 8) {\n                value /= 10 ** 8;\n                result += 8;\n            }\n            if (value >= 10 ** 4) {\n                value /= 10 ** 4;\n                result += 4;\n            }\n            if (value >= 10 ** 2) {\n                value /= 10 ** 2;\n                result += 2;\n            }\n            if (value >= 10 ** 1) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log10(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log10(value);\n            return result + (unsignedRoundsUp(rounding) && 10 ** result < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Return the log in base 256 of a positive value rounded towards zero.\n     * Returns 0 if given 0.\n     *\n     * Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string.\n     */\n    function log256(uint256 value) internal pure returns (uint256) {\n        uint256 result = 0;\n        unchecked {\n            if (value >> 128 > 0) {\n                value >>= 128;\n                result += 16;\n            }\n            if (value >> 64 > 0) {\n                value >>= 64;\n                result += 8;\n            }\n            if (value >> 32 > 0) {\n                value >>= 32;\n                result += 4;\n            }\n            if (value >> 16 > 0) {\n                value >>= 16;\n                result += 2;\n            }\n            if (value >> 8 > 0) {\n                result += 1;\n            }\n        }\n        return result;\n    }\n\n    /**\n     * @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n     * Returns 0 if given 0.\n     */\n    function log256(uint256 value, Rounding rounding) internal pure returns (uint256) {\n        unchecked {\n            uint256 result = log256(value);\n            return result + (unsignedRoundsUp(rounding) && 1 << (result << 3) < value ? 1 : 0);\n        }\n    }\n\n    /**\n     * @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers.\n     */\n    function unsignedRoundsUp(Rounding rounding) internal pure returns (bool) {\n        return uint8(rounding) % 2 == 1;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n */\nlibrary SafeCast {\n    /**\n     * @dev Value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedUintDowncast(uint8 bits, uint256 value);\n\n    /**\n     * @dev An int value doesn't fit in an uint of `bits` size.\n     */\n    error SafeCastOverflowedIntToUint(int256 value);\n\n    /**\n     * @dev Value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedIntDowncast(uint8 bits, int256 value);\n\n    /**\n     * @dev An uint value doesn't fit in an int of `bits` size.\n     */\n    error SafeCastOverflowedUintToInt(uint256 value);\n\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        if (value > type(uint248).max) {\n            revert SafeCastOverflowedUintDowncast(248, value);\n        }\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        if (value > type(uint240).max) {\n            revert SafeCastOverflowedUintDowncast(240, value);\n        }\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        if (value > type(uint232).max) {\n            revert SafeCastOverflowedUintDowncast(232, value);\n        }\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        if (value > type(uint224).max) {\n            revert SafeCastOverflowedUintDowncast(224, value);\n        }\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        if (value > type(uint216).max) {\n            revert SafeCastOverflowedUintDowncast(216, value);\n        }\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        if (value > type(uint208).max) {\n            revert SafeCastOverflowedUintDowncast(208, value);\n        }\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        if (value > type(uint200).max) {\n            revert SafeCastOverflowedUintDowncast(200, value);\n        }\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        if (value > type(uint192).max) {\n            revert SafeCastOverflowedUintDowncast(192, value);\n        }\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        if (value > type(uint184).max) {\n            revert SafeCastOverflowedUintDowncast(184, value);\n        }\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        if (value > type(uint176).max) {\n            revert SafeCastOverflowedUintDowncast(176, value);\n        }\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        if (value > type(uint168).max) {\n            revert SafeCastOverflowedUintDowncast(168, value);\n        }\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        if (value > type(uint160).max) {\n            revert SafeCastOverflowedUintDowncast(160, value);\n        }\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        if (value > type(uint152).max) {\n            revert SafeCastOverflowedUintDowncast(152, value);\n        }\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        if (value > type(uint144).max) {\n            revert SafeCastOverflowedUintDowncast(144, value);\n        }\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        if (value > type(uint136).max) {\n            revert SafeCastOverflowedUintDowncast(136, value);\n        }\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        if (value > type(uint128).max) {\n            revert SafeCastOverflowedUintDowncast(128, value);\n        }\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        if (value > type(uint120).max) {\n            revert SafeCastOverflowedUintDowncast(120, value);\n        }\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        if (value > type(uint112).max) {\n            revert SafeCastOverflowedUintDowncast(112, value);\n        }\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        if (value > type(uint104).max) {\n            revert SafeCastOverflowedUintDowncast(104, value);\n        }\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        if (value > type(uint96).max) {\n            revert SafeCastOverflowedUintDowncast(96, value);\n        }\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        if (value > type(uint88).max) {\n            revert SafeCastOverflowedUintDowncast(88, value);\n        }\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        if (value > type(uint80).max) {\n            revert SafeCastOverflowedUintDowncast(80, value);\n        }\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        if (value > type(uint72).max) {\n            revert SafeCastOverflowedUintDowncast(72, value);\n        }\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        if (value > type(uint64).max) {\n            revert SafeCastOverflowedUintDowncast(64, value);\n        }\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        if (value > type(uint56).max) {\n            revert SafeCastOverflowedUintDowncast(56, value);\n        }\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        if (value > type(uint48).max) {\n            revert SafeCastOverflowedUintDowncast(48, value);\n        }\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        if (value > type(uint40).max) {\n            revert SafeCastOverflowedUintDowncast(40, value);\n        }\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        if (value > type(uint32).max) {\n            revert SafeCastOverflowedUintDowncast(32, value);\n        }\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        if (value > type(uint24).max) {\n            revert SafeCastOverflowedUintDowncast(24, value);\n        }\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        if (value > type(uint16).max) {\n            revert SafeCastOverflowedUintDowncast(16, value);\n        }\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        if (value > type(uint8).max) {\n            revert SafeCastOverflowedUintDowncast(8, value);\n        }\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        if (value < 0) {\n            revert SafeCastOverflowedIntToUint(value);\n        }\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(248, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(240, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(232, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(224, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(216, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(208, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(200, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(192, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(184, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(176, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(168, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(160, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(152, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(144, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(136, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(128, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(120, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(112, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(104, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(96, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(88, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(80, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(72, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(64, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(56, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(48, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(40, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(32, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(24, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(16, value);\n        }\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        if (downcasted != value) {\n            revert SafeCastOverflowedIntDowncast(8, value);\n        }\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        if (value > uint256(type(int256).max)) {\n            revert SafeCastOverflowedUintToInt(value);\n        }\n        return int256(value);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Metadata.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\n\n/**\n * @dev Interface for the optional metadata functions from the ERC20 standard.\n */\ninterface IERC20Metadata is IERC20 {\n    /**\n     * @dev Returns the name of the token.\n     */\n    function name() external view returns (string memory);\n\n    /**\n     * @dev Returns the symbol of the token.\n     */\n    function symbol() external view returns (string memory);\n\n    /**\n     * @dev Returns the decimals places of the token.\n     */\n    function decimals() external view returns (uint8);\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/Ownable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * The initial owner is set to the address provided by the deployer. This can\n * later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    /**\n     * @dev The caller account is not authorized to perform an operation.\n     */\n    error OwnableUnauthorizedAccount(address account);\n\n    /**\n     * @dev The owner is not a valid owner account. (eg. `address(0)`)\n     */\n    error OwnableInvalidOwner(address owner);\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the address provided by the deployer as the initial owner.\n     */\n    constructor(address initialOwner) {\n        if (initialOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(initialOwner);\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        if (owner() != _msgSender()) {\n            revert OwnableUnauthorizedAccount(_msgSender());\n        }\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        if (newOwner == address(0)) {\n            revert OwnableInvalidOwner(address(0));\n        }\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/utils/Pausable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {Context} from \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract Pausable is Context {\n    bool private _paused;\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor() {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/ReentrancyGuard.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Contract module that helps prevent reentrant calls to a function.\n *\n * Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n * available, which can be applied to functions to make sure there are no nested\n * (reentrant) calls to them.\n *\n * Note that because there is a single `nonReentrant` guard, functions marked as\n * `nonReentrant` may not call one another. This can be worked around by making\n * those functions `private`, and then adding `external` `nonReentrant` entry\n * points to them.\n *\n * TIP: If you would like to learn more about reentrancy and alternative ways\n * to protect against it, check out our blog post\n * https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\n */\nabstract contract ReentrancyGuard {\n    // Booleans are more expensive than uint256 or any type that takes up a full\n    // word because each write operation emits an extra SLOAD to first read the\n    // slot's contents, replace the bits taken up by the boolean, and then write\n    // back. This is the compiler's defense against contract upgrades and\n    // pointer aliasing, and it cannot be disabled.\n\n    // The values being non-zero value makes deployment a bit more expensive,\n    // but in exchange the refund on every call to nonReentrant will be lower in\n    // amount. Since refunds are capped to a percentage of the total\n    // transaction's gas, it is best to keep them low in cases like this one, to\n    // increase the likelihood of the full refund coming into effect.\n    uint256 private constant NOT_ENTERED = 1;\n    uint256 private constant ENTERED = 2;\n\n    uint256 private _status;\n\n    /**\n     * @dev Unauthorized reentrant call.\n     */\n    error ReentrancyGuardReentrantCall();\n\n    constructor() {\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Prevents a contract from calling itself, directly or indirectly.\n     * Calling a `nonReentrant` function from another `nonReentrant`\n     * function is not supported. It is possible to prevent this from happening\n     * by making the `nonReentrant` function external, and making it call a\n     * `private` function that does the actual work.\n     */\n    modifier nonReentrant() {\n        _nonReentrantBefore();\n        _;\n        _nonReentrantAfter();\n    }\n\n    function _nonReentrantBefore() private {\n        // On the first call to nonReentrant, _status will be NOT_ENTERED\n        if (_status == ENTERED) {\n            revert ReentrancyGuardReentrantCall();\n        }\n\n        // Any calls to nonReentrant after this point will fail\n        _status = ENTERED;\n    }\n\n    function _nonReentrantAfter() private {\n        // By storing the original value once again, a refund is triggered (see\n        // https://eips.ethereum.org/EIPS/eip-2200)\n        _status = NOT_ENTERED;\n    }\n\n    /**\n     * @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n     * `nonReentrant` function in the call stack.\n     */\n    function _reentrancyGuardEntered() internal view returns (bool) {\n        return _status == ENTERED;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/utils/SafeERC20.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC20} from \"../IERC20.sol\";\nimport {IERC20Permit} from \"../extensions/IERC20Permit.sol\";\nimport {Address} from \"../../../utils/Address.sol\";\n\n/**\n * @title SafeERC20\n * @dev Wrappers around ERC20 operations that throw on failure (when the token\n * contract returns false). Tokens that return no value (and instead revert or\n * throw on failure) are also supported, non-reverting calls are assumed to be\n * successful.\n * To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n * which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\n */\nlibrary SafeERC20 {\n    using Address for address;\n\n    /**\n     * @dev An operation with an ERC20 token failed.\n     */\n    error SafeERC20FailedOperation(address token);\n\n    /**\n     * @dev Indicates a failed `decreaseAllowance` request.\n     */\n    error SafeERC20FailedDecreaseAllowance(address spender, uint256 currentAllowance, uint256 requestedDecrease);\n\n    /**\n     * @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeTransfer(IERC20 token, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value)));\n    }\n\n    /**\n     * @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n     * calling contract. If `token` returns no value, non-reverting calls are assumed to be successful.\n     */\n    function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {\n        _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value)));\n    }\n\n    /**\n     * @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful.\n     */\n    function safeIncreaseAllowance(IERC20 token, address spender, uint256 value) internal {\n        uint256 oldAllowance = token.allowance(address(this), spender);\n        forceApprove(token, spender, oldAllowance + value);\n    }\n\n    /**\n     * @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n     * value, non-reverting calls are assumed to be successful.\n     */\n    function safeDecreaseAllowance(IERC20 token, address spender, uint256 requestedDecrease) internal {\n        unchecked {\n            uint256 currentAllowance = token.allowance(address(this), spender);\n            if (currentAllowance < requestedDecrease) {\n                revert SafeERC20FailedDecreaseAllowance(spender, currentAllowance, requestedDecrease);\n            }\n            forceApprove(token, spender, currentAllowance - requestedDecrease);\n        }\n    }\n\n    /**\n     * @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n     * non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n     * to be set to zero before setting it to a non-zero value, such as USDT.\n     */\n    function forceApprove(IERC20 token, address spender, uint256 value) internal {\n        bytes memory approvalCall = abi.encodeCall(token.approve, (spender, value));\n\n        if (!_callOptionalReturnBool(token, approvalCall)) {\n            _callOptionalReturn(token, abi.encodeCall(token.approve, (spender, 0)));\n            _callOptionalReturn(token, approvalCall);\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     */\n    function _callOptionalReturn(IERC20 token, bytes memory data) private {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We use {Address-functionCall} to perform this call, which verifies that\n        // the target address contains contract code and also asserts for success in the low-level call.\n\n        bytes memory returndata = address(token).functionCall(data);\n        if (returndata.length != 0 && !abi.decode(returndata, (bool))) {\n            revert SafeERC20FailedOperation(address(token));\n        }\n    }\n\n    /**\n     * @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n     * on the return value: the return value is optional (but if data is returned, it must not be false).\n     * @param token The token targeted by the call.\n     * @param data The call data (encoded using abi.encode or one of its variants).\n     *\n     * This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead.\n     */\n    function _callOptionalReturnBool(IERC20 token, bytes memory data) private returns (bool) {\n        // We need to perform a low level call here, to bypass Solidity's return data size checking mechanism, since\n        // we're implementing it ourselves. We cannot use {Address-functionCall} here since this should return false\n        // and not revert is the subcall reverts.\n\n        (bool success, bytes memory returndata) = address(token).call(data);\n        return success && (returndata.length == 0 || abi.decode(returndata, (bool))) && address(token).code.length > 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20 {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the value of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the value of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves a `value` amount of tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 value) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n     * caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 value) external returns (bool);\n\n    /**\n     * @dev Moves a `value` amount of tokens from `from` to `to` using the\n     * allowance mechanism. `value` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 value) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (token/ERC20/extensions/IERC20Permit.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n * https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n *\n * Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n * presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n * need to send a transaction, and thus is not required to hold Ether at all.\n *\n * ==== Security Considerations\n *\n * There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n * expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n * considered as an intention to spend the allowance in any specific way. The second is that because permits have\n * built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n * take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n * generally recommended is:\n *\n * ```solidity\n * function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n *     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n *     doThing(..., value);\n * }\n *\n * function doThing(..., uint256 value) public {\n *     token.safeTransferFrom(msg.sender, address(this), value);\n *     ...\n * }\n * ```\n *\n * Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n * `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n * {SafeERC20-safeTransferFrom}).\n *\n * Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n * contracts should have entry points that don't rely on permit.\n */\ninterface IERC20Permit {\n    /**\n     * @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n     * given ``owner``'s signed approval.\n     *\n     * IMPORTANT: The same issues {IERC20-approve} has related to transaction\n     * ordering also apply here.\n     *\n     * Emits an {Approval} event.\n     *\n     * Requirements:\n     *\n     * - `spender` cannot be the zero address.\n     * - `deadline` must be a timestamp in the future.\n     * - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n     * over the EIP712-formatted function arguments.\n     * - the signature must use ``owner``'s current nonce (see {nonces}).\n     *\n     * For more information on the signature format, see the\n     * https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n     * section].\n     *\n     * CAUTION: See Security Considerations above.\n     */\n    function permit(\n        address owner,\n        address spender,\n        uint256 value,\n        uint256 deadline,\n        uint8 v,\n        bytes32 r,\n        bytes32 s\n    ) external;\n\n    /**\n     * @dev Returns the current nonce for `owner`. This value must be\n     * included whenever a signature is generated for {permit}.\n     *\n     * Every successful call to {permit} increases ``owner``'s nonce by one. This\n     * prevents a signature from being used multiple times.\n     */\n    function nonces(address owner) external view returns (uint256);\n\n    /**\n     * @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\n     */\n    // solhint-disable-next-line func-name-mixedcase\n    function DOMAIN_SEPARATOR() external view returns (bytes32);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts@5.0.2/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"errors": {
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							]
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the address provided by the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. The initial owner is set to the address provided by the deployer. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"errors\":{\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}]},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the address provided by the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.0.2/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 8,
								"contract": "@openzeppelin/contracts@5.0.2/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol": {
				"IERC20": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol": {
				"IERC20Metadata": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "decimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "name",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "symbol",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface for the optional metadata functions from the ERC20 standard.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the value of tokens owned by `account`."
							},
							"decimals()": {
								"details": "Returns the decimals places of the token."
							},
							"name()": {
								"details": "Returns the name of the token."
							},
							"symbol()": {
								"details": "Returns the symbol of the token."
							},
							"totalSupply()": {
								"details": "Returns the value of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"decimals()": "313ce567",
							"name()": "06fdde03",
							"symbol()": "95d89b41",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets a `value` amount of tokens as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the value of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the value of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves a `value` amount of tokens from `from` to `to` using the allowance mechanism. `value` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol": {
				"IERC20Permit": {
					"abi": [
						{
							"inputs": [],
							"name": "DOMAIN_SEPARATOR",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "nonces",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "deadline",
									"type": "uint256"
								},
								{
									"internalType": "uint8",
									"name": "v",
									"type": "uint8"
								},
								{
									"internalType": "bytes32",
									"name": "r",
									"type": "bytes32"
								},
								{
									"internalType": "bytes32",
									"name": "s",
									"type": "bytes32"
								}
							],
							"name": "permit",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.",
						"kind": "dev",
						"methods": {
							"DOMAIN_SEPARATOR()": {
								"details": "Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
							},
							"nonces(address)": {
								"details": "Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times."
							},
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": {
								"details": "Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DOMAIN_SEPARATOR()": "3644e515",
							"nonces(address)": "7ecebe00",
							"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)": "d505accf"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"deadline\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"v\",\"type\":\"uint8\"},{\"internalType\":\"bytes32\",\"name\":\"r\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"s\",\"type\":\"bytes32\"}],\"name\":\"permit\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in https://eips.ethereum.org/EIPS/eip-2612[EIP-2612]. Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't need to send a transaction, and thus is not required to hold Ether at all. ==== Security Considerations There are two important considerations concerning the use of `permit`. The first is that a valid permit signature expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be considered as an intention to spend the allowance in any specific way. The second is that because permits have built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be generally recommended is: ```solidity function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}     doThing(..., value); } function doThing(..., uint256 value) public {     token.safeTransferFrom(msg.sender, address(this), value);     ... } ``` Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also {SafeERC20-safeTransferFrom}). Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so contracts should have entry points that don't rely on permit.\",\"kind\":\"dev\",\"methods\":{\"DOMAIN_SEPARATOR()\":{\"details\":\"Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}.\"},\"nonces(address)\":{\"details\":\"Returns the current nonce for `owner`. This value must be included whenever a signature is generated for {permit}. Every successful call to {permit} increases ``owner``'s nonce by one. This prevents a signature from being used multiple times.\"},\"permit(address,address,uint256,uint256,uint8,bytes32,bytes32)\":{\"details\":\"Sets `value` as the allowance of `spender` over ``owner``'s tokens, given ``owner``'s signed approval. IMPORTANT: The same issues {IERC20-approve} has related to transaction ordering also apply here. Emits an {Approval} event. Requirements: - `spender` cannot be the zero address. - `deadline` must be a timestamp in the future. - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner` over the EIP712-formatted function arguments. - the signature must use ``owner``'s current nonce (see {nonces}). For more information on the signature format, see the https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP section]. CAUTION: See Security Considerations above.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol\":\"IERC20Permit\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol": {
				"SafeERC20": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "currentAllowance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "requestedDecrease",
									"type": "uint256"
								}
							],
							"name": "SafeERC20FailedDecreaseAllowance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.",
						"errors": {
							"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)": [
								{
									"details": "Indicates a failed `decreaseAllowance` request."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"title": "SafeERC20",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":751:5769  library SafeERC20 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220ace3590e151ebaa5859b3ac89993ab1e7f60bab191ddcd94b7310e9b60ca95e764736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220ace3590e151ebaa5859b3ac89993ab1e7f60bab191ddcd94b7310e9b60ca95e764736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC CALLF 0x590E ISZERO 0x1E 0xBA 0xA5 DUP6 SWAP12 GASPRICE 0xC8 SWAP10 SWAP4 0xAB 0x1E PUSH32 0x60BAB191DDCD94B7310E9B60CA95E764736F6C634300081E0033000000000000 ",
							"sourceMap": "751:5018:4:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220ace3590e151ebaa5859b3ac89993ab1e7f60bab191ddcd94b7310e9b60ca95e764736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xAC CALLF 0x590E ISZERO 0x1E 0xBA 0xA5 DUP6 SWAP12 GASPRICE 0xC8 SWAP10 SWAP4 0xAB 0x1E PUSH32 0x60BAB191DDCD94B7310E9B60CA95E764736F6C634300081E0033000000000000 ",
							"sourceMap": "751:5018:4:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_callOptionalReturn(contract IERC20,bytes memory)": "infinite",
								"_callOptionalReturnBool(contract IERC20,bytes memory)": "infinite",
								"forceApprove(contract IERC20,address,uint256)": "infinite",
								"safeDecreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeIncreaseAllowance(contract IERC20,address,uint256)": "infinite",
								"safeTransfer(contract IERC20,address,uint256)": "infinite",
								"safeTransferFrom(contract IERC20,address,address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH #[$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [$]",
									"source": 4,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "B"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "CODECOPY",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP1",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MLOAD",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "BYTE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "EQ",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH [tag]",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPI",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "4"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "24"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "REVERT",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "tag",
									"source": 4,
									"value": "1"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "JUMPDEST",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "ADDRESS",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "0"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "PUSH",
									"source": 4,
									"value": "73"
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "MSTORE8",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP3",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "DUP2",
									"source": 4
								},
								{
									"begin": 751,
									"end": 5769,
									"name": "RETURN",
									"source": 4
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ace3590e151ebaa5859b3ac89993ab1e7f60bab191ddcd94b7310e9b60ca95e764736f6c634300081e0033",
									".code": [
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSHDEPLOYADDRESS",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "ADDRESS",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 751,
											"end": 5769,
											"name": "REVERT",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.2/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@5.0.2/utils/Address.sol",
								"@openzeppelin/contracts@5.0.2/utils/Context.sol",
								"@openzeppelin/contracts@5.0.2/utils/Pausable.sol",
								"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol",
								"contracts/BountyEscrow.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"currentAllowance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"requestedDecrease\",\"type\":\"uint256\"}],\"name\":\"SafeERC20FailedDecreaseAllowance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers around ERC20 operations that throw on failure (when the token contract returns false). Tokens that return no value (and instead revert or throw on failure) are also supported, non-reverting calls are assumed to be successful. To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract, which allows you to call the safe operations as `token.safeTransfer(...)`, etc.\",\"errors\":{\"SafeERC20FailedDecreaseAllowance(address,uint256,uint256)\":[{\"details\":\"Indicates a failed `decreaseAllowance` request.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{},\"title\":\"SafeERC20\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":\"SafeERC20\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts@5.0.2/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa2646970667358221220d16129ec8fe2461497ce597fed04b74f571aac23258284d90fb6150b58905a0f64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d16129ec8fe2461497ce597fed04b74f571aac23258284d90fb6150b58905a0f64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DATALOADN 0x6129 EOFCREATE 0x8F 0xE2 CHAINID EQ SWAP8 0xCE MSIZE PUSH32 0xED04B74F571AAC23258284D90FB6150B58905A0F64736F6C634300081E003300 ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea2646970667358221220d16129ec8fe2461497ce597fed04b74f571aac23258284d90fb6150b58905a0f64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DATALOADN 0x6129 EOFCREATE 0x8F 0xE2 CHAINID EQ SWAP8 0xCE MSIZE PUSH32 0xED04B74F571AAC23258284D90FB6150B58905A0F64736F6C634300081E003300 ",
							"sourceMap": "195:6066:5:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 5,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 5,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 5,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 5
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 5
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220d16129ec8fe2461497ce597fed04b74f571aac23258284d90fb6150b58905a0f64736f6c634300081e0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 5
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.2/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@5.0.2/utils/Address.sol",
								"@openzeppelin/contracts@5.0.2/utils/Context.sol",
								"@openzeppelin/contracts@5.0.2/utils/Pausable.sol",
								"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol",
								"contracts/BountyEscrow.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/utils/Address.sol\":\"Address\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/utils/Context.sol\":\"Context\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/utils/Pausable.sol": {
				"Pausable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							]
						},
						"events": {
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract in unpaused state."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}]},\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 869,
								"contract": "@openzeppelin/contracts@5.0.2/utils/Pausable.sol:Pausable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol": {
				"ReentrancyGuard": {
					"abi": [
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].",
						"errors": {
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Contract module that helps prevent reentrant calls to a function. Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier available, which can be applied to functions to make sure there are no nested (reentrant) calls to them. Note that because there is a single `nonReentrant` guard, functions marked as `nonReentrant` may not call one another. This can be worked around by making those functions `private`, and then adding `external` `nonReentrant` entry points to them. TIP: If you would like to learn more about reentrancy and alternative ways to protect against it, check out our blog post https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul].\",\"errors\":{\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 988,
								"contract": "@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol:ReentrancyGuard",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"errors": {
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":203:15117  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":203:15117  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa26469706673582212205ea9a4a70aca03b8465992ed7f9844d5e3d8cd11fbe7b5cdbac247402829b2cb64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205ea9a4a70aca03b8465992ed7f9844d5e3d8cd11fbe7b5cdbac247402829b2cb64736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xA9 LOG4 0xA7 EXP 0xCA SUB 0xB8 CHAINID MSIZE SWAP3 0xED PUSH32 0x9844D5E3D8CD11FBE7B5CDBAC247402829B2CB64736F6C634300081E00330000 ",
							"sourceMap": "203:14914:9:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea26469706673582212205ea9a4a70aca03b8465992ed7f9844d5e3d8cd11fbe7b5cdbac247402829b2cb64736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MCOPY 0xA9 LOG4 0xA7 EXP 0xCA SUB 0xB8 CHAINID MSIZE SWAP3 0xED PUSH32 0x9844D5E3D8CD11FBE7B5CDBAC247402829B2CB64736F6C634300081E00330000 ",
							"sourceMap": "203:14914:9:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"log10(uint256)": "infinite",
								"log10(uint256,enum Math.Rounding)": "infinite",
								"log2(uint256)": "infinite",
								"log2(uint256,enum Math.Rounding)": "infinite",
								"log256(uint256)": "infinite",
								"log256(uint256,enum Math.Rounding)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256)": "infinite",
								"mulDiv(uint256,uint256,uint256,enum Math.Rounding)": "infinite",
								"sqrt(uint256)": "infinite",
								"sqrt(uint256,enum Math.Rounding)": "infinite",
								"tryAdd(uint256,uint256)": "infinite",
								"tryDiv(uint256,uint256)": "infinite",
								"tryMod(uint256,uint256)": "infinite",
								"tryMul(uint256,uint256)": "infinite",
								"trySub(uint256,uint256)": "infinite",
								"unsignedRoundsUp(enum Math.Rounding)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH #[$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [$]",
									"source": 9,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "B"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "CODECOPY",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP1",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MLOAD",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "BYTE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "EQ",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH [tag]",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPI",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "4"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "24"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "REVERT",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "tag",
									"source": 9,
									"value": "1"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "JUMPDEST",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "ADDRESS",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "0"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "PUSH",
									"source": 9,
									"value": "73"
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "MSTORE8",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP3",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "DUP2",
									"source": 9
								},
								{
									"begin": 203,
									"end": 15117,
									"name": "RETURN",
									"source": 9
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212205ea9a4a70aca03b8465992ed7f9844d5e3d8cd11fbe7b5cdbac247402829b2cb64736f6c634300081e0033",
									".code": [
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSHDEPLOYADDRESS",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "ADDRESS",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "EQ",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "80"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 203,
											"end": 15117,
											"name": "REVERT",
											"source": 9
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.2/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@5.0.2/utils/Address.sol",
								"@openzeppelin/contracts@5.0.2/utils/Context.sol",
								"@openzeppelin/contracts@5.0.2/utils/Pausable.sol",
								"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol",
								"contracts/BountyEscrow.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"errors\":{\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol": {
				"SafeCast": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "int256",
									"name": "value",
									"type": "int256"
								}
							],
							"name": "SafeCastOverflowedIntToUint",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintToInt",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.",
						"errors": {
							"SafeCastOverflowedIntDowncast(uint8,int256)": [
								{
									"details": "Value doesn't fit in an int of `bits` size."
								}
							],
							"SafeCastOverflowedIntToUint(int256)": [
								{
									"details": "An int value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeCastOverflowedUintToInt(uint256)": [
								{
									"details": "An uint value doesn't fit in an int of `bits` size."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":764:34691  library SafeCast {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":764:34691  library SafeCast {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      revert(0x00, 0x00)\n\n    auxdata: 0xa264697066735822122088ac8d1cf102f5da1600c514d25f8dcf0e485a245b4c72adb1c5f7589a2b608564736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122088ac8d1cf102f5da1600c514d25f8dcf0e485a245b4c72adb1c5f7589a2b608564736f6c634300081e0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xAC DUP14 SHR CALL MUL CREATE2 0xDA AND STOP 0xC5 EQ 0xD2 PUSH0 DUP14 0xCF 0xE BASEFEE GAS 0x24 JUMPDEST 0x4C PUSH19 0xADB1C5F7589A2B608564736F6C634300081E00 CALLER ",
							"sourceMap": "764:33927:10:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f5ffdfea264697066735822122088ac8d1cf102f5da1600c514d25f8dcf0e485a245b4c72adb1c5f7589a2b608564736f6c634300081e0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 PUSH0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP9 0xAC DUP14 SHR CALL MUL CREATE2 0xDA AND STOP 0xC5 EQ 0xD2 PUSH0 DUP14 0xCF 0xE BASEFEE GAS 0x24 JUMPDEST 0x4C PUSH19 0xADB1C5F7589A2B608564736F6C634300081E00 CALLER ",
							"sourceMap": "764:33927:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"toInt104(int256)": "infinite",
								"toInt112(int256)": "infinite",
								"toInt120(int256)": "infinite",
								"toInt128(int256)": "infinite",
								"toInt136(int256)": "infinite",
								"toInt144(int256)": "infinite",
								"toInt152(int256)": "infinite",
								"toInt16(int256)": "infinite",
								"toInt160(int256)": "infinite",
								"toInt168(int256)": "infinite",
								"toInt176(int256)": "infinite",
								"toInt184(int256)": "infinite",
								"toInt192(int256)": "infinite",
								"toInt200(int256)": "infinite",
								"toInt208(int256)": "infinite",
								"toInt216(int256)": "infinite",
								"toInt224(int256)": "infinite",
								"toInt232(int256)": "infinite",
								"toInt24(int256)": "infinite",
								"toInt240(int256)": "infinite",
								"toInt248(int256)": "infinite",
								"toInt256(uint256)": "infinite",
								"toInt32(int256)": "infinite",
								"toInt40(int256)": "infinite",
								"toInt48(int256)": "infinite",
								"toInt56(int256)": "infinite",
								"toInt64(int256)": "infinite",
								"toInt72(int256)": "infinite",
								"toInt8(int256)": "infinite",
								"toInt80(int256)": "infinite",
								"toInt88(int256)": "infinite",
								"toInt96(int256)": "infinite",
								"toUint104(uint256)": "infinite",
								"toUint112(uint256)": "infinite",
								"toUint120(uint256)": "infinite",
								"toUint128(uint256)": "infinite",
								"toUint136(uint256)": "infinite",
								"toUint144(uint256)": "infinite",
								"toUint152(uint256)": "infinite",
								"toUint16(uint256)": "infinite",
								"toUint160(uint256)": "infinite",
								"toUint168(uint256)": "infinite",
								"toUint176(uint256)": "infinite",
								"toUint184(uint256)": "infinite",
								"toUint192(uint256)": "infinite",
								"toUint200(uint256)": "infinite",
								"toUint208(uint256)": "infinite",
								"toUint216(uint256)": "infinite",
								"toUint224(uint256)": "infinite",
								"toUint232(uint256)": "infinite",
								"toUint24(uint256)": "infinite",
								"toUint240(uint256)": "infinite",
								"toUint248(uint256)": "infinite",
								"toUint256(int256)": "infinite",
								"toUint32(uint256)": "infinite",
								"toUint40(uint256)": "infinite",
								"toUint48(uint256)": "infinite",
								"toUint56(uint256)": "infinite",
								"toUint64(uint256)": "infinite",
								"toUint72(uint256)": "infinite",
								"toUint8(uint256)": "infinite",
								"toUint80(uint256)": "infinite",
								"toUint88(uint256)": "infinite",
								"toUint96(uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 10,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 764,
									"end": 34691,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122088ac8d1cf102f5da1600c514d25f8dcf0e485a245b4c72adb1c5f7589a2b608564736f6c634300081e0033",
									".code": [
										{
											"begin": 764,
											"end": 34691,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 764,
											"end": 34691,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.2/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@5.0.2/utils/Address.sol",
								"@openzeppelin/contracts@5.0.2/utils/Context.sol",
								"@openzeppelin/contracts@5.0.2/utils/Pausable.sol",
								"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol",
								"contracts/BountyEscrow.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"value\",\"type\":\"int256\"}],\"name\":\"SafeCastOverflowedIntToUint\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintToInt\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always.\",\"errors\":{\"SafeCastOverflowedIntDowncast(uint8,int256)\":[{\"details\":\"Value doesn't fit in an int of `bits` size.\"}],\"SafeCastOverflowedIntToUint(int256)\":[{\"details\":\"An int value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeCastOverflowedUintToInt(uint256)\":[{\"details\":\"An uint value doesn't fit in an int of `bits` size.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/BountyEscrow.sol": {
				"BountyEscrow": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "usdc_",
									"type": "address"
								},
								{
									"internalType": "uint16",
									"name": "_feeBps",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "_feeVault",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "initialOwner",
									"type": "address"
								}
							],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "AlreadyExists",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "DeadlineNotReached",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidParams",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "MathOverflowedMulDiv",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotOpen",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotResolver",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotSponsor",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "OwnableInvalidOwner",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "OwnableUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ReentrancyGuardReentrantCall",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint8",
									"name": "bits",
									"type": "uint8"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "SafeCastOverflowedUintDowncast",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								}
							],
							"name": "SafeERC20FailedOperation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAddress",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ZeroAmount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "bountyId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "repoIdHash",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "issueNumber",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "deadline",
									"type": "uint64"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "BountyCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "bountyId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Canceled",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint16",
									"name": "feeBps",
									"type": "uint16"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "feeVault",
									"type": "address"
								}
							],
							"name": "FeeParamsUpdated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "bountyId",
									"type": "bytes32"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "newAmount",
									"type": "uint256"
								}
							],
							"name": "Funded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "bountyId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "Refunded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "bountyId",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "net",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "fee",
									"type": "uint256"
								}
							],
							"name": "Resolved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "MAX_FEE_BPS",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "bountyId",
									"type": "bytes32"
								}
							],
							"name": "cancel",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "sponsor",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "repoIdHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint64",
									"name": "issueNumber",
									"type": "uint64"
								}
							],
							"name": "computeBountyId",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "bountyId",
									"type": "bytes32"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "resolver",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "repoIdHash",
									"type": "bytes32"
								},
								{
									"internalType": "uint64",
									"name": "issueNumber",
									"type": "uint64"
								},
								{
									"internalType": "uint64",
									"name": "deadline",
									"type": "uint64"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "createBounty",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "bountyId",
									"type": "bytes32"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeBps",
							"outputs": [
								{
									"internalType": "uint16",
									"name": "",
									"type": "uint16"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "feeVault",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "bountyId",
									"type": "bytes32"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "fund",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "bountyId",
									"type": "bytes32"
								}
							],
							"name": "getBounty",
							"outputs": [
								{
									"components": [
										{
											"internalType": "bytes32",
											"name": "repoIdHash",
											"type": "bytes32"
										},
										{
											"internalType": "address",
											"name": "sponsor",
											"type": "address"
										},
										{
											"internalType": "address",
											"name": "resolver",
											"type": "address"
										},
										{
											"internalType": "uint96",
											"name": "amount",
											"type": "uint96"
										},
										{
											"internalType": "uint64",
											"name": "deadline",
											"type": "uint64"
										},
										{
											"internalType": "uint64",
											"name": "issueNumber",
											"type": "uint64"
										},
										{
											"internalType": "enum BountyEscrow.Status",
											"name": "status",
											"type": "uint8"
										}
									],
									"internalType": "struct BountyEscrow.Bounty",
									"name": "",
									"type": "tuple"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "bountyId",
									"type": "bytes32"
								}
							],
							"name": "refundExpired",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "bountyId",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								}
							],
							"name": "resolve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint16",
									"name": "_feeBps",
									"type": "uint16"
								},
								{
									"internalType": "address",
									"name": "_feeVault",
									"type": "address"
								}
							],
							"name": "setFeeParams",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdc",
							"outputs": [
								{
									"internalType": "contract IERC20",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "usdcDecimals",
							"outputs": [
								{
									"internalType": "uint8",
									"name": "",
									"type": "uint8"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:oz-version": "- OpenZeppelin 5.0.2 (imports pinned via versioned paths).",
						"custom:security": "- Resolver authority is scoped per bounty; cannot change post-creation. - Sponsor is the caller that created the bounty; only sponsor can top-up/cancel/refund. - No arbitrary token transfers; only the configured _usdc is handled. - Fee bounded by MAX_FEE_BPS (10%).",
						"details": "Design: - Token: single ERC-20 (intended USDC). Address immutable. Decimals cached (best-effort, fallback=6). - State machine per-bounty: None → Open → (Resolved | Refunded | Canceled). Terminal states are final. - Funds held in-contract; payouts are pull-style via resolver/sponsor actions. - Fee assessed only on successful resolution; transfers: recipient (net) + feeVault (fee). - Reentrancy: public state-changing entrypoints are nonReentrant; CEI respected. - Pausability: owner can pause/unpause all state-changing flows.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"MathOverflowedMulDiv()": [
								{
									"details": "Muldiv operation overflow."
								}
							],
							"OwnableInvalidOwner(address)": [
								{
									"details": "The owner is not a valid owner account. (eg. `address(0)`)"
								}
							],
							"OwnableUnauthorizedAccount(address)": [
								{
									"details": "The caller account is not authorized to perform an operation."
								}
							],
							"ReentrancyGuardReentrantCall()": [
								{
									"details": "Unauthorized reentrant call."
								}
							],
							"SafeCastOverflowedUintDowncast(uint8,uint256)": [
								{
									"details": "Value doesn't fit in an uint of `bits` size."
								}
							],
							"SafeERC20FailedOperation(address)": [
								{
									"details": "An operation with an ERC20 token failed."
								}
							]
						},
						"events": {
							"BountyCreated(bytes32,address,bytes32,uint64,uint64,address,uint256)": {
								"params": {
									"amount": "Initial funded amount (USDC units).",
									"bountyId": "Deterministic id: keccak256(sponsor, repoIdHash, issueNumber).",
									"deadline": "Expiration timestamp for refund eligibility.",
									"issueNumber": "Issue number within the repository.",
									"repoIdHash": "Repository identifier hash associated with the issue.",
									"resolver": "Address authorized to resolve this bounty.",
									"sponsor": "Bounty sponsor (msg.sender of createBounty)."
								}
							},
							"Canceled(bytes32,address,uint256)": {
								"params": {
									"amount": "Amount returned.",
									"bountyId": "Id of the bounty.",
									"sponsor": "Sponsor receiving the returned funds."
								}
							},
							"FeeParamsUpdated(uint16,address)": {
								"params": {
									"feeBps": "New fee in basis points.",
									"feeVault": "Address to receive fees."
								}
							},
							"Funded(bytes32,uint256)": {
								"params": {
									"bountyId": "Id of the bounty funded.",
									"newAmount": "New total escrowed amount after top-up."
								}
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Refunded(bytes32,address,uint256)": {
								"params": {
									"amount": "Amount refunded.",
									"bountyId": "Id of the bounty.",
									"sponsor": "Sponsor receiving the refund."
								}
							},
							"Resolved(bytes32,address,uint256,uint256)": {
								"params": {
									"bountyId": "Id of the bounty.",
									"fee": "Amount sent to feeVault.",
									"net": "Amount sent to recipient (gross - fee).",
									"recipient": "Address receiving the net payout."
								}
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"cancel(bytes32)": {
								"details": "Only sponsor; bounty must be Open. Sets status to Canceled and returns all funds.",
								"params": {
									"bountyId": "Target bounty."
								}
							},
							"computeBountyId(address,bytes32,uint64)": {
								"details": "Establishes a one-bounty-per (sponsor, repoIdHash, issueNumber) invariant.",
								"params": {
									"issueNumber": "Issue number reference.",
									"repoIdHash": "Repository identifier hash.",
									"sponsor": "Address of the sponsor (creator/funder)."
								},
								"returns": {
									"bountyId": "keccak256(sponsor, repoIdHash, issueNumber)."
								}
							},
							"constructor": {
								"params": {
									"_feeBps": "Initial protocol fee in basis points (≤ MAX_FEE_BPS).",
									"_feeVault": "Address to receive protocol fees on resolution.",
									"initialOwner": "Contract owner (admin for pause/fee params).",
									"usdc_": "ERC-20 token address used for all escrowed transfers (intended USDC)."
								}
							},
							"createBounty(address,bytes32,uint64,uint64,uint256)": {
								"details": "Requirements: - resolver != 0 - repoIdHash != 0 and issueNumber != 0 - deadline > now - amount > 0 - bountyId (sponsor, repoIdHash, issueNumber) must not already exist Effects: - Initializes Bounty struct with Status.Open - Transfers `amount` of _usdc from msg.sender to this contract",
								"params": {
									"amount": "Amount to escrow (USDC units).",
									"deadline": "Timestamp after which sponsor can refund if still Open.",
									"issueNumber": "Issue number within the repository.",
									"repoIdHash": "Repository identifier hash.",
									"resolver": "Address allowed to resolve this bounty."
								},
								"returns": {
									"bountyId": "Deterministic id for the created bounty."
								}
							},
							"fund(bytes32,uint256)": {
								"details": "Only the sponsor can fund. Amount must be > 0. Status must be Open.      Emits the new total escrowed amount for auditability.",
								"params": {
									"amount": "Additional amount to escrow.",
									"bountyId": "Target bounty."
								}
							},
							"getBounty(bytes32)": {
								"details": "Returns a memory copy; safe for off-chain indexing/UX.",
								"params": {
									"bountyId": "Bounty id to query."
								}
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"pause()": {
								"details": "Only owner. Idempotent via OZ Pausable."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"refundExpired(bytes32)": {
								"details": "Only sponsor; requires block.timestamp ≥ deadline.      Sets status to Refunded and returns all funds.",
								"params": {
									"bountyId": "Target bounty."
								}
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
							},
							"resolve(bytes32,address)": {
								"details": "Only the designated resolver; recipient must be non-zero.      Fee = floor(gross * feeBps / 10_000); Net = gross - fee.      Uses Math.mulDiv for precise, overflow-safe multiplication/division.",
								"params": {
									"bountyId": "Target bounty.",
									"recipient": "Address receiving the net payout."
								}
							},
							"setFeeParams(uint16,address)": {
								"details": "Only owner. Fee bounded by MAX_FEE_BPS. feeVault must be non-zero.",
								"params": {
									"_feeBps": "New fee in basis points.",
									"_feeVault": "New fee receiver address."
								}
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"unpause()": {
								"details": "Only owner. Idempotent via OZ Pausable."
							}
						},
						"stateVariables": {
							"FEE_DENOM": {
								"details": "Basis point denominator (10_000 = 100%)."
							},
							"_bounties": {
								"details": "BountyId (keccak256(sponsor, repoIdHash, issueNumber)) → Bounty."
							},
							"_usdc": {
								"details": "Immutable reference to the ERC-20 used for all transfers (intended USDC)."
							},
							"_usdcDecimals": {
								"details": "Cached decimals for display/UX; logic does not assume a specific precision."
							}
						},
						"title": "BountyEscrow",
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/BountyEscrow.sol\":1963:16636  contract BountyEscrow is ReentrancyGuard, Pausable, Ownable {... */\n  mstore(0x40, 0xc0)\n    /* \"contracts/BountyEscrow.sol\":7815:8562  constructor(... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  revert(0x00, 0x00)\ntag_1:\n  pop\n  mload(0x40)\n  sub(codesize, bytecodeSize)\n  dup1\n  bytecodeSize\n  dup4\n  codecopy\n  dup2\n  dup2\n  add\n  0x40\n  mstore\n  dup2\n  add\n  swap1\n  tag_2\n  swap2\n  swap1\n  tag_3\n  jump\t// in\ntag_2:\n    /* \"contracts/BountyEscrow.sol\":7945:7957  initialOwner */\n  dup1\n    /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":1713:1714  1 */\n  0x01\n    /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":1917:1924  _status */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":1917:1938  _status = NOT_ENTERED */\n  dup2\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1241:1246  false */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1231:1238  _paused */\n  0x01\n  0x00\n    /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1231:1246  _paused = false */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1297:1298  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1273:1285  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1273:1299  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  sub\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1350:1351  0 */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1322:1353  OwnableInvalidOwner(address(0)) */\n  mload(0x40)\n  0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_12\n  swap2\n  swap1\n  tag_13\n  jump\t// in\ntag_12:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1269:1364  if (initialOwner == address(0)) {... */\ntag_11:\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  tag_14\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1392:1404  initialOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1373:1391  _transferOwnership */\n  shl(0x20, tag_15)\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1373:1405  _transferOwnership(initialOwner) */\n  0x20\n  shr\n  jump\t// in\ntag_14:\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1225:1412  constructor(address initialOwner) {... */\n  pop\n    /* \"contracts/BountyEscrow.sol\":8003:8004  0 */\n  0x00\n    /* \"contracts/BountyEscrow.sol\":7986:8005  usdc_ == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BountyEscrow.sol\":7986:7991  usdc_ */\n  dup5\n    /* \"contracts/BountyEscrow.sol\":7986:8005  usdc_ == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/BountyEscrow.sol\":7986:8044  usdc_ == address(0) ||... */\n  dup1\n  tag_17\n  jumpi\n  pop\n    /* \"contracts/BountyEscrow.sol\":8042:8043  0 */\n  0x00\n    /* \"contracts/BountyEscrow.sol\":8021:8044  _feeVault == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BountyEscrow.sol\":8021:8030  _feeVault */\n  dup3\n    /* \"contracts/BountyEscrow.sol\":8021:8044  _feeVault == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/BountyEscrow.sol\":7986:8044  usdc_ == address(0) ||... */\ntag_17:\n    /* \"contracts/BountyEscrow.sol\":7986:8086  usdc_ == address(0) ||... */\n  dup1\n  tag_18\n  jumpi\n  pop\n    /* \"contracts/BountyEscrow.sol\":8084:8085  0 */\n  0x00\n    /* \"contracts/BountyEscrow.sol\":8060:8086  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"contracts/BountyEscrow.sol\":8060:8072  initialOwner */\n  dup2\n    /* \"contracts/BountyEscrow.sol\":8060:8086  initialOwner == address(0) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  eq\n    /* \"contracts/BountyEscrow.sol\":7986:8086  usdc_ == address(0) ||... */\ntag_18:\n    /* \"contracts/BountyEscrow.sol\":7969:8117  if (... */\n  iszero\n  tag_19\n  jumpi\n    /* \"contracts/BountyEscrow.sol\":8104:8117  ZeroAddress() */\n  mload(0x40)\n  0xd92e233d00000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/BountyEscrow.sol\":7969:8117  if (... */\ntag_19:\n    /* \"contracts/BountyEscrow.sol\":2199:2204  1_000 */\n  0x03e8\n    /* \"contracts/BountyEscrow.sol\":8131:8152  _feeBps > MAX_FEE_BPS */\n  0xffff\n  and\n    /* \"contracts/BountyEscrow.sol\":8131:8138  _feeBps */\n  dup4\n    /* \"contracts/BountyEscrow.sol\":8131:8152  _feeBps > MAX_FEE_BPS */\n  0xffff\n  and\n  gt\n    /* \"contracts/BountyEscrow.sol\":8127:8176  if (_feeBps > MAX_FEE_BPS) revert InvalidParams() */\n  iszero\n  tag_20\n  jumpi\n    /* \"contracts/BountyEscrow.sol\":8161:8176  InvalidParams() */\n  mload(0x40)\n  0xa86b651200000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"contracts/BountyEscrow.sol\":8127:8176  if (_feeBps > MAX_FEE_BPS) revert InvalidParams() */\ntag_20:\n    /* \"contracts/BountyEscrow.sol\":8202:8207  usdc_ */\n  dup4\n    /* \"contracts/BountyEscrow.sol\":8187:8208  _usdc = IERC20(usdc_) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x80\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/BountyEscrow.sol\":8325:8334  uint8 dec */\n  0x00\n    /* \"contracts/BountyEscrow.sol\":8363:8368  usdc_ */\n  dup5\n    /* \"contracts/BountyEscrow.sol\":8348:8378  IERC20Metadata(usdc_).decimals */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x313ce567\n    /* \"contracts/BountyEscrow.sol\":8348:8380  IERC20Metadata(usdc_).decimals() */\n  mload(0x40)\n  dup2\n  0xffffffff\n  and\n  0xe0\n  shl\n  dup2\n  mstore\n  0x04\n  add\n  0x20\n  mload(0x40)\n  dup1\n  dup4\n  sub\n  dup2\n  dup7\n  gas\n  staticcall\n  swap3\n  pop\n  pop\n  pop\n  dup1\n  iszero\n  tag_21\n  jumpi\n  pop\n  mload(0x40)\n  returndatasize\n  not(0x1f)\n  0x1f\n  dup3\n  add\n  and\n  dup3\n  add\n  dup1\n  0x40\n  mstore\n  pop\n  dup2\n  add\n  swap1\n  tag_22\n  swap2\n  swap1\n  tag_23\n  jump\t// in\ntag_22:\n  0x01\ntag_21:\n    /* \"contracts/BountyEscrow.sol\":8344:8470  try IERC20Metadata(usdc_).decimals() returns (uint8 d) {... */\n  tag_24\n  jumpi\n    /* \"contracts/BountyEscrow.sol\":8458:8459  6 */\n  0x06\n    /* \"contracts/BountyEscrow.sol\":8452:8459  dec = 6 */\n  swap1\n  pop\n    /* \"contracts/BountyEscrow.sol\":8344:8470  try IERC20Metadata(usdc_).decimals() returns (uint8 d) {... */\n  jump(tag_28)\ntag_24:\n    /* \"contracts/BountyEscrow.sol\":8419:8420  d */\n  dup1\n    /* \"contracts/BountyEscrow.sol\":8413:8420  dec = d */\n  swap2\n  pop\n    /* \"contracts/BountyEscrow.sol\":8381:8431  returns (uint8 d) {... */\n  pop\n    /* \"contracts/BountyEscrow.sol\":8344:8470  try IERC20Metadata(usdc_).decimals() returns (uint8 d) {... */\ntag_28:\n    /* \"contracts/BountyEscrow.sol\":8495:8498  dec */\n  dup1\n    /* \"contracts/BountyEscrow.sol\":8479:8498  _usdcDecimals = dec */\n  0xff\n  and\n  0xa0\n  dup2\n  0xff\n  and\n  dup2\n  mstore\n  pop\n  pop\n    /* \"contracts/BountyEscrow.sol\":8518:8525  _feeBps */\n  dup4\n    /* \"contracts/BountyEscrow.sol\":8509:8515  feeBps */\n  0x03\n  0x00\n    /* \"contracts/BountyEscrow.sol\":8509:8525  feeBps = _feeBps */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BountyEscrow.sol\":8546:8555  _feeVault */\n  dup3\n    /* \"contracts/BountyEscrow.sol\":8535:8543  feeVault */\n  0x03\n  0x02\n    /* \"contracts/BountyEscrow.sol\":8535:8555  feeVault = _feeVault */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"contracts/BountyEscrow.sol\":7959:8562  {... */\n  pop\n    /* \"contracts/BountyEscrow.sol\":7815:8562  constructor(... */\n  pop\n  pop\n  pop\n  pop\n    /* \"contracts/BountyEscrow.sol\":1963:16636  contract BountyEscrow is ReentrancyGuard, Pausable, Ownable {... */\n  jump(tag_29)\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\ntag_15:\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2985:3001  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3004:3010  _owner */\n  0x01\n  dup1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3029:3037  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3020:3026  _owner */\n  0x01\n  dup1\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3020:3037  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3083:3091  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3073:3081  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2975:3099  {... */\n  pop\n    /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":88:205   */\ntag_32:\n    /* \"#utility.yul\":197:198   */\n  0x00\n    /* \"#utility.yul\":194:195   */\n  0x00\n    /* \"#utility.yul\":187:199   */\n  revert\n    /* \"#utility.yul\":334:460   */\ntag_34:\n    /* \"#utility.yul\":371:378   */\n  0x00\n    /* \"#utility.yul\":411:453   */\n  0xffffffffffffffffffffffffffffffffffffffff\n    /* \"#utility.yul\":404:409   */\n  dup3\n    /* \"#utility.yul\":400:454   */\n  and\n    /* \"#utility.yul\":389:454   */\n  swap1\n  pop\n    /* \"#utility.yul\":334:460   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":466:562   */\ntag_35:\n    /* \"#utility.yul\":503:510   */\n  0x00\n    /* \"#utility.yul\":532:556   */\n  tag_51\n    /* \"#utility.yul\":550:555   */\n  dup3\n    /* \"#utility.yul\":532:556   */\n  tag_34\n  jump\t// in\ntag_51:\n    /* \"#utility.yul\":521:556   */\n  swap1\n  pop\n    /* \"#utility.yul\":466:562   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":568:690   */\ntag_36:\n    /* \"#utility.yul\":641:665   */\n  tag_53\n    /* \"#utility.yul\":659:664   */\n  dup2\n    /* \"#utility.yul\":641:665   */\n  tag_35\n  jump\t// in\ntag_53:\n    /* \"#utility.yul\":634:639   */\n  dup2\n    /* \"#utility.yul\":631:666   */\n  eq\n    /* \"#utility.yul\":621:684   */\n  tag_54\n  jumpi\n    /* \"#utility.yul\":680:681   */\n  0x00\n    /* \"#utility.yul\":677:678   */\n  0x00\n    /* \"#utility.yul\":670:682   */\n  revert\n    /* \"#utility.yul\":621:684   */\ntag_54:\n    /* \"#utility.yul\":568:690   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":696:839   */\ntag_37:\n    /* \"#utility.yul\":753:758   */\n  0x00\n    /* \"#utility.yul\":784:790   */\n  dup2\n    /* \"#utility.yul\":778:791   */\n  mload\n    /* \"#utility.yul\":769:791   */\n  swap1\n  pop\n    /* \"#utility.yul\":800:833   */\n  tag_56\n    /* \"#utility.yul\":827:832   */\n  dup2\n    /* \"#utility.yul\":800:833   */\n  tag_36\n  jump\t// in\ntag_56:\n    /* \"#utility.yul\":696:839   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":845:934   */\ntag_38:\n    /* \"#utility.yul\":881:888   */\n  0x00\n    /* \"#utility.yul\":921:927   */\n  0xffff\n    /* \"#utility.yul\":914:919   */\n  dup3\n    /* \"#utility.yul\":910:928   */\n  and\n    /* \"#utility.yul\":899:928   */\n  swap1\n  pop\n    /* \"#utility.yul\":845:934   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":940:1060   */\ntag_39:\n    /* \"#utility.yul\":1012:1035   */\n  tag_59\n    /* \"#utility.yul\":1029:1034   */\n  dup2\n    /* \"#utility.yul\":1012:1035   */\n  tag_38\n  jump\t// in\ntag_59:\n    /* \"#utility.yul\":1005:1010   */\n  dup2\n    /* \"#utility.yul\":1002:1036   */\n  eq\n    /* \"#utility.yul\":992:1054   */\n  tag_60\n  jumpi\n    /* \"#utility.yul\":1050:1051   */\n  0x00\n    /* \"#utility.yul\":1047:1048   */\n  0x00\n    /* \"#utility.yul\":1040:1052   */\n  revert\n    /* \"#utility.yul\":992:1054   */\ntag_60:\n    /* \"#utility.yul\":940:1060   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1066:1207   */\ntag_40:\n    /* \"#utility.yul\":1122:1127   */\n  0x00\n    /* \"#utility.yul\":1153:1159   */\n  dup2\n    /* \"#utility.yul\":1147:1160   */\n  mload\n    /* \"#utility.yul\":1138:1160   */\n  swap1\n  pop\n    /* \"#utility.yul\":1169:1201   */\n  tag_62\n    /* \"#utility.yul\":1195:1200   */\n  dup2\n    /* \"#utility.yul\":1169:1201   */\n  tag_39\n  jump\t// in\ntag_62:\n    /* \"#utility.yul\":1066:1207   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":1213:2031   */\ntag_3:\n    /* \"#utility.yul\":1309:1315   */\n  0x00\n    /* \"#utility.yul\":1317:1323   */\n  0x00\n    /* \"#utility.yul\":1325:1331   */\n  0x00\n    /* \"#utility.yul\":1333:1339   */\n  0x00\n    /* \"#utility.yul\":1382:1385   */\n  0x80\n    /* \"#utility.yul\":1370:1379   */\n  dup6\n    /* \"#utility.yul\":1361:1368   */\n  dup8\n    /* \"#utility.yul\":1357:1380   */\n  sub\n    /* \"#utility.yul\":1353:1386   */\n  slt\n    /* \"#utility.yul\":1350:1470   */\n  iszero\n  tag_64\n  jumpi\n    /* \"#utility.yul\":1389:1468   */\n  tag_65\n  tag_32\n  jump\t// in\ntag_65:\n    /* \"#utility.yul\":1350:1470   */\ntag_64:\n    /* \"#utility.yul\":1509:1510   */\n  0x00\n    /* \"#utility.yul\":1534:1598   */\n  tag_66\n    /* \"#utility.yul\":1590:1597   */\n  dup8\n    /* \"#utility.yul\":1581:1587   */\n  dup3\n    /* \"#utility.yul\":1570:1579   */\n  dup9\n    /* \"#utility.yul\":1566:1588   */\n  add\n    /* \"#utility.yul\":1534:1598   */\n  tag_37\n  jump\t// in\ntag_66:\n    /* \"#utility.yul\":1524:1598   */\n  swap5\n  pop\n    /* \"#utility.yul\":1480:1608   */\n  pop\n    /* \"#utility.yul\":1647:1649   */\n  0x20\n    /* \"#utility.yul\":1673:1736   */\n  tag_67\n    /* \"#utility.yul\":1728:1735   */\n  dup8\n    /* \"#utility.yul\":1719:1725   */\n  dup3\n    /* \"#utility.yul\":1708:1717   */\n  dup9\n    /* \"#utility.yul\":1704:1726   */\n  add\n    /* \"#utility.yul\":1673:1736   */\n  tag_40\n  jump\t// in\ntag_67:\n    /* \"#utility.yul\":1663:1736   */\n  swap4\n  pop\n    /* \"#utility.yul\":1618:1746   */\n  pop\n    /* \"#utility.yul\":1785:1787   */\n  0x40\n    /* \"#utility.yul\":1811:1875   */\n  tag_68\n    /* \"#utility.yul\":1867:1874   */\n  dup8\n    /* \"#utility.yul\":1858:1864   */\n  dup3\n    /* \"#utility.yul\":1847:1856   */\n  dup9\n    /* \"#utility.yul\":1843:1865   */\n  add\n    /* \"#utility.yul\":1811:1875   */\n  tag_37\n  jump\t// in\ntag_68:\n    /* \"#utility.yul\":1801:1875   */\n  swap3\n  pop\n    /* \"#utility.yul\":1756:1885   */\n  pop\n    /* \"#utility.yul\":1924:1926   */\n  0x60\n    /* \"#utility.yul\":1950:2014   */\n  tag_69\n    /* \"#utility.yul\":2006:2013   */\n  dup8\n    /* \"#utility.yul\":1997:2003   */\n  dup3\n    /* \"#utility.yul\":1986:1995   */\n  dup9\n    /* \"#utility.yul\":1982:2004   */\n  add\n    /* \"#utility.yul\":1950:2014   */\n  tag_37\n  jump\t// in\ntag_69:\n    /* \"#utility.yul\":1940:2014   */\n  swap2\n  pop\n    /* \"#utility.yul\":1895:2024   */\n  pop\n    /* \"#utility.yul\":1213:2031   */\n  swap3\n  swap6\n  swap2\n  swap5\n  pop\n  swap3\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2037:2155   */\ntag_41:\n    /* \"#utility.yul\":2124:2148   */\n  tag_71\n    /* \"#utility.yul\":2142:2147   */\n  dup2\n    /* \"#utility.yul\":2124:2148   */\n  tag_35\n  jump\t// in\ntag_71:\n    /* \"#utility.yul\":2119:2122   */\n  dup3\n    /* \"#utility.yul\":2112:2149   */\n  mstore\n    /* \"#utility.yul\":2037:2155   */\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2161:2383   */\ntag_13:\n    /* \"#utility.yul\":2254:2258   */\n  0x00\n    /* \"#utility.yul\":2292:2294   */\n  0x20\n    /* \"#utility.yul\":2281:2290   */\n  dup3\n    /* \"#utility.yul\":2277:2295   */\n  add\n    /* \"#utility.yul\":2269:2295   */\n  swap1\n  pop\n    /* \"#utility.yul\":2305:2376   */\n  tag_73\n    /* \"#utility.yul\":2373:2374   */\n  0x00\n    /* \"#utility.yul\":2362:2371   */\n  dup4\n    /* \"#utility.yul\":2358:2375   */\n  add\n    /* \"#utility.yul\":2349:2355   */\n  dup5\n    /* \"#utility.yul\":2305:2376   */\n  tag_41\n  jump\t// in\ntag_73:\n    /* \"#utility.yul\":2161:2383   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2389:2475   */\ntag_42:\n    /* \"#utility.yul\":2424:2431   */\n  0x00\n    /* \"#utility.yul\":2464:2468   */\n  0xff\n    /* \"#utility.yul\":2457:2462   */\n  dup3\n    /* \"#utility.yul\":2453:2469   */\n  and\n    /* \"#utility.yul\":2442:2469   */\n  swap1\n  pop\n    /* \"#utility.yul\":2389:2475   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2481:2599   */\ntag_43:\n    /* \"#utility.yul\":2552:2574   */\n  tag_76\n    /* \"#utility.yul\":2568:2573   */\n  dup2\n    /* \"#utility.yul\":2552:2574   */\n  tag_42\n  jump\t// in\ntag_76:\n    /* \"#utility.yul\":2545:2550   */\n  dup2\n    /* \"#utility.yul\":2542:2575   */\n  eq\n    /* \"#utility.yul\":2532:2593   */\n  tag_77\n  jumpi\n    /* \"#utility.yul\":2589:2590   */\n  0x00\n    /* \"#utility.yul\":2586:2587   */\n  0x00\n    /* \"#utility.yul\":2579:2591   */\n  revert\n    /* \"#utility.yul\":2532:2593   */\ntag_77:\n    /* \"#utility.yul\":2481:2599   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2605:2744   */\ntag_44:\n    /* \"#utility.yul\":2660:2665   */\n  0x00\n    /* \"#utility.yul\":2691:2697   */\n  dup2\n    /* \"#utility.yul\":2685:2698   */\n  mload\n    /* \"#utility.yul\":2676:2698   */\n  swap1\n  pop\n    /* \"#utility.yul\":2707:2738   */\n  tag_79\n    /* \"#utility.yul\":2732:2737   */\n  dup2\n    /* \"#utility.yul\":2707:2738   */\n  tag_43\n  jump\t// in\ntag_79:\n    /* \"#utility.yul\":2605:2744   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":2750:3097   */\ntag_23:\n    /* \"#utility.yul\":2818:2824   */\n  0x00\n    /* \"#utility.yul\":2867:2869   */\n  0x20\n    /* \"#utility.yul\":2855:2864   */\n  dup3\n    /* \"#utility.yul\":2846:2853   */\n  dup5\n    /* \"#utility.yul\":2842:2865   */\n  sub\n    /* \"#utility.yul\":2838:2870   */\n  slt\n    /* \"#utility.yul\":2835:2954   */\n  iszero\n  tag_81\n  jumpi\n    /* \"#utility.yul\":2873:2952   */\n  tag_82\n  tag_32\n  jump\t// in\ntag_82:\n    /* \"#utility.yul\":2835:2954   */\ntag_81:\n    /* \"#utility.yul\":2993:2994   */\n  0x00\n    /* \"#utility.yul\":3018:3080   */\n  tag_83\n    /* \"#utility.yul\":3072:3079   */\n  dup5\n    /* \"#utility.yul\":3063:3069   */\n  dup3\n    /* \"#utility.yul\":3052:3061   */\n  dup6\n    /* \"#utility.yul\":3048:3070   */\n  add\n    /* \"#utility.yul\":3018:3080   */\n  tag_44\n  jump\t// in\ntag_83:\n    /* \"#utility.yul\":3008:3080   */\n  swap2\n  pop\n    /* \"#utility.yul\":2964:3090   */\n  pop\n    /* \"#utility.yul\":2750:3097   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"contracts/BountyEscrow.sol\":1963:16636  contract BountyEscrow is ReentrancyGuard, Pausable, Ownable {... */\ntag_29:\n  mload(0x80)\n  mload(0xa0)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x9d527bfda4d6c4f5fc5208e6fc5f63669a7320385395cb549715c01ebcb43219\")\n  0x00\n  assignImmutable(\"0xa1e6533663c54c1b5791904b25fce23e3c1243e7d3d63ac897424953dc652b69\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"contracts/BountyEscrow.sol\":1963:16636  contract BountyEscrow is ReentrancyGuard, Pausable, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      revert(0x00, 0x00)\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8da5cb5b\n      gt\n      tag_22\n      jumpi\n      dup1\n      0xd1686604\n      gt\n      tag_23\n      jumpi\n      dup1\n      0xd1686604\n      eq\n      tag_17\n      jumpi\n      dup1\n      0xd55be8c6\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xe0120cf8\n      eq\n      tag_19\n      jumpi\n      dup1\n      0xe46bbc9e\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_21\n      jumpi\n      jump(tag_2)\n    tag_23:\n      dup1\n      0x8da5cb5b\n      eq\n      tag_12\n      jumpi\n      dup1\n      0xc23945ac\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xc4d252f5\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xcc3e049b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xcd2025c3\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_22:\n      dup1\n      0x478222c2\n      gt\n      tag_24\n      jumpi\n      dup1\n      0x478222c2\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x7bf42165\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_11\n      jumpi\n      jump(tag_2)\n    tag_24:\n      dup1\n      0x2417395c\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x24a9d853\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x3e413bee\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_6\n      jumpi\n    tag_2:\n      revert(0x00, 0x00)\n        /* \"contracts/BountyEscrow.sol\":16516:16634  function getBounty(bytes32 bountyId) external view returns (Bounty memory) {... */\n    tag_3:\n      tag_25\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_26\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_26:\n      tag_28\n      jump\t// in\n    tag_25:\n      mload(0x40)\n      tag_29\n      swap2\n      swap1\n      tag_30\n      jump\t// in\n    tag_29:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BountyEscrow.sol\":4084:4104  uint16 public feeBps */\n    tag_4:\n      tag_31\n      tag_32\n      jump\t// in\n    tag_31:\n      mload(0x40)\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BountyEscrow.sol\":16059:16135  function usdc() external view returns (IERC20) {... */\n    tag_5:\n      tag_35\n      tag_36\n      jump\t// in\n    tag_35:\n      mload(0x40)\n      tag_37\n      swap2\n      swap1\n      tag_38\n      jump\t// in\n    tag_37:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BountyEscrow.sol\":9587:9652  function unpause() external onlyOwner {... */\n    tag_6:\n      tag_39\n      tag_40\n      jump\t// in\n    tag_39:\n      stop\n        /* \"contracts/BountyEscrow.sol\":4180:4203  address public feeVault */\n    tag_7:\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n      mload(0x40)\n      tag_43\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_43:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_8:\n      tag_45\n      tag_46\n      jump\t// in\n    tag_45:\n      mload(0x40)\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_9:\n      tag_49\n      tag_50\n      jump\t// in\n    tag_49:\n      stop\n        /* \"contracts/BountyEscrow.sol\":16234:16325  function usdcDecimals() external view returns (uint8) {... */\n    tag_10:\n      tag_51\n      tag_52\n      jump\t// in\n    tag_51:\n      mload(0x40)\n      tag_53\n      swap2\n      swap1\n      tag_54\n      jump\t// in\n    tag_53:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BountyEscrow.sol\":9399:9460  function pause() external onlyOwner {... */\n    tag_11:\n      tag_55\n      tag_56\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_12:\n      tag_57\n      tag_58\n      jump\t// in\n    tag_57:\n      mload(0x40)\n      tag_59\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BountyEscrow.sol\":11096:12345  function createBounty(... */\n    tag_13:\n      tag_60\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_61\n      swap2\n      swap1\n      tag_62\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n      tag_64\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_64:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BountyEscrow.sol\":13510:13954  function cancel(bytes32 bountyId) external nonReentrant whenNotPaused {... */\n    tag_14:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/BountyEscrow.sol\":15397:15933  function refundExpired(... */\n    tag_15:\n      tag_69\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_70\n      swap2\n      swap1\n      tag_27\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n    tag_69:\n      stop\n        /* \"contracts/BountyEscrow.sol\":9006:9242  function computeBountyId(... */\n    tag_16:\n      tag_72\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_73\n      swap2\n      swap1\n      tag_74\n      jump\t// in\n    tag_73:\n      tag_75\n      jump\t// in\n    tag_72:\n      mload(0x40)\n      tag_76\n      swap2\n      swap1\n      tag_65\n      jump\t// in\n    tag_76:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BountyEscrow.sol\":14377:15136  function resolve(... */\n    tag_17:\n      tag_77\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_78\n      swap2\n      swap1\n      tag_79\n      jump\t// in\n    tag_78:\n      tag_80\n      jump\t// in\n    tag_77:\n      stop\n        /* \"contracts/BountyEscrow.sol\":2162:2204  uint16 public constant MAX_FEE_BPS = 1_000 */\n    tag_18:\n      tag_81\n      tag_82\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      tag_83\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_83:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/BountyEscrow.sol\":9908:10238  function setFeeParams(... */\n    tag_19:\n      tag_84\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_85\n      swap2\n      swap1\n      tag_86\n      jump\t// in\n    tag_85:\n      tag_87\n      jump\t// in\n    tag_84:\n      stop\n        /* \"contracts/BountyEscrow.sol\":12648:13279  function fund(... */\n    tag_20:\n      tag_88\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_89\n      swap2\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      tag_91\n      jump\t// in\n    tag_88:\n      stop\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_21:\n      tag_92\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_93\n      swap2\n      swap1\n      tag_94\n      jump\t// in\n    tag_93:\n      tag_95\n      jump\t// in\n    tag_92:\n      stop\n        /* \"contracts/BountyEscrow.sol\":16516:16634  function getBounty(bytes32 bountyId) external view returns (Bounty memory) {... */\n    tag_28:\n        /* \"contracts/BountyEscrow.sol\":16576:16589  Bounty memory */\n      tag_96\n      tag_97\n      jump\t// in\n    tag_96:\n        /* \"contracts/BountyEscrow.sol\":16608:16617  _bounties */\n      0x02\n        /* \"contracts/BountyEscrow.sol\":16608:16627  _bounties[bountyId] */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":16618:16626  bountyId */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":16608:16627  _bounties[bountyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BountyEscrow.sol\":16601:16627  return _bounties[bountyId] */\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      swap1\n      dup2\n      0x00\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x02\n      dup3\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x08\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      0xffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      0x03\n      dup3\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n      0x04\n      dup2\n      gt\n      iszero\n      tag_99\n      jumpi\n      tag_100\n      tag_101\n      jump\t// in\n    tag_100:\n    tag_99:\n      0x04\n      dup2\n      gt\n      iszero\n      tag_102\n      jumpi\n      tag_103\n      tag_101\n      jump\t// in\n    tag_103:\n    tag_102:\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":16516:16634  function getBounty(bytes32 bountyId) external view returns (Bounty memory) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":4084:4104  uint16 public feeBps */\n    tag_32:\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n      dup2\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":16059:16135  function usdc() external view returns (IERC20) {... */\n    tag_36:\n        /* \"contracts/BountyEscrow.sol\":16098:16104  IERC20 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":16123:16128  _usdc */\n      immutable(\"0xa1e6533663c54c1b5791904b25fce23e3c1243e7d3d63ac897424953dc652b69\")\n        /* \"contracts/BountyEscrow.sol\":16116:16128  return _usdc */\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":16059:16135  function usdc() external view returns (IERC20) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":9587:9652  function unpause() external onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_106\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_106:\n        /* \"contracts/BountyEscrow.sol\":9635:9645  _unpause() */\n      tag_109\n        /* \"contracts/BountyEscrow.sol\":9635:9643  _unpause */\n      tag_110\n        /* \"contracts/BountyEscrow.sol\":9635:9645  _unpause() */\n      jump\t// in\n    tag_109:\n        /* \"contracts/BountyEscrow.sol\":9587:9652  function unpause() external onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":4180:4203  address public feeVault */\n    tag_42:\n      0x03\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n    tag_46:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1897:1901  bool */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1920:1927  _paused */\n      0x01\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1913:1927  return _paused */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1850:1934  function paused() public view virtual returns (bool) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n    tag_50:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_113\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      tag_115\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2384:2385  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2357:2375  _transferOwnership */\n      tag_116\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2357:2387  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_115:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2293:2394  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":16234:16325  function usdcDecimals() external view returns (uint8) {... */\n    tag_52:\n        /* \"contracts/BountyEscrow.sol\":16281:16286  uint8 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":16305:16318  _usdcDecimals */\n      immutable(\"0x9d527bfda4d6c4f5fc5208e6fc5f63669a7320385395cb549715c01ebcb43219\")\n        /* \"contracts/BountyEscrow.sol\":16298:16318  return _usdcDecimals */\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":16234:16325  function usdcDecimals() external view returns (uint8) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":9399:9460  function pause() external onlyOwner {... */\n    tag_56:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_119\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_119:\n        /* \"contracts/BountyEscrow.sol\":9445:9453  _pause() */\n      tag_121\n        /* \"contracts/BountyEscrow.sol\":9445:9451  _pause */\n      tag_122\n        /* \"contracts/BountyEscrow.sol\":9445:9453  _pause() */\n      jump\t// in\n    tag_121:\n        /* \"contracts/BountyEscrow.sol\":9399:9460  function pause() external onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n    tag_58:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1684:1691  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1710:1716  _owner */\n      0x01\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1703:1716  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1638:1723  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":11096:12345  function createBounty(... */\n    tag_63:\n        /* \"contracts/BountyEscrow.sol\":11300:11316  bytes32 bountyId */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_125\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_126\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_128\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_129\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_128:\n        /* \"contracts/BountyEscrow.sol\":11352:11353  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":11332:11354  resolver == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":11332:11340  resolver */\n      dup7\n        /* \"contracts/BountyEscrow.sol\":11332:11354  resolver == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BountyEscrow.sol\":11328:11376  if (resolver == address(0)) revert ZeroAddress() */\n      tag_131\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":11363:11376  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":11328:11376  if (resolver == address(0)) revert ZeroAddress() */\n    tag_131:\n        /* \"contracts/BountyEscrow.sol\":11412:11413  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":11404:11414  bytes32(0) */\n      0x00\n      shl\n        /* \"contracts/BountyEscrow.sol\":11390:11400  repoIdHash */\n      dup6\n        /* \"contracts/BountyEscrow.sol\":11390:11414  repoIdHash == bytes32(0) */\n      eq\n        /* \"contracts/BountyEscrow.sol\":11390:11434  repoIdHash == bytes32(0) || issueNumber == 0 */\n      dup1\n      tag_132\n      jumpi\n      pop\n        /* \"contracts/BountyEscrow.sol\":11433:11434  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":11418:11429  issueNumber */\n      dup5\n        /* \"contracts/BountyEscrow.sol\":11418:11434  issueNumber == 0 */\n      0xffffffffffffffff\n      and\n      eq\n        /* \"contracts/BountyEscrow.sol\":11390:11434  repoIdHash == bytes32(0) || issueNumber == 0 */\n    tag_132:\n        /* \"contracts/BountyEscrow.sol\":11386:11470  if (repoIdHash == bytes32(0) || issueNumber == 0)... */\n      iszero\n      tag_133\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":11455:11470  InvalidParams() */\n      mload(0x40)\n      0xa86b651200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":11386:11470  if (repoIdHash == bytes32(0) || issueNumber == 0)... */\n    tag_133:\n        /* \"contracts/BountyEscrow.sol\":11496:11511  block.timestamp */\n      timestamp\n        /* \"contracts/BountyEscrow.sol\":11484:11492  deadline */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":11484:11511  deadline <= block.timestamp */\n      0xffffffffffffffff\n      and\n      gt\n        /* \"contracts/BountyEscrow.sol\":11480:11535  if (deadline <= block.timestamp) revert InvalidParams() */\n      tag_134\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":11520:11535  InvalidParams() */\n      mload(0x40)\n      0xa86b651200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":11480:11535  if (deadline <= block.timestamp) revert InvalidParams() */\n    tag_134:\n        /* \"contracts/BountyEscrow.sol\":11559:11560  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":11549:11555  amount */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":11549:11560  amount == 0 */\n      sub\n        /* \"contracts/BountyEscrow.sol\":11545:11581  if (amount == 0) revert ZeroAmount() */\n      tag_135\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":11569:11581  ZeroAmount() */\n      mload(0x40)\n      0x1f2a200500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":11545:11581  if (amount == 0) revert ZeroAmount() */\n    tag_135:\n        /* \"contracts/BountyEscrow.sol\":11603:11655  computeBountyId(msg.sender, repoIdHash, issueNumber) */\n      tag_136\n        /* \"contracts/BountyEscrow.sol\":11619:11629  msg.sender */\n      caller\n        /* \"contracts/BountyEscrow.sol\":11631:11641  repoIdHash */\n      dup7\n        /* \"contracts/BountyEscrow.sol\":11643:11654  issueNumber */\n      dup7\n        /* \"contracts/BountyEscrow.sol\":11603:11618  computeBountyId */\n      tag_75\n        /* \"contracts/BountyEscrow.sol\":11603:11655  computeBountyId(msg.sender, repoIdHash, issueNumber) */\n      jump\t// in\n    tag_136:\n        /* \"contracts/BountyEscrow.sol\":11592:11655  bountyId = computeBountyId(msg.sender, repoIdHash, issueNumber) */\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":11699:11710  Status.None */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":11669:11710  _bounties[bountyId].status != Status.None */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_137\n      jumpi\n      tag_138\n      tag_101\n      jump\t// in\n    tag_138:\n    tag_137:\n        /* \"contracts/BountyEscrow.sol\":11669:11678  _bounties */\n      0x02\n        /* \"contracts/BountyEscrow.sol\":11669:11688  _bounties[bountyId] */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":11679:11687  bountyId */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":11669:11688  _bounties[bountyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BountyEscrow.sol\":11669:11695  _bounties[bountyId].status */\n      0x03\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BountyEscrow.sol\":11669:11710  _bounties[bountyId].status != Status.None */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_139\n      jumpi\n      tag_140\n      tag_101\n      jump\t// in\n    tag_140:\n    tag_139:\n      eq\n        /* \"contracts/BountyEscrow.sol\":11665:11734  if (_bounties[bountyId].status != Status.None) revert AlreadyExists() */\n      tag_141\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":11719:11734  AlreadyExists() */\n      mload(0x40)\n      0x23369fa600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":11665:11734  if (_bounties[bountyId].status != Status.None) revert AlreadyExists() */\n    tag_141:\n        /* \"contracts/BountyEscrow.sol\":11745:11761  Bounty storage b */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":11764:11773  _bounties */\n      0x02\n        /* \"contracts/BountyEscrow.sol\":11764:11783  _bounties[bountyId] */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":11774:11782  bountyId */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":11764:11783  _bounties[bountyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BountyEscrow.sol\":11745:11783  Bounty storage b = _bounties[bountyId] */\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":11808:11818  repoIdHash */\n      dup6\n        /* \"contracts/BountyEscrow.sol\":11793:11794  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":11793:11805  b.repoIdHash */\n      0x00\n      add\n        /* \"contracts/BountyEscrow.sol\":11793:11818  b.repoIdHash = repoIdHash */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":11840:11850  msg.sender */\n      caller\n        /* \"contracts/BountyEscrow.sol\":11828:11829  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":11828:11837  b.sponsor */\n      0x01\n      add\n      0x00\n        /* \"contracts/BountyEscrow.sol\":11828:11850  b.sponsor = msg.sender */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":11873:11881  resolver */\n      dup7\n        /* \"contracts/BountyEscrow.sol\":11860:11861  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":11860:11870  b.resolver */\n      0x02\n      add\n      0x00\n        /* \"contracts/BountyEscrow.sol\":11860:11881  b.resolver = resolver */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":11902:11919  amount.toUint96() */\n      tag_142\n        /* \"contracts/BountyEscrow.sol\":11902:11908  amount */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":11902:11917  amount.toUint96 */\n      tag_143\n        /* \"contracts/BountyEscrow.sol\":11902:11919  amount.toUint96() */\n      jump\t// in\n    tag_142:\n        /* \"contracts/BountyEscrow.sol\":11891:11892  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":11891:11899  b.amount */\n      0x02\n      add\n      0x14\n        /* \"contracts/BountyEscrow.sol\":11891:11919  b.amount = amount.toUint96() */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":11995:12003  deadline */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":11982:11983  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":11982:11992  b.deadline */\n      0x03\n      add\n      0x00\n        /* \"contracts/BountyEscrow.sol\":11982:12003  b.deadline = deadline */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":12029:12040  issueNumber */\n      dup5\n        /* \"contracts/BountyEscrow.sol\":12013:12014  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":12013:12026  b.issueNumber */\n      0x03\n      add\n      0x08\n        /* \"contracts/BountyEscrow.sol\":12013:12040  b.issueNumber = issueNumber */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":12061:12072  Status.Open */\n      0x01\n        /* \"contracts/BountyEscrow.sol\":12050:12051  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":12050:12058  b.status */\n      0x03\n      add\n      0x10\n        /* \"contracts/BountyEscrow.sol\":12050:12072  b.status = Status.Open */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_144\n      jumpi\n      tag_145\n      tag_101\n      jump\t// in\n    tag_145:\n    tag_144:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":12083:12140  _usdc.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_146\n        /* \"contracts/BountyEscrow.sol\":12106:12116  msg.sender */\n      caller\n        /* \"contracts/BountyEscrow.sol\":12126:12130  this */\n      address\n        /* \"contracts/BountyEscrow.sol\":12133:12139  amount */\n      dup6\n        /* \"contracts/BountyEscrow.sol\":12083:12088  _usdc */\n      immutable(\"0xa1e6533663c54c1b5791904b25fce23e3c1243e7d3d63ac897424953dc652b69\")\n        /* \"contracts/BountyEscrow.sol\":12083:12105  _usdc.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_147\n      swap1\n        /* \"contracts/BountyEscrow.sol\":12083:12140  _usdc.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_146:\n        /* \"contracts/BountyEscrow.sol\":12229:12239  repoIdHash */\n      dup6\n        /* \"contracts/BountyEscrow.sol\":12205:12215  msg.sender */\n      caller\n        /* \"contracts/BountyEscrow.sol\":12156:12338  BountyCreated(... */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":12183:12191  bountyId */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":12156:12338  BountyCreated(... */\n      0xb9f72851bf0c89db77e8b273bf29aef517207f92830df76851a309f1a6c5c80e\n        /* \"contracts/BountyEscrow.sol\":12253:12264  issueNumber */\n      dup9\n        /* \"contracts/BountyEscrow.sol\":12278:12286  deadline */\n      dup9\n        /* \"contracts/BountyEscrow.sol\":12300:12308  resolver */\n      dup13\n        /* \"contracts/BountyEscrow.sol\":12322:12328  amount */\n      dup10\n        /* \"contracts/BountyEscrow.sol\":12156:12338  BountyCreated(... */\n      mload(0x40)\n      tag_148\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n    tag_148:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"contracts/BountyEscrow.sol\":11318:12345  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_150\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_151\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_150:\n        /* \"contracts/BountyEscrow.sol\":11096:12345  function createBounty(... */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":13510:13954  function cancel(bytes32 bountyId) external nonReentrant whenNotPaused {... */\n    tag_68:\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_153\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_126\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_153:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_155\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_129\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_155:\n        /* \"contracts/BountyEscrow.sol\":13590:13606  Bounty storage b */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":13609:13618  _bounties */\n      0x02\n        /* \"contracts/BountyEscrow.sol\":13609:13628  _bounties[bountyId] */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":13619:13627  bountyId */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":13609:13628  _bounties[bountyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BountyEscrow.sol\":13590:13628  Bounty storage b = _bounties[bountyId] */\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":13654:13665  Status.Open */\n      0x01\n        /* \"contracts/BountyEscrow.sol\":13642:13665  b.status != Status.Open */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_157\n      jumpi\n      tag_158\n      tag_101\n      jump\t// in\n    tag_158:\n    tag_157:\n        /* \"contracts/BountyEscrow.sol\":13642:13643  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":13642:13650  b.status */\n      0x03\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BountyEscrow.sol\":13642:13665  b.status != Status.Open */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_159\n      jumpi\n      tag_160\n      tag_101\n      jump\t// in\n    tag_160:\n    tag_159:\n      eq\n        /* \"contracts/BountyEscrow.sol\":13638:13683  if (b.status != Status.Open) revert NotOpen() */\n      tag_161\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":13674:13683  NotOpen() */\n      mload(0x40)\n      0xddafad9800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":13638:13683  if (b.status != Status.Open) revert NotOpen() */\n    tag_161:\n        /* \"contracts/BountyEscrow.sol\":13711:13712  b */\n      dup1\n        /* \"contracts/BountyEscrow.sol\":13711:13720  b.sponsor */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":13697:13720  msg.sender != b.sponsor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":13697:13707  msg.sender */\n      caller\n        /* \"contracts/BountyEscrow.sol\":13697:13720  msg.sender != b.sponsor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BountyEscrow.sol\":13693:13741  if (msg.sender != b.sponsor) revert NotSponsor() */\n      tag_162\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":13729:13741  NotSponsor() */\n      mload(0x40)\n      0xdf4795c700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":13693:13741  if (msg.sender != b.sponsor) revert NotSponsor() */\n    tag_162:\n        /* \"contracts/BountyEscrow.sol\":13763:13778  Status.Canceled */\n      0x04\n        /* \"contracts/BountyEscrow.sol\":13752:13753  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":13752:13760  b.status */\n      0x03\n      add\n      0x10\n        /* \"contracts/BountyEscrow.sol\":13752:13778  b.status = Status.Canceled */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_163\n      jumpi\n      tag_164\n      tag_101\n      jump\t// in\n    tag_164:\n    tag_163:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":13788:13801  uint256 gross */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":13804:13805  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":13804:13812  b.amount */\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":13788:13812  uint256 gross = b.amount */\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":13833:13834  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":13822:13823  b */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":13822:13830  b.amount */\n      0x02\n      add\n      0x14\n        /* \"contracts/BountyEscrow.sol\":13822:13834  b.amount = 0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":13857:13858  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":13849:13854  gross */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":13849:13858  gross > 0 */\n      gt\n        /* \"contracts/BountyEscrow.sol\":13845:13896  if (gross > 0) _usdc.safeTransfer(b.sponsor, gross) */\n      iszero\n      tag_165\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":13860:13896  _usdc.safeTransfer(b.sponsor, gross) */\n      tag_166\n        /* \"contracts/BountyEscrow.sol\":13879:13880  b */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":13879:13888  b.sponsor */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":13890:13895  gross */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":13860:13865  _usdc */\n      immutable(\"0xa1e6533663c54c1b5791904b25fce23e3c1243e7d3d63ac897424953dc652b69\")\n        /* \"contracts/BountyEscrow.sol\":13860:13878  _usdc.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_167\n      swap1\n        /* \"contracts/BountyEscrow.sol\":13860:13896  _usdc.safeTransfer(b.sponsor, gross) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_166:\n        /* \"contracts/BountyEscrow.sol\":13845:13896  if (gross > 0) _usdc.safeTransfer(b.sponsor, gross) */\n    tag_165:\n        /* \"contracts/BountyEscrow.sol\":13930:13931  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":13930:13939  b.sponsor */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":13911:13947  Canceled(bountyId, b.sponsor, gross) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":13920:13928  bountyId */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":13911:13947  Canceled(bountyId, b.sponsor, gross) */\n      0x13ca42b383dddac8a499886c122185485535c8144d34355991f87265cfbee4cc\n        /* \"contracts/BountyEscrow.sol\":13941:13946  gross */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":13911:13947  Canceled(bountyId, b.sponsor, gross) */\n      mload(0x40)\n      tag_168\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_168:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BountyEscrow.sol\":13580:13954  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_170\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_151\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_170:\n        /* \"contracts/BountyEscrow.sol\":13510:13954  function cancel(bytes32 bountyId) external nonReentrant whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":15397:15933  function refundExpired(... */\n    tag_71:\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_172\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_126\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_172:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_174\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_129\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_174:\n        /* \"contracts/BountyEscrow.sol\":15498:15514  Bounty storage b */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":15517:15526  _bounties */\n      0x02\n        /* \"contracts/BountyEscrow.sol\":15517:15536  _bounties[bountyId] */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":15527:15535  bountyId */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":15517:15536  _bounties[bountyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BountyEscrow.sol\":15498:15536  Bounty storage b = _bounties[bountyId] */\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":15562:15573  Status.Open */\n      0x01\n        /* \"contracts/BountyEscrow.sol\":15550:15573  b.status != Status.Open */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_176\n      jumpi\n      tag_177\n      tag_101\n      jump\t// in\n    tag_177:\n    tag_176:\n        /* \"contracts/BountyEscrow.sol\":15550:15551  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":15550:15558  b.status */\n      0x03\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BountyEscrow.sol\":15550:15573  b.status != Status.Open */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_178\n      jumpi\n      tag_179\n      tag_101\n      jump\t// in\n    tag_179:\n    tag_178:\n      eq\n        /* \"contracts/BountyEscrow.sol\":15546:15591  if (b.status != Status.Open) revert NotOpen() */\n      tag_180\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":15582:15591  NotOpen() */\n      mload(0x40)\n      0xddafad9800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":15546:15591  if (b.status != Status.Open) revert NotOpen() */\n    tag_180:\n        /* \"contracts/BountyEscrow.sol\":15623:15624  b */\n      dup1\n        /* \"contracts/BountyEscrow.sol\":15623:15633  b.deadline */\n      0x03\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":15605:15633  block.timestamp < b.deadline */\n      0xffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":15605:15620  block.timestamp */\n      timestamp\n        /* \"contracts/BountyEscrow.sol\":15605:15633  block.timestamp < b.deadline */\n      lt\n        /* \"contracts/BountyEscrow.sol\":15601:15662  if (block.timestamp < b.deadline) revert DeadlineNotReached() */\n      iszero\n      tag_181\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":15642:15662  DeadlineNotReached() */\n      mload(0x40)\n      0x66ec4ee600000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":15601:15662  if (block.timestamp < b.deadline) revert DeadlineNotReached() */\n    tag_181:\n        /* \"contracts/BountyEscrow.sol\":15690:15691  b */\n      dup1\n        /* \"contracts/BountyEscrow.sol\":15690:15699  b.sponsor */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":15676:15699  msg.sender != b.sponsor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":15676:15686  msg.sender */\n      caller\n        /* \"contracts/BountyEscrow.sol\":15676:15699  msg.sender != b.sponsor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BountyEscrow.sol\":15672:15720  if (msg.sender != b.sponsor) revert NotSponsor() */\n      tag_182\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":15708:15720  NotSponsor() */\n      mload(0x40)\n      0xdf4795c700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":15672:15720  if (msg.sender != b.sponsor) revert NotSponsor() */\n    tag_182:\n        /* \"contracts/BountyEscrow.sol\":15742:15757  Status.Refunded */\n      0x03\n        /* \"contracts/BountyEscrow.sol\":15731:15732  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":15731:15739  b.status */\n      0x03\n      add\n      0x10\n        /* \"contracts/BountyEscrow.sol\":15731:15757  b.status = Status.Refunded */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_183\n      jumpi\n      tag_184\n      tag_101\n      jump\t// in\n    tag_184:\n    tag_183:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":15767:15780  uint256 gross */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":15783:15784  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":15783:15791  b.amount */\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":15767:15791  uint256 gross = b.amount */\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":15812:15813  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":15801:15802  b */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":15801:15809  b.amount */\n      0x02\n      add\n      0x14\n        /* \"contracts/BountyEscrow.sol\":15801:15813  b.amount = 0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":15836:15837  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":15828:15833  gross */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":15828:15837  gross > 0 */\n      gt\n        /* \"contracts/BountyEscrow.sol\":15824:15875  if (gross > 0) _usdc.safeTransfer(b.sponsor, gross) */\n      iszero\n      tag_185\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":15839:15875  _usdc.safeTransfer(b.sponsor, gross) */\n      tag_186\n        /* \"contracts/BountyEscrow.sol\":15858:15859  b */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":15858:15867  b.sponsor */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":15869:15874  gross */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":15839:15844  _usdc */\n      immutable(\"0xa1e6533663c54c1b5791904b25fce23e3c1243e7d3d63ac897424953dc652b69\")\n        /* \"contracts/BountyEscrow.sol\":15839:15857  _usdc.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_167\n      swap1\n        /* \"contracts/BountyEscrow.sol\":15839:15875  _usdc.safeTransfer(b.sponsor, gross) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_186:\n        /* \"contracts/BountyEscrow.sol\":15824:15875  if (gross > 0) _usdc.safeTransfer(b.sponsor, gross) */\n    tag_185:\n        /* \"contracts/BountyEscrow.sol\":15909:15910  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":15909:15918  b.sponsor */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":15890:15926  Refunded(bountyId, b.sponsor, gross) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":15899:15907  bountyId */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":15890:15926  Refunded(bountyId, b.sponsor, gross) */\n      0xf552ca82e113ac3c539c3d617f29fcd19c172a0c75dad017555c9e109f7fe183\n        /* \"contracts/BountyEscrow.sol\":15920:15925  gross */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":15890:15926  Refunded(bountyId, b.sponsor, gross) */\n      mload(0x40)\n      tag_187\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_187:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BountyEscrow.sol\":15488:15933  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_188\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_151\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_188:\n        /* \"contracts/BountyEscrow.sol\":15397:15933  function refundExpired(... */\n      pop\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":9006:9242  function computeBountyId(... */\n    tag_75:\n        /* \"contracts/BountyEscrow.sol\":9139:9155  bytes32 bountyId */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":9201:9208  sponsor */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":9210:9220  repoIdHash */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":9222:9233  issueNumber */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":9184:9234  abi.encodePacked(sponsor, repoIdHash, issueNumber) */\n      add(0x20, mload(0x40))\n      tag_190\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_191\n      jump\t// in\n    tag_190:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"contracts/BountyEscrow.sol\":9174:9235  keccak256(abi.encodePacked(sponsor, repoIdHash, issueNumber)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"contracts/BountyEscrow.sol\":9167:9235  return keccak256(abi.encodePacked(sponsor, repoIdHash, issueNumber)) */\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":9006:9242  function computeBountyId(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":14377:15136  function resolve(... */\n    tag_80:\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_193\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_126\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_193:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_195\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_129\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_195:\n        /* \"contracts/BountyEscrow.sol\":14524:14525  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":14503:14526  recipient == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":14503:14512  recipient */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":14503:14526  recipient == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BountyEscrow.sol\":14499:14548  if (recipient == address(0)) revert ZeroAddress() */\n      tag_197\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":14535:14548  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":14499:14548  if (recipient == address(0)) revert ZeroAddress() */\n    tag_197:\n        /* \"contracts/BountyEscrow.sol\":14559:14575  Bounty storage b */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":14578:14587  _bounties */\n      0x02\n        /* \"contracts/BountyEscrow.sol\":14578:14597  _bounties[bountyId] */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":14588:14596  bountyId */\n      dup5\n        /* \"contracts/BountyEscrow.sol\":14578:14597  _bounties[bountyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BountyEscrow.sol\":14559:14597  Bounty storage b = _bounties[bountyId] */\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":14623:14634  Status.Open */\n      0x01\n        /* \"contracts/BountyEscrow.sol\":14611:14634  b.status != Status.Open */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_198\n      jumpi\n      tag_199\n      tag_101\n      jump\t// in\n    tag_199:\n    tag_198:\n        /* \"contracts/BountyEscrow.sol\":14611:14612  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":14611:14619  b.status */\n      0x03\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BountyEscrow.sol\":14611:14634  b.status != Status.Open */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_200\n      jumpi\n      tag_201\n      tag_101\n      jump\t// in\n    tag_201:\n    tag_200:\n      eq\n        /* \"contracts/BountyEscrow.sol\":14607:14652  if (b.status != Status.Open) revert NotOpen() */\n      tag_202\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":14643:14652  NotOpen() */\n      mload(0x40)\n      0xddafad9800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":14607:14652  if (b.status != Status.Open) revert NotOpen() */\n    tag_202:\n        /* \"contracts/BountyEscrow.sol\":14680:14681  b */\n      dup1\n        /* \"contracts/BountyEscrow.sol\":14680:14690  b.resolver */\n      0x02\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":14666:14690  msg.sender != b.resolver */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":14666:14676  msg.sender */\n      caller\n        /* \"contracts/BountyEscrow.sol\":14666:14690  msg.sender != b.resolver */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BountyEscrow.sol\":14662:14712  if (msg.sender != b.resolver) revert NotResolver() */\n      tag_203\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":14699:14712  NotResolver() */\n      mload(0x40)\n      0xba2a9fc200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":14662:14712  if (msg.sender != b.resolver) revert NotResolver() */\n    tag_203:\n        /* \"contracts/BountyEscrow.sol\":14734:14749  Status.Resolved */\n      0x02\n        /* \"contracts/BountyEscrow.sol\":14723:14724  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":14723:14731  b.status */\n      0x03\n      add\n      0x10\n        /* \"contracts/BountyEscrow.sol\":14723:14749  b.status = Status.Resolved */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0x04\n      dup2\n      gt\n      iszero\n      tag_204\n      jumpi\n      tag_205\n      tag_101\n      jump\t// in\n    tag_205:\n    tag_204:\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":14759:14772  uint256 gross */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":14775:14776  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":14775:14783  b.amount */\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":14759:14783  uint256 gross = b.amount */\n      0xffffffffffffffffffffffff\n      and\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":14804:14805  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":14793:14794  b */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":14793:14801  b.amount */\n      0x02\n      add\n      0x14\n        /* \"contracts/BountyEscrow.sol\":14793:14805  b.amount = 0 */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":14874:14885  uint256 fee */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":14888:14925  Math.mulDiv(gross, feeBps, FEE_DENOM) */\n      tag_206\n        /* \"contracts/BountyEscrow.sol\":14900:14905  gross */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":14907:14913  feeBps */\n      0x03\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffff\n      and\n        /* \"contracts/BountyEscrow.sol\":14888:14925  Math.mulDiv(gross, feeBps, FEE_DENOM) */\n      0xffff\n      and\n        /* \"contracts/BountyEscrow.sol\":2302:2308  10_000 */\n      0x2710\n        /* \"contracts/BountyEscrow.sol\":14888:14899  Math.mulDiv */\n      tag_207\n        /* \"contracts/BountyEscrow.sol\":14888:14925  Math.mulDiv(gross, feeBps, FEE_DENOM) */\n      jump\t// in\n    tag_206:\n        /* \"contracts/BountyEscrow.sol\":14874:14925  uint256 fee = Math.mulDiv(gross, feeBps, FEE_DENOM) */\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":14935:14946  uint256 net */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":14957:14960  fee */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":14949:14954  gross */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":14949:14960  gross - fee */\n      tag_208\n      swap2\n      swap1\n      tag_209\n      jump\t// in\n    tag_208:\n        /* \"contracts/BountyEscrow.sol\":14935:14960  uint256 net = gross - fee */\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":14981:14982  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":14975:14978  net */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":14975:14982  net > 0 */\n      gt\n        /* \"contracts/BountyEscrow.sol\":14971:15018  if (net > 0) _usdc.safeTransfer(recipient, net) */\n      iszero\n      tag_210\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":14984:15018  _usdc.safeTransfer(recipient, net) */\n      tag_211\n        /* \"contracts/BountyEscrow.sol\":15003:15012  recipient */\n      dup6\n        /* \"contracts/BountyEscrow.sol\":15014:15017  net */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":14984:14989  _usdc */\n      immutable(\"0xa1e6533663c54c1b5791904b25fce23e3c1243e7d3d63ac897424953dc652b69\")\n        /* \"contracts/BountyEscrow.sol\":14984:15002  _usdc.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_167\n      swap1\n        /* \"contracts/BountyEscrow.sol\":14984:15018  _usdc.safeTransfer(recipient, net) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_211:\n        /* \"contracts/BountyEscrow.sol\":14971:15018  if (net > 0) _usdc.safeTransfer(recipient, net) */\n    tag_210:\n        /* \"contracts/BountyEscrow.sol\":15038:15039  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":15032:15035  fee */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":15032:15039  fee > 0 */\n      gt\n        /* \"contracts/BountyEscrow.sol\":15028:15074  if (fee > 0) _usdc.safeTransfer(feeVault, fee) */\n      iszero\n      tag_212\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":15041:15074  _usdc.safeTransfer(feeVault, fee) */\n      tag_213\n        /* \"contracts/BountyEscrow.sol\":15060:15068  feeVault */\n      0x03\n      0x02\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":15070:15073  fee */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":15041:15046  _usdc */\n      immutable(\"0xa1e6533663c54c1b5791904b25fce23e3c1243e7d3d63ac897424953dc652b69\")\n        /* \"contracts/BountyEscrow.sol\":15041:15059  _usdc.safeTransfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_167\n      swap1\n        /* \"contracts/BountyEscrow.sol\":15041:15074  _usdc.safeTransfer(feeVault, fee) */\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_213:\n        /* \"contracts/BountyEscrow.sol\":15028:15074  if (fee > 0) _usdc.safeTransfer(feeVault, fee) */\n    tag_212:\n        /* \"contracts/BountyEscrow.sol\":15109:15118  recipient */\n      dup5\n        /* \"contracts/BountyEscrow.sol\":15090:15129  Resolved(bountyId, recipient, net, fee) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":15099:15107  bountyId */\n      dup7\n        /* \"contracts/BountyEscrow.sol\":15090:15129  Resolved(bountyId, recipient, net, fee) */\n      0x461dc02513380b552c1c7e42377606be7a1c06610e50589fc4664dd29bf47fc0\n        /* \"contracts/BountyEscrow.sol\":15120:15123  net */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":15125:15128  fee */\n      dup6\n        /* \"contracts/BountyEscrow.sol\":15090:15129  Resolved(bountyId, recipient, net, fee) */\n      mload(0x40)\n      tag_214\n      swap3\n      swap2\n      swap1\n      tag_215\n      jump\t// in\n    tag_214:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"contracts/BountyEscrow.sol\":14489:15136  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_216\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_151\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_216:\n        /* \"contracts/BountyEscrow.sol\":14377:15136  function resolve(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":2162:2204  uint16 public constant MAX_FEE_BPS = 1_000 */\n    tag_82:\n        /* \"contracts/BountyEscrow.sol\":2199:2204  1_000 */\n      0x03e8\n        /* \"contracts/BountyEscrow.sol\":2162:2204  uint16 public constant MAX_FEE_BPS = 1_000 */\n      dup2\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":9908:10238  function setFeeParams(... */\n    tag_87:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_218\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_218:\n        /* \"contracts/BountyEscrow.sol\":10041:10042  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":10020:10043  _feeVault == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":10020:10029  _feeVault */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":10020:10043  _feeVault == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"contracts/BountyEscrow.sol\":10016:10065  if (_feeVault == address(0)) revert ZeroAddress() */\n      tag_220\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":10052:10065  ZeroAddress() */\n      mload(0x40)\n      0xd92e233d00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":10016:10065  if (_feeVault == address(0)) revert ZeroAddress() */\n    tag_220:\n        /* \"contracts/BountyEscrow.sol\":2199:2204  1_000 */\n      0x03e8\n        /* \"contracts/BountyEscrow.sol\":10079:10100  _feeBps > MAX_FEE_BPS */\n      0xffff\n      and\n        /* \"contracts/BountyEscrow.sol\":10079:10086  _feeBps */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":10079:10100  _feeBps > MAX_FEE_BPS */\n      0xffff\n      and\n      gt\n        /* \"contracts/BountyEscrow.sol\":10075:10124  if (_feeBps > MAX_FEE_BPS) revert InvalidParams() */\n      iszero\n      tag_221\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":10109:10124  InvalidParams() */\n      mload(0x40)\n      0xa86b651200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":10075:10124  if (_feeBps > MAX_FEE_BPS) revert InvalidParams() */\n    tag_221:\n        /* \"contracts/BountyEscrow.sol\":10143:10150  _feeBps */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":10134:10140  feeBps */\n      0x03\n      0x00\n        /* \"contracts/BountyEscrow.sol\":10134:10150  feeBps = _feeBps */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":10171:10180  _feeVault */\n      dup1\n        /* \"contracts/BountyEscrow.sol\":10160:10168  feeVault */\n      0x03\n      0x02\n        /* \"contracts/BountyEscrow.sol\":10160:10180  feeVault = _feeVault */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":10195:10231  FeeParamsUpdated(_feeBps, _feeVault) */\n      0x553bd03bb9146c7a9c7ad0a260aed36e8d47650815df076dfb60f9d47e6cf727\n        /* \"contracts/BountyEscrow.sol\":10212:10219  _feeBps */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":10221:10230  _feeVault */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":10195:10231  FeeParamsUpdated(_feeBps, _feeVault) */\n      mload(0x40)\n      tag_222\n      swap3\n      swap2\n      swap1\n      tag_223\n      jump\t// in\n    tag_222:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/BountyEscrow.sol\":9908:10238  function setFeeParams(... */\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/BountyEscrow.sol\":12648:13279  function fund(... */\n    tag_91:\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      tag_225\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2375  _nonReentrantBefore */\n      tag_126\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2356:2377  _nonReentrantBefore() */\n      jump\t// in\n    tag_225:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_227\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_129\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_227:\n        /* \"contracts/BountyEscrow.sol\":12764:12780  Bounty storage b */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":12783:12792  _bounties */\n      0x02\n        /* \"contracts/BountyEscrow.sol\":12783:12802  _bounties[bountyId] */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":12793:12801  bountyId */\n      dup5\n        /* \"contracts/BountyEscrow.sol\":12783:12802  _bounties[bountyId] */\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"contracts/BountyEscrow.sol\":12764:12802  Bounty storage b = _bounties[bountyId] */\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":12828:12839  Status.Open */\n      0x01\n        /* \"contracts/BountyEscrow.sol\":12816:12839  b.status != Status.Open */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_229\n      jumpi\n      tag_230\n      tag_101\n      jump\t// in\n    tag_230:\n    tag_229:\n        /* \"contracts/BountyEscrow.sol\":12816:12817  b */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":12816:12824  b.status */\n      0x03\n      add\n      0x10\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/BountyEscrow.sol\":12816:12839  b.status != Status.Open */\n      0x04\n      dup2\n      gt\n      iszero\n      tag_231\n      jumpi\n      tag_232\n      tag_101\n      jump\t// in\n    tag_232:\n    tag_231:\n      eq\n        /* \"contracts/BountyEscrow.sol\":12812:12857  if (b.status != Status.Open) revert NotOpen() */\n      tag_233\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":12848:12857  NotOpen() */\n      mload(0x40)\n      0xddafad9800000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":12812:12857  if (b.status != Status.Open) revert NotOpen() */\n    tag_233:\n        /* \"contracts/BountyEscrow.sol\":12885:12886  b */\n      dup1\n        /* \"contracts/BountyEscrow.sol\":12885:12894  b.sponsor */\n      0x01\n      add\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":12871:12894  msg.sender != b.sponsor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":12871:12881  msg.sender */\n      caller\n        /* \"contracts/BountyEscrow.sol\":12871:12894  msg.sender != b.sponsor */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"contracts/BountyEscrow.sol\":12867:12915  if (msg.sender != b.sponsor) revert NotSponsor() */\n      tag_234\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":12903:12915  NotSponsor() */\n      mload(0x40)\n      0xdf4795c700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":12867:12915  if (msg.sender != b.sponsor) revert NotSponsor() */\n    tag_234:\n        /* \"contracts/BountyEscrow.sol\":12939:12940  0 */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":12929:12935  amount */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":12929:12940  amount == 0 */\n      sub\n        /* \"contracts/BountyEscrow.sol\":12925:12961  if (amount == 0) revert ZeroAmount() */\n      tag_235\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":12949:12961  ZeroAmount() */\n      mload(0x40)\n      0x1f2a200500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":12925:12961  if (amount == 0) revert ZeroAmount() */\n    tag_235:\n        /* \"contracts/BountyEscrow.sol\":13020:13034  uint256 newAmt */\n      0x00\n        /* \"contracts/BountyEscrow.sol\":13057:13063  amount */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":13045:13046  b */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":13045:13053  b.amount */\n      0x02\n      add\n      0x14\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":13037:13054  uint256(b.amount) */\n      0xffffffffffffffffffffffff\n      and\n        /* \"contracts/BountyEscrow.sol\":13037:13063  uint256(b.amount) + amount */\n      tag_236\n      swap2\n      swap1\n      tag_237\n      jump\t// in\n    tag_236:\n        /* \"contracts/BountyEscrow.sol\":13020:13063  uint256 newAmt = uint256(b.amount) + amount */\n      swap1\n      pop\n        /* \"contracts/BountyEscrow.sol\":13086:13102  type(uint96).max */\n      0xffffffffffffffffffffffff\n        /* \"contracts/BountyEscrow.sol\":13077:13102  newAmt > type(uint96).max */\n      dup1\n      and\n        /* \"contracts/BountyEscrow.sol\":13077:13083  newAmt */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":13077:13102  newAmt > type(uint96).max */\n      gt\n        /* \"contracts/BountyEscrow.sol\":13073:13126  if (newAmt > type(uint96).max) revert InvalidParams() */\n      iszero\n      tag_238\n      jumpi\n        /* \"contracts/BountyEscrow.sol\":13111:13126  InvalidParams() */\n      mload(0x40)\n      0xa86b651200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"contracts/BountyEscrow.sol\":13073:13126  if (newAmt > type(uint96).max) revert InvalidParams() */\n    tag_238:\n        /* \"contracts/BountyEscrow.sol\":13147:13164  newAmt.toUint96() */\n      tag_239\n        /* \"contracts/BountyEscrow.sol\":13147:13153  newAmt */\n      dup2\n        /* \"contracts/BountyEscrow.sol\":13147:13162  newAmt.toUint96 */\n      tag_143\n        /* \"contracts/BountyEscrow.sol\":13147:13164  newAmt.toUint96() */\n      jump\t// in\n    tag_239:\n        /* \"contracts/BountyEscrow.sol\":13136:13137  b */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":13136:13144  b.amount */\n      0x02\n      add\n      0x14\n        /* \"contracts/BountyEscrow.sol\":13136:13164  b.amount = newAmt.toUint96() */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/BountyEscrow.sol\":13175:13232  _usdc.safeTransferFrom(msg.sender, address(this), amount) */\n      tag_240\n        /* \"contracts/BountyEscrow.sol\":13198:13208  msg.sender */\n      caller\n        /* \"contracts/BountyEscrow.sol\":13218:13222  this */\n      address\n        /* \"contracts/BountyEscrow.sol\":13225:13231  amount */\n      dup6\n        /* \"contracts/BountyEscrow.sol\":13175:13180  _usdc */\n      immutable(\"0xa1e6533663c54c1b5791904b25fce23e3c1243e7d3d63ac897424953dc652b69\")\n        /* \"contracts/BountyEscrow.sol\":13175:13197  _usdc.safeTransferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_147\n      swap1\n        /* \"contracts/BountyEscrow.sol\":13175:13232  _usdc.safeTransferFrom(msg.sender, address(this), amount) */\n      swap4\n      swap3\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_240:\n        /* \"contracts/BountyEscrow.sol\":13255:13263  bountyId */\n      dup4\n        /* \"contracts/BountyEscrow.sol\":13248:13272  Funded(bountyId, newAmt) */\n      0x9f4592c3bd42bd33860ee93dc92d07f06e3f4fb6e19a9ca214982fe7c1bdb037\n        /* \"contracts/BountyEscrow.sol\":13265:13271  newAmt */\n      dup3\n        /* \"contracts/BountyEscrow.sol\":13248:13272  Funded(bountyId, newAmt) */\n      mload(0x40)\n      tag_241\n      swap2\n      swap1\n      tag_169\n      jump\t// in\n    tag_241:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/BountyEscrow.sol\":12754:13279  {... */\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      tag_242\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2416  _nonReentrantAfter */\n      tag_151\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2398:2418  _nonReentrantAfter() */\n      jump\t// in\n    tag_242:\n        /* \"contracts/BountyEscrow.sol\":12648:13279  function fund(... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_95:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1544  _checkOwner() */\n      tag_244\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1542  _checkOwner */\n      tag_107\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1531:1544  _checkOwner() */\n      jump\t// in\n    tag_244:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2647:2648  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2627:2635  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2627:2649  newOwner == address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n      tag_246\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2700:2701  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2672:2703  OwnableInvalidOwner(address(0)) */\n      mload(0x40)\n      0x1e4fbdf700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_247\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_247:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2623:2714  if (newOwner == address(0)) {... */\n    tag_246:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      tag_248\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2742:2750  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2723:2741  _transferOwnership */\n      tag_116\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2723:2751  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_248:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2543:2758  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n    tag_107:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1866:1878  _msgSender() */\n      tag_250\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1866:1876  _msgSender */\n      tag_251\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1866:1878  _msgSender() */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1855:1862  owner() */\n      tag_252\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1855:1860  owner */\n      tag_58\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1855:1862  owner() */\n      jump\t// in\n    tag_252:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1855:1878  owner() != _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1928:1940  _msgSender() */\n      tag_254\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1928:1938  _msgSender */\n      tag_251\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1928:1940  _msgSender() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1901:1941  OwnableUnauthorizedAccount(_msgSender()) */\n      mload(0x40)\n      0x118cdaa700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_255\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_255:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1851:1952  if (owner() != _msgSender()) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":1796:1958  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n    tag_110:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      tag_257\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1721:1735  _requirePaused */\n      tag_258\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1721:1737  _requirePaused() */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2778:2783  false */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2768:2775  _paused */\n      0x01\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2768:2783  _paused = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2807:2819  _msgSender() */\n      tag_260\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2807:2817  _msgSender */\n      tag_251\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2807:2819  _msgSender() */\n      jump\t// in\n    tag_260:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2798:2820  Unpaused(_msgSender()) */\n      mload(0x40)\n      tag_261\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_261:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2710:2827  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_116:\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2985:3001  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3004:3010  _owner */\n      0x01\n      dup1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2985:3010  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3029:3037  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3020:3026  _owner */\n      0x01\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3020:3037  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3083:3091  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3073:3081  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":3052:3092  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2975:3099  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":2912:3099  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n    tag_122:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      tag_264\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1491  _requireNotPaused */\n      tag_129\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":1474:1493  _requireNotPaused() */\n      jump\t// in\n    tag_264:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2532:2536  true */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2522:2529  _paused */\n      dup1\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2522:2536  _paused = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2558:2570  _msgSender() */\n      tag_266\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2558:2568  _msgSender */\n      tag_251\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2558:2570  _msgSender() */\n      jump\t// in\n    tag_266:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2551:2571  Paused(_msgSender()) */\n      mload(0x40)\n      tag_267\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_267:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2463:2578  function _pause() internal virtual whenNotPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n    tag_126:\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2558:2565  _status */\n      sload(0x00)\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2558:2576  _status == ENTERED */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n      tag_269\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2599:2629  ReentrancyGuardReentrantCall() */\n      mload(0x40)\n      0x3ee5aeb500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2554:2640  if (_status == ENTERED) {... */\n    tag_269:\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":1755:1756  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2714:2721  _status */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2714:2731  _status = ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2431:2738  function _nonReentrantBefore() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n    tag_129:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2067:2075  paused() */\n      tag_271\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2067:2073  paused */\n      tag_46\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2067:2075  paused() */\n      jump\t// in\n    tag_271:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n      iszero\n      tag_272\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2098:2113  EnforcedPause() */\n      mload(0x40)\n      0xd93c066500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2063:2124  if (paused()) {... */\n    tag_272:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2002:2130  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11291:11504  function toUint96(uint256 value) internal pure returns (uint96) {... */\n    tag_143:\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11347:11353  uint96 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11377:11393  type(uint96).max */\n      0xffffffffffffffffffffffff\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11369:11393  value > type(uint96).max */\n      dup1\n      and\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11369:11374  value */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11369:11393  value > type(uint96).max */\n      gt\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11365:11468  if (value > type(uint96).max) {... */\n      iszero\n      tag_274\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11447:11449  96 */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11451:11456  value */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11416:11457  SafeCastOverflowedUintDowncast(96, value) */\n      mload(0x40)\n      0x6dfcc65000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_275\n      swap3\n      swap2\n      swap1\n      tag_276\n      jump\t// in\n    tag_275:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11365:11468  if (value > type(uint96).max) {... */\n    tag_274:\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11491:11496  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11477:11497  return uint96(value) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":11291:11504  function toUint96(uint256 value) internal pure returns (uint96) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n    tag_147:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      tag_278\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1822:1827  token */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1844:1849  token */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1844:1862  token.transferFrom */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x23b872dd\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1865:1869  from */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1871:1873  to */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1875:1880  value */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1829:1882  abi.encodeCall(token.transferFrom, (from, to, value)) */\n      add(0x24, mload(0x40))\n      tag_279\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_280\n      jump\t// in\n    tag_279:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1802:1821  _callOptionalReturn */\n      tag_281\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1802:1883  _callOptionalReturn(token, abi.encodeCall(token.transferFrom, (from, to, value))) */\n      jump\t// in\n    tag_278:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1702:1890  function safeTransferFrom(IERC20 token, address from, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n    tag_151:\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":1713:1714  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2924:2931  _status */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2924:2945  _status = NOT_ENTERED */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":2744:2952  function _nonReentrantAfter() private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n    tag_167:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      tag_284\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1405:1410  token */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1427:1432  token */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1427:1441  token.transfer */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xa9059cbb\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1444:1446  to */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1448:1453  value */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1412:1455  abi.encodeCall(token.transfer, (to, value)) */\n      add(0x24, mload(0x40))\n      tag_285\n      swap3\n      swap2\n      swap1\n      tag_286\n      jump\t// in\n    tag_285:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n      swap2\n      pop\n      0xe0\n      shl\n      0x20\n      dup3\n      add\n      dup1\n      mload\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n      dup4\n      dup2\n      dup4\n      and\n      or\n      dup4\n      mstore\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1385:1404  _callOptionalReturn */\n      tag_281\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1385:1456  _callOptionalReturn(token, abi.encodeCall(token.transfer, (to, value))) */\n      jump\t// in\n    tag_284:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":1303:1463  function safeTransfer(IERC20 token, address to, uint256 value) internal {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":3803:7919  function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_207:\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":3885:3899  uint256 result */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4232:4245  uint256 prod0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4252:4253  y */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4248:4249  x */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4248:4253  x * y */\n      mul\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4232:4253  uint256 prod0 = x * y */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4312:4325  uint256 prod1 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4437:4438  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4433:4439  not(0) */\n      not\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4430:4431  y */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4427:4428  x */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4420:4440  mulmod(x, y, not(0)) */\n      mulmod\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4493:4498  prod0 */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4489:4491  mm */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4486:4499  lt(mm, prod0) */\n      lt\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4478:4483  prod0 */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4474:4476  mm */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4470:4484  sub(mm, prod0) */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4466:4500  sub(sub(mm, prod0), lt(mm, prod0)) */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4457:4500  prod1 := sub(sub(mm, prod0), lt(mm, prod0)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4392:4514  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4604:4605  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4595:4600  prod1 */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4595:4605  prod1 == 0 */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4591:4959  if (prod1 == 0) {... */\n      tag_288\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4933:4944  denominator */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4925:4930  prod0 */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4925:4944  prod0 / denominator */\n      dup2\n      tag_289\n      jumpi\n      tag_290\n      tag_291\n      jump\t// in\n    tag_290:\n    tag_289:\n      div\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4918:4944  return prod0 / denominator */\n      swap3\n      pop\n      pop\n      pop\n      jump(tag_287)\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":4591:4959  if (prod1 == 0) {... */\n    tag_288:\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5080:5085  prod1 */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5065:5076  denominator */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5065:5085  denominator <= prod1 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5061:5149  if (denominator <= prod1) {... */\n      tag_292\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5112:5134  MathOverflowedMulDiv() */\n      mload(0x40)\n      0x227bc15300000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5061:5149  if (denominator <= prod1) {... */\n    tag_292:\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5404:5421  uint256 remainder */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5539:5550  denominator */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5536:5537  y */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5533:5534  x */\n      dup9\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5526:5551  mulmod(x, y, denominator) */\n      mulmod\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5513:5551  remainder := mulmod(x, y, denominator) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5667:5672  prod0 */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5656:5665  remainder */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5653:5673  gt(remainder, prod0) */\n      gt\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5646:5651  prod1 */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5642:5674  sub(prod1, gt(remainder, prod0)) */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5633:5674  prod1 := sub(prod1, gt(remainder, prod0)) */\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5711:5720  remainder */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5704:5709  prod0 */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5700:5721  sub(prod0, remainder) */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5691:5721  prod0 := sub(prod0, remainder) */\n      swap3\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5939:5951  uint256 twos */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5973:5984  denominator */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5969:5970  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5969:5984  0 - denominator */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5954:5965  denominator */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5954:5985  denominator & (0 - denominator) */\n      and\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":5939:5985  uint256 twos = denominator & (0 - denominator) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6105:6109  twos */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6092:6103  denominator */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6088:6110  div(denominator, twos) */\n      div\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6073:6110  denominator := div(denominator, twos) */\n      swap6\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6197:6201  twos */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6190:6195  prod0 */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6186:6202  div(prod0, twos) */\n      div\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6177:6202  prod0 := div(prod0, twos) */\n      swap4\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6354:6355  1 */\n      0x01\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6347:6351  twos */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6340:6344  twos */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6337:6338  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6333:6345  sub(0, twos) */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6329:6352  div(sub(0, twos), twos) */\n      div\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6325:6356  add(div(sub(0, twos), twos), 1) */\n      add\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6317:6356  twos := add(div(sub(0, twos), twos), 1) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6453:6457  twos */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6445:6450  prod1 */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6445:6457  prod1 * twos */\n      mul\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6436:6457  prod0 |= prod1 * twos */\n      dup5\n      or\n      swap4\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6775:6790  uint256 inverse */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6813:6814  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6798:6809  denominator */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6794:6795  3 */\n      0x03\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6794:6809  3 * denominator */\n      mul\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6793:6814  (3 * denominator) ^ 2 */\n      xor\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":6775:6814  uint256 inverse = (3 * denominator) ^ 2 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7060:7067  inverse */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7046:7057  denominator */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7046:7067  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7042:7043  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7042:7067  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7031:7067  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7129:7136  inverse */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7115:7126  denominator */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7115:7136  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7111:7112  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7111:7136  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7100:7136  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7199:7206  inverse */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7185:7196  denominator */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7185:7206  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7181:7182  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7181:7206  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7170:7206  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7269:7276  inverse */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7255:7266  denominator */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7255:7276  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7251:7252  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7251:7276  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7240:7276  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7339:7346  inverse */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7325:7336  denominator */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7325:7346  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7321:7322  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7321:7346  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7310:7346  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7410:7417  inverse */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7396:7407  denominator */\n      dup8\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7396:7417  denominator * inverse */\n      mul\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7392:7393  2 */\n      0x02\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7392:7417  2 - denominator * inverse */\n      sub\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7381:7417  inverse *= 2 - denominator * inverse */\n      dup2\n      mul\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7868:7875  inverse */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7860:7865  prod0 */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7860:7875  prod0 * inverse */\n      mul\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7851:7875  result = prod0 * inverse */\n      swap6\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":7889:7902  return result */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":3803:7919  function mulDiv(uint256 x, uint256 y, uint256 denominator) internal pure returns (uint256 result) {... */\n    tag_287:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n    tag_251:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Context.sol\":709:716  address */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Context.sol\":735:745  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts@5.0.2/utils/Context.sol\":728:745  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Context.sol\":656:752  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n    tag_258:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2265:2273  paused() */\n      tag_295\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2265:2271  paused */\n      tag_46\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2265:2273  paused() */\n      jump\t// in\n    tag_295:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n      tag_296\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2296:2311  ExpectedPause() */\n      mload(0x40)\n      0x8dfc202b00000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2260:2322  if (!paused()) {... */\n    tag_296:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":2202:2328  function _requirePaused() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n    tag_281:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4478:4501  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      tag_298\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4532:4536  data */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4512:4517  token */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4504:4531  address(token).functionCall */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      tag_299\n      swap1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4504:4537  address(token).functionCall(data) */\n      swap2\n      swap1\n      0xffffffff\n      and\n      jump\t// in\n    tag_298:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4478:4537  bytes memory returndata = address(token).functionCall(data) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4572:4573  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4551:4561  returndata */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4551:4568  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4551:4573  returndata.length != 0 */\n      eq\n      iszero\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n      dup1\n      iszero\n      tag_300\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4589:4599  returndata */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4578:4608  abi.decode(returndata, (bool)) */\n      dup1\n      0x20\n      add\n      swap1\n      mload\n      dup2\n      add\n      swap1\n      tag_301\n      swap2\n      swap1\n      tag_302\n      jump\t// in\n    tag_301:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4577:4608  !abi.decode(returndata, (bool)) */\n      iszero\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4551:4608  returndata.length != 0 && !abi.decode(returndata, (bool)) */\n    tag_300:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n      iszero\n      tag_303\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4664:4669  token */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4631:4671  SafeERC20FailedOperation(address(token)) */\n      mload(0x40)\n      0x5274afe700000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_304\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_304:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4547:4682  if (returndata.length != 0 && !abi.decode(returndata, (bool))) {... */\n    tag_303:\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4129:4688  {... */\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":4059:4688  function _callOptionalReturn(IERC20 token, bytes memory data) private {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_299:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":2780:2792  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      tag_306\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":2833:2839  target */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":2841:2845  data */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":2847:2848  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":2811:2832  functionCallWithValue */\n      tag_307\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":2811:2849  functionCallWithValue(target, data, 0) */\n      jump\t// in\n    tag_306:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":2804:2849  return functionCallWithValue(target, data, 0) */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":2705:2856  function functionCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n    tag_307:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3279:3291  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3331:3336  value */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3307:3328  address(this).balance */\n      selfbalance\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3307:3336  address(this).balance < value */\n      lt\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n      iszero\n      tag_309\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3394:3398  this */\n      address\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3359:3400  AddressInsufficientBalance(address(this)) */\n      mload(0x40)\n      0xcd78605900000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_310\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_310:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3303:3411  if (address(this).balance < value) {... */\n    tag_309:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3421:3433  bool success */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3435:3458  bytes memory returndata */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3462:3468  target */\n      dup6\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3462:3473  target.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3481:3486  value */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3488:3492  data */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3462:3493  target.call{value: value}(data) */\n      mload(0x40)\n      tag_311\n      swap2\n      swap1\n      tag_312\n      jump\t// in\n    tag_311:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_315\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_314)\n    tag_315:\n      0x60\n      swap2\n      pop\n    tag_314:\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3420:3493  (bool success, bytes memory returndata) = target.call{value: value}(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      tag_316\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3537:3543  target */\n      dup7\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3545:3552  success */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3554:3564  returndata */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3510:3536  verifyCallResultFromTarget */\n      tag_317\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3510:3565  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_316:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3503:3565  return verifyCallResultFromTarget(target, success, returndata) */\n      swap3\n      pop\n      pop\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":3180:3572  function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_317:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_319\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_320\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":4821:4828  _revert */\n      tag_321\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_320:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_322)\n    tag_319:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5066:5067  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5045:5055  returndata */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5045:5062  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_323\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5093:5094  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5071:5077  target */\n      dup5\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5071:5089  target.code.length */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      eq\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_323:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_324\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5138:5144  target */\n      dup4\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      0x9996b31500000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_325\n      swap2\n      swap1\n      tag_44\n      jump\t// in\n    tag_325:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_324:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5180:5190  returndata */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5173:5190  return returndata */\n      swap1\n      pop\n      jump(tag_318)\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_322:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_318:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_321:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5894:5895  0 */\n      0x00\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5874:5884  returndata */\n      dup2\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5874:5891  returndata.length */\n      mload\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      gt\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      iszero\n      tag_327\n      jumpi\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_327:\n        /* \"@openzeppelin/contracts@5.0.2/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      0x1425ea4200000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_97:\n      mload(0x40)\n      dup1\n      0xe0\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      and(0xffffffffffffffff, 0x00)\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      0x04\n      dup2\n      gt\n      iszero\n      tag_329\n      jumpi\n      tag_330\n      tag_101\n      jump\t// in\n    tag_330:\n    tag_329:\n      dup2\n      mstore\n      pop\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_332:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      0x00\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_334:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_335:\n        /* \"#utility.yul\":490:514   */\n      tag_399\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_334\n      jump\t// in\n    tag_399:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_400\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      0x00\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_400:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:684   */\n    tag_336:\n        /* \"#utility.yul\":591:596   */\n      0x00\n        /* \"#utility.yul\":629:635   */\n      dup2\n        /* \"#utility.yul\":616:636   */\n      calldataload\n        /* \"#utility.yul\":607:636   */\n      swap1\n      pop\n        /* \"#utility.yul\":645:678   */\n      tag_402\n        /* \"#utility.yul\":672:677   */\n      dup2\n        /* \"#utility.yul\":645:678   */\n      tag_335\n      jump\t// in\n    tag_402:\n        /* \"#utility.yul\":545:684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":690:1019   */\n    tag_27:\n        /* \"#utility.yul\":749:755   */\n      0x00\n        /* \"#utility.yul\":798:800   */\n      0x20\n        /* \"#utility.yul\":786:795   */\n      dup3\n        /* \"#utility.yul\":777:784   */\n      dup5\n        /* \"#utility.yul\":773:796   */\n      sub\n        /* \"#utility.yul\":769:801   */\n      slt\n        /* \"#utility.yul\":766:885   */\n      iszero\n      tag_404\n      jumpi\n        /* \"#utility.yul\":804:883   */\n      tag_405\n      tag_332\n      jump\t// in\n    tag_405:\n        /* \"#utility.yul\":766:885   */\n    tag_404:\n        /* \"#utility.yul\":924:925   */\n      0x00\n        /* \"#utility.yul\":949:1002   */\n      tag_406\n        /* \"#utility.yul\":994:1001   */\n      dup5\n        /* \"#utility.yul\":985:991   */\n      dup3\n        /* \"#utility.yul\":974:983   */\n      dup6\n        /* \"#utility.yul\":970:992   */\n      add\n        /* \"#utility.yul\":949:1002   */\n      tag_336\n      jump\t// in\n    tag_406:\n        /* \"#utility.yul\":939:1002   */\n      swap2\n      pop\n        /* \"#utility.yul\":895:1012   */\n      pop\n        /* \"#utility.yul\":690:1019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1025:1133   */\n    tag_337:\n        /* \"#utility.yul\":1102:1126   */\n      tag_408\n        /* \"#utility.yul\":1120:1125   */\n      dup2\n        /* \"#utility.yul\":1102:1126   */\n      tag_334\n      jump\t// in\n    tag_408:\n        /* \"#utility.yul\":1097:1100   */\n      dup3\n        /* \"#utility.yul\":1090:1127   */\n      mstore\n        /* \"#utility.yul\":1025:1133   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1139:1265   */\n    tag_338:\n        /* \"#utility.yul\":1176:1183   */\n      0x00\n        /* \"#utility.yul\":1216:1258   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1209:1214   */\n      dup3\n        /* \"#utility.yul\":1205:1259   */\n      and\n        /* \"#utility.yul\":1194:1259   */\n      swap1\n      pop\n        /* \"#utility.yul\":1139:1265   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1271:1367   */\n    tag_339:\n        /* \"#utility.yul\":1308:1315   */\n      0x00\n        /* \"#utility.yul\":1337:1361   */\n      tag_411\n        /* \"#utility.yul\":1355:1360   */\n      dup3\n        /* \"#utility.yul\":1337:1361   */\n      tag_338\n      jump\t// in\n    tag_411:\n        /* \"#utility.yul\":1326:1361   */\n      swap1\n      pop\n        /* \"#utility.yul\":1271:1367   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1373:1481   */\n    tag_340:\n        /* \"#utility.yul\":1450:1474   */\n      tag_413\n        /* \"#utility.yul\":1468:1473   */\n      dup2\n        /* \"#utility.yul\":1450:1474   */\n      tag_339\n      jump\t// in\n    tag_413:\n        /* \"#utility.yul\":1445:1448   */\n      dup3\n        /* \"#utility.yul\":1438:1475   */\n      mstore\n        /* \"#utility.yul\":1373:1481   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1487:1596   */\n    tag_341:\n        /* \"#utility.yul\":1523:1530   */\n      0x00\n        /* \"#utility.yul\":1563:1589   */\n      0xffffffffffffffffffffffff\n        /* \"#utility.yul\":1556:1561   */\n      dup3\n        /* \"#utility.yul\":1552:1590   */\n      and\n        /* \"#utility.yul\":1541:1590   */\n      swap1\n      pop\n        /* \"#utility.yul\":1487:1596   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1602:1707   */\n    tag_342:\n        /* \"#utility.yul\":1677:1700   */\n      tag_416\n        /* \"#utility.yul\":1694:1699   */\n      dup2\n        /* \"#utility.yul\":1677:1700   */\n      tag_341\n      jump\t// in\n    tag_416:\n        /* \"#utility.yul\":1672:1675   */\n      dup3\n        /* \"#utility.yul\":1665:1701   */\n      mstore\n        /* \"#utility.yul\":1602:1707   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1713:1814   */\n    tag_343:\n        /* \"#utility.yul\":1749:1756   */\n      0x00\n        /* \"#utility.yul\":1789:1807   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1782:1787   */\n      dup3\n        /* \"#utility.yul\":1778:1808   */\n      and\n        /* \"#utility.yul\":1767:1808   */\n      swap1\n      pop\n        /* \"#utility.yul\":1713:1814   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1820:1925   */\n    tag_344:\n        /* \"#utility.yul\":1895:1918   */\n      tag_419\n        /* \"#utility.yul\":1912:1917   */\n      dup2\n        /* \"#utility.yul\":1895:1918   */\n      tag_343\n      jump\t// in\n    tag_419:\n        /* \"#utility.yul\":1890:1893   */\n      dup3\n        /* \"#utility.yul\":1883:1919   */\n      mstore\n        /* \"#utility.yul\":1820:1925   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1931:2111   */\n    tag_101:\n        /* \"#utility.yul\":1979:2056   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1976:1977   */\n      0x00\n        /* \"#utility.yul\":1969:2057   */\n      mstore\n        /* \"#utility.yul\":2076:2080   */\n      0x21\n        /* \"#utility.yul\":2073:2074   */\n      0x04\n        /* \"#utility.yul\":2066:2081   */\n      mstore\n        /* \"#utility.yul\":2100:2104   */\n      0x24\n        /* \"#utility.yul\":2097:2098   */\n      0x00\n        /* \"#utility.yul\":2090:2105   */\n      revert\n        /* \"#utility.yul\":2117:2233   */\n    tag_345:\n        /* \"#utility.yul\":2201:2202   */\n      0x05\n        /* \"#utility.yul\":2194:2199   */\n      dup2\n        /* \"#utility.yul\":2191:2203   */\n      lt\n        /* \"#utility.yul\":2181:2227   */\n      tag_422\n      jumpi\n        /* \"#utility.yul\":2207:2225   */\n      tag_423\n      tag_101\n      jump\t// in\n    tag_423:\n        /* \"#utility.yul\":2181:2227   */\n    tag_422:\n        /* \"#utility.yul\":2117:2233   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2239:2372   */\n    tag_346:\n        /* \"#utility.yul\":2287:2294   */\n      0x00\n        /* \"#utility.yul\":2316:2321   */\n      dup2\n        /* \"#utility.yul\":2305:2321   */\n      swap1\n      pop\n        /* \"#utility.yul\":2322:2366   */\n      tag_425\n        /* \"#utility.yul\":2360:2365   */\n      dup3\n        /* \"#utility.yul\":2322:2366   */\n      tag_345\n      jump\t// in\n    tag_425:\n        /* \"#utility.yul\":2239:2372   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2378:2511   */\n    tag_347:\n        /* \"#utility.yul\":2437:2446   */\n      0x00\n        /* \"#utility.yul\":2470:2505   */\n      tag_427\n        /* \"#utility.yul\":2499:2504   */\n      dup3\n        /* \"#utility.yul\":2470:2505   */\n      tag_346\n      jump\t// in\n    tag_427:\n        /* \"#utility.yul\":2457:2505   */\n      swap1\n      pop\n        /* \"#utility.yul\":2378:2511   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2517:2656   */\n    tag_348:\n        /* \"#utility.yul\":2603:2649   */\n      tag_429\n        /* \"#utility.yul\":2643:2648   */\n      dup2\n        /* \"#utility.yul\":2603:2649   */\n      tag_347\n      jump\t// in\n    tag_429:\n        /* \"#utility.yul\":2598:2601   */\n      dup3\n        /* \"#utility.yul\":2591:2650   */\n      mstore\n        /* \"#utility.yul\":2517:2656   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2726:4132   */\n    tag_349:\n        /* \"#utility.yul\":2871:2875   */\n      0xe0\n        /* \"#utility.yul\":2866:2869   */\n      dup3\n        /* \"#utility.yul\":2862:2876   */\n      add\n        /* \"#utility.yul\":2964:2968   */\n      0x00\n        /* \"#utility.yul\":2957:2962   */\n      dup3\n        /* \"#utility.yul\":2953:2969   */\n      add\n        /* \"#utility.yul\":2947:2970   */\n      mload\n        /* \"#utility.yul\":2983:3046   */\n      tag_431\n        /* \"#utility.yul\":3040:3044   */\n      0x00\n        /* \"#utility.yul\":3035:3038   */\n      dup6\n        /* \"#utility.yul\":3031:3045   */\n      add\n        /* \"#utility.yul\":3017:3029   */\n      dup3\n        /* \"#utility.yul\":2983:3046   */\n      tag_337\n      jump\t// in\n    tag_431:\n        /* \"#utility.yul\":2886:3056   */\n      pop\n        /* \"#utility.yul\":3141:3145   */\n      0x20\n        /* \"#utility.yul\":3134:3139   */\n      dup3\n        /* \"#utility.yul\":3130:3146   */\n      add\n        /* \"#utility.yul\":3124:3147   */\n      mload\n        /* \"#utility.yul\":3160:3223   */\n      tag_432\n        /* \"#utility.yul\":3217:3221   */\n      0x20\n        /* \"#utility.yul\":3212:3215   */\n      dup6\n        /* \"#utility.yul\":3208:3222   */\n      add\n        /* \"#utility.yul\":3194:3206   */\n      dup3\n        /* \"#utility.yul\":3160:3223   */\n      tag_340\n      jump\t// in\n    tag_432:\n        /* \"#utility.yul\":3066:3233   */\n      pop\n        /* \"#utility.yul\":3319:3323   */\n      0x40\n        /* \"#utility.yul\":3312:3317   */\n      dup3\n        /* \"#utility.yul\":3308:3324   */\n      add\n        /* \"#utility.yul\":3302:3325   */\n      mload\n        /* \"#utility.yul\":3338:3401   */\n      tag_433\n        /* \"#utility.yul\":3395:3399   */\n      0x40\n        /* \"#utility.yul\":3390:3393   */\n      dup6\n        /* \"#utility.yul\":3386:3400   */\n      add\n        /* \"#utility.yul\":3372:3384   */\n      dup3\n        /* \"#utility.yul\":3338:3401   */\n      tag_340\n      jump\t// in\n    tag_433:\n        /* \"#utility.yul\":3243:3411   */\n      pop\n        /* \"#utility.yul\":3495:3499   */\n      0x60\n        /* \"#utility.yul\":3488:3493   */\n      dup3\n        /* \"#utility.yul\":3484:3500   */\n      add\n        /* \"#utility.yul\":3478:3501   */\n      mload\n        /* \"#utility.yul\":3514:3575   */\n      tag_434\n        /* \"#utility.yul\":3569:3573   */\n      0x60\n        /* \"#utility.yul\":3564:3567   */\n      dup6\n        /* \"#utility.yul\":3560:3574   */\n      add\n        /* \"#utility.yul\":3546:3558   */\n      dup3\n        /* \"#utility.yul\":3514:3575   */\n      tag_342\n      jump\t// in\n    tag_434:\n        /* \"#utility.yul\":3421:3585   */\n      pop\n        /* \"#utility.yul\":3671:3675   */\n      0x80\n        /* \"#utility.yul\":3664:3669   */\n      dup3\n        /* \"#utility.yul\":3660:3676   */\n      add\n        /* \"#utility.yul\":3654:3677   */\n      mload\n        /* \"#utility.yul\":3690:3751   */\n      tag_435\n        /* \"#utility.yul\":3745:3749   */\n      0x80\n        /* \"#utility.yul\":3740:3743   */\n      dup6\n        /* \"#utility.yul\":3736:3750   */\n      add\n        /* \"#utility.yul\":3722:3734   */\n      dup3\n        /* \"#utility.yul\":3690:3751   */\n      tag_344\n      jump\t// in\n    tag_435:\n        /* \"#utility.yul\":3595:3761   */\n      pop\n        /* \"#utility.yul\":3850:3854   */\n      0xa0\n        /* \"#utility.yul\":3843:3848   */\n      dup3\n        /* \"#utility.yul\":3839:3855   */\n      add\n        /* \"#utility.yul\":3833:3856   */\n      mload\n        /* \"#utility.yul\":3869:3930   */\n      tag_436\n        /* \"#utility.yul\":3924:3928   */\n      0xa0\n        /* \"#utility.yul\":3919:3922   */\n      dup6\n        /* \"#utility.yul\":3915:3929   */\n      add\n        /* \"#utility.yul\":3901:3913   */\n      dup3\n        /* \"#utility.yul\":3869:3930   */\n      tag_344\n      jump\t// in\n    tag_436:\n        /* \"#utility.yul\":3771:3940   */\n      pop\n        /* \"#utility.yul\":4024:4028   */\n      0xc0\n        /* \"#utility.yul\":4017:4022   */\n      dup3\n        /* \"#utility.yul\":4013:4029   */\n      add\n        /* \"#utility.yul\":4007:4030   */\n      mload\n        /* \"#utility.yul\":4043:4115   */\n      tag_437\n        /* \"#utility.yul\":4109:4113   */\n      0xc0\n        /* \"#utility.yul\":4104:4107   */\n      dup6\n        /* \"#utility.yul\":4100:4114   */\n      add\n        /* \"#utility.yul\":4086:4098   */\n      dup3\n        /* \"#utility.yul\":4043:4115   */\n      tag_348\n      jump\t// in\n    tag_437:\n        /* \"#utility.yul\":3950:4125   */\n      pop\n        /* \"#utility.yul\":2840:4132   */\n      pop\n        /* \"#utility.yul\":2726:4132   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4138:4457   */\n    tag_30:\n        /* \"#utility.yul\":4279:4283   */\n      0x00\n        /* \"#utility.yul\":4317:4320   */\n      0xe0\n        /* \"#utility.yul\":4306:4315   */\n      dup3\n        /* \"#utility.yul\":4302:4321   */\n      add\n        /* \"#utility.yul\":4294:4321   */\n      swap1\n      pop\n        /* \"#utility.yul\":4331:4450   */\n      tag_439\n        /* \"#utility.yul\":4447:4448   */\n      0x00\n        /* \"#utility.yul\":4436:4445   */\n      dup4\n        /* \"#utility.yul\":4432:4449   */\n      add\n        /* \"#utility.yul\":4423:4429   */\n      dup5\n        /* \"#utility.yul\":4331:4450   */\n      tag_349\n      jump\t// in\n    tag_439:\n        /* \"#utility.yul\":4138:4457   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4463:4552   */\n    tag_350:\n        /* \"#utility.yul\":4499:4506   */\n      0x00\n        /* \"#utility.yul\":4539:4545   */\n      0xffff\n        /* \"#utility.yul\":4532:4537   */\n      dup3\n        /* \"#utility.yul\":4528:4546   */\n      and\n        /* \"#utility.yul\":4517:4546   */\n      swap1\n      pop\n        /* \"#utility.yul\":4463:4552   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4558:4673   */\n    tag_351:\n        /* \"#utility.yul\":4643:4666   */\n      tag_442\n        /* \"#utility.yul\":4660:4665   */\n      dup2\n        /* \"#utility.yul\":4643:4666   */\n      tag_350\n      jump\t// in\n    tag_442:\n        /* \"#utility.yul\":4638:4641   */\n      dup3\n        /* \"#utility.yul\":4631:4667   */\n      mstore\n        /* \"#utility.yul\":4558:4673   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4679:4897   */\n    tag_34:\n        /* \"#utility.yul\":4770:4774   */\n      0x00\n        /* \"#utility.yul\":4808:4810   */\n      0x20\n        /* \"#utility.yul\":4797:4806   */\n      dup3\n        /* \"#utility.yul\":4793:4811   */\n      add\n        /* \"#utility.yul\":4785:4811   */\n      swap1\n      pop\n        /* \"#utility.yul\":4821:4890   */\n      tag_444\n        /* \"#utility.yul\":4887:4888   */\n      0x00\n        /* \"#utility.yul\":4876:4885   */\n      dup4\n        /* \"#utility.yul\":4872:4889   */\n      add\n        /* \"#utility.yul\":4863:4869   */\n      dup5\n        /* \"#utility.yul\":4821:4890   */\n      tag_351\n      jump\t// in\n    tag_444:\n        /* \"#utility.yul\":4679:4897   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4903:4963   */\n    tag_352:\n        /* \"#utility.yul\":4931:4934   */\n      0x00\n        /* \"#utility.yul\":4952:4957   */\n      dup2\n        /* \"#utility.yul\":4945:4957   */\n      swap1\n      pop\n        /* \"#utility.yul\":4903:4963   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4969:5111   */\n    tag_353:\n        /* \"#utility.yul\":5019:5028   */\n      0x00\n        /* \"#utility.yul\":5052:5105   */\n      tag_447\n        /* \"#utility.yul\":5070:5104   */\n      tag_448\n        /* \"#utility.yul\":5079:5103   */\n      tag_449\n        /* \"#utility.yul\":5097:5102   */\n      dup5\n        /* \"#utility.yul\":5079:5103   */\n      tag_338\n      jump\t// in\n    tag_449:\n        /* \"#utility.yul\":5070:5104   */\n      tag_352\n      jump\t// in\n    tag_448:\n        /* \"#utility.yul\":5052:5105   */\n      tag_338\n      jump\t// in\n    tag_447:\n        /* \"#utility.yul\":5039:5105   */\n      swap1\n      pop\n        /* \"#utility.yul\":4969:5111   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5117:5243   */\n    tag_354:\n        /* \"#utility.yul\":5167:5176   */\n      0x00\n        /* \"#utility.yul\":5200:5237   */\n      tag_451\n        /* \"#utility.yul\":5231:5236   */\n      dup3\n        /* \"#utility.yul\":5200:5237   */\n      tag_353\n      jump\t// in\n    tag_451:\n        /* \"#utility.yul\":5187:5237   */\n      swap1\n      pop\n        /* \"#utility.yul\":5117:5243   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5249:5389   */\n    tag_355:\n        /* \"#utility.yul\":5313:5322   */\n      0x00\n        /* \"#utility.yul\":5346:5383   */\n      tag_453\n        /* \"#utility.yul\":5377:5382   */\n      dup3\n        /* \"#utility.yul\":5346:5383   */\n      tag_354\n      jump\t// in\n    tag_453:\n        /* \"#utility.yul\":5333:5383   */\n      swap1\n      pop\n        /* \"#utility.yul\":5249:5389   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5395:5554   */\n    tag_356:\n        /* \"#utility.yul\":5496:5547   */\n      tag_455\n        /* \"#utility.yul\":5541:5546   */\n      dup2\n        /* \"#utility.yul\":5496:5547   */\n      tag_355\n      jump\t// in\n    tag_455:\n        /* \"#utility.yul\":5491:5494   */\n      dup3\n        /* \"#utility.yul\":5484:5548   */\n      mstore\n        /* \"#utility.yul\":5395:5554   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5560:5810   */\n    tag_38:\n        /* \"#utility.yul\":5667:5671   */\n      0x00\n        /* \"#utility.yul\":5705:5707   */\n      0x20\n        /* \"#utility.yul\":5694:5703   */\n      dup3\n        /* \"#utility.yul\":5690:5708   */\n      add\n        /* \"#utility.yul\":5682:5708   */\n      swap1\n      pop\n        /* \"#utility.yul\":5718:5803   */\n      tag_457\n        /* \"#utility.yul\":5800:5801   */\n      0x00\n        /* \"#utility.yul\":5789:5798   */\n      dup4\n        /* \"#utility.yul\":5785:5802   */\n      add\n        /* \"#utility.yul\":5776:5782   */\n      dup5\n        /* \"#utility.yul\":5718:5803   */\n      tag_356\n      jump\t// in\n    tag_457:\n        /* \"#utility.yul\":5560:5810   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5816:5934   */\n    tag_357:\n        /* \"#utility.yul\":5903:5927   */\n      tag_459\n        /* \"#utility.yul\":5921:5926   */\n      dup2\n        /* \"#utility.yul\":5903:5927   */\n      tag_339\n      jump\t// in\n    tag_459:\n        /* \"#utility.yul\":5898:5901   */\n      dup3\n        /* \"#utility.yul\":5891:5928   */\n      mstore\n        /* \"#utility.yul\":5816:5934   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5940:6162   */\n    tag_44:\n        /* \"#utility.yul\":6033:6037   */\n      0x00\n        /* \"#utility.yul\":6071:6073   */\n      0x20\n        /* \"#utility.yul\":6060:6069   */\n      dup3\n        /* \"#utility.yul\":6056:6074   */\n      add\n        /* \"#utility.yul\":6048:6074   */\n      swap1\n      pop\n        /* \"#utility.yul\":6084:6155   */\n      tag_461\n        /* \"#utility.yul\":6152:6153   */\n      0x00\n        /* \"#utility.yul\":6141:6150   */\n      dup4\n        /* \"#utility.yul\":6137:6154   */\n      add\n        /* \"#utility.yul\":6128:6134   */\n      dup5\n        /* \"#utility.yul\":6084:6155   */\n      tag_357\n      jump\t// in\n    tag_461:\n        /* \"#utility.yul\":5940:6162   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6168:6258   */\n    tag_358:\n        /* \"#utility.yul\":6202:6209   */\n      0x00\n        /* \"#utility.yul\":6245:6250   */\n      dup2\n        /* \"#utility.yul\":6238:6251   */\n      iszero\n        /* \"#utility.yul\":6231:6252   */\n      iszero\n        /* \"#utility.yul\":6220:6252   */\n      swap1\n      pop\n        /* \"#utility.yul\":6168:6258   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6264:6373   */\n    tag_359:\n        /* \"#utility.yul\":6345:6366   */\n      tag_464\n        /* \"#utility.yul\":6360:6365   */\n      dup2\n        /* \"#utility.yul\":6345:6366   */\n      tag_358\n      jump\t// in\n    tag_464:\n        /* \"#utility.yul\":6340:6343   */\n      dup3\n        /* \"#utility.yul\":6333:6367   */\n      mstore\n        /* \"#utility.yul\":6264:6373   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6379:6589   */\n    tag_48:\n        /* \"#utility.yul\":6466:6470   */\n      0x00\n        /* \"#utility.yul\":6504:6506   */\n      0x20\n        /* \"#utility.yul\":6493:6502   */\n      dup3\n        /* \"#utility.yul\":6489:6507   */\n      add\n        /* \"#utility.yul\":6481:6507   */\n      swap1\n      pop\n        /* \"#utility.yul\":6517:6582   */\n      tag_466\n        /* \"#utility.yul\":6579:6580   */\n      0x00\n        /* \"#utility.yul\":6568:6577   */\n      dup4\n        /* \"#utility.yul\":6564:6581   */\n      add\n        /* \"#utility.yul\":6555:6561   */\n      dup5\n        /* \"#utility.yul\":6517:6582   */\n      tag_359\n      jump\t// in\n    tag_466:\n        /* \"#utility.yul\":6379:6589   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6595:6681   */\n    tag_360:\n        /* \"#utility.yul\":6630:6637   */\n      0x00\n        /* \"#utility.yul\":6670:6674   */\n      0xff\n        /* \"#utility.yul\":6663:6668   */\n      dup3\n        /* \"#utility.yul\":6659:6675   */\n      and\n        /* \"#utility.yul\":6648:6675   */\n      swap1\n      pop\n        /* \"#utility.yul\":6595:6681   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6687:6799   */\n    tag_361:\n        /* \"#utility.yul\":6770:6792   */\n      tag_469\n        /* \"#utility.yul\":6786:6791   */\n      dup2\n        /* \"#utility.yul\":6770:6792   */\n      tag_360\n      jump\t// in\n    tag_469:\n        /* \"#utility.yul\":6765:6768   */\n      dup3\n        /* \"#utility.yul\":6758:6793   */\n      mstore\n        /* \"#utility.yul\":6687:6799   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6805:7019   */\n    tag_54:\n        /* \"#utility.yul\":6894:6898   */\n      0x00\n        /* \"#utility.yul\":6932:6934   */\n      0x20\n        /* \"#utility.yul\":6921:6930   */\n      dup3\n        /* \"#utility.yul\":6917:6935   */\n      add\n        /* \"#utility.yul\":6909:6935   */\n      swap1\n      pop\n        /* \"#utility.yul\":6945:7012   */\n      tag_471\n        /* \"#utility.yul\":7009:7010   */\n      0x00\n        /* \"#utility.yul\":6998:7007   */\n      dup4\n        /* \"#utility.yul\":6994:7011   */\n      add\n        /* \"#utility.yul\":6985:6991   */\n      dup5\n        /* \"#utility.yul\":6945:7012   */\n      tag_361\n      jump\t// in\n    tag_471:\n        /* \"#utility.yul\":6805:7019   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7025:7147   */\n    tag_362:\n        /* \"#utility.yul\":7098:7122   */\n      tag_473\n        /* \"#utility.yul\":7116:7121   */\n      dup2\n        /* \"#utility.yul\":7098:7122   */\n      tag_339\n      jump\t// in\n    tag_473:\n        /* \"#utility.yul\":7091:7096   */\n      dup2\n        /* \"#utility.yul\":7088:7123   */\n      eq\n        /* \"#utility.yul\":7078:7141   */\n      tag_474\n      jumpi\n        /* \"#utility.yul\":7137:7138   */\n      0x00\n        /* \"#utility.yul\":7134:7135   */\n      0x00\n        /* \"#utility.yul\":7127:7139   */\n      revert\n        /* \"#utility.yul\":7078:7141   */\n    tag_474:\n        /* \"#utility.yul\":7025:7147   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7153:7292   */\n    tag_363:\n        /* \"#utility.yul\":7199:7204   */\n      0x00\n        /* \"#utility.yul\":7237:7243   */\n      dup2\n        /* \"#utility.yul\":7224:7244   */\n      calldataload\n        /* \"#utility.yul\":7215:7244   */\n      swap1\n      pop\n        /* \"#utility.yul\":7253:7286   */\n      tag_476\n        /* \"#utility.yul\":7280:7285   */\n      dup2\n        /* \"#utility.yul\":7253:7286   */\n      tag_362\n      jump\t// in\n    tag_476:\n        /* \"#utility.yul\":7153:7292   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7298:7418   */\n    tag_364:\n        /* \"#utility.yul\":7370:7393   */\n      tag_478\n        /* \"#utility.yul\":7387:7392   */\n      dup2\n        /* \"#utility.yul\":7370:7393   */\n      tag_343\n      jump\t// in\n    tag_478:\n        /* \"#utility.yul\":7363:7368   */\n      dup2\n        /* \"#utility.yul\":7360:7394   */\n      eq\n        /* \"#utility.yul\":7350:7412   */\n      tag_479\n      jumpi\n        /* \"#utility.yul\":7408:7409   */\n      0x00\n        /* \"#utility.yul\":7405:7406   */\n      0x00\n        /* \"#utility.yul\":7398:7410   */\n      revert\n        /* \"#utility.yul\":7350:7412   */\n    tag_479:\n        /* \"#utility.yul\":7298:7418   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7424:7561   */\n    tag_365:\n        /* \"#utility.yul\":7469:7474   */\n      0x00\n        /* \"#utility.yul\":7507:7513   */\n      dup2\n        /* \"#utility.yul\":7494:7514   */\n      calldataload\n        /* \"#utility.yul\":7485:7514   */\n      swap1\n      pop\n        /* \"#utility.yul\":7523:7555   */\n      tag_481\n        /* \"#utility.yul\":7549:7554   */\n      dup2\n        /* \"#utility.yul\":7523:7555   */\n      tag_364\n      jump\t// in\n    tag_481:\n        /* \"#utility.yul\":7424:7561   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7567:7644   */\n    tag_366:\n        /* \"#utility.yul\":7604:7611   */\n      0x00\n        /* \"#utility.yul\":7633:7638   */\n      dup2\n        /* \"#utility.yul\":7622:7638   */\n      swap1\n      pop\n        /* \"#utility.yul\":7567:7644   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7650:7772   */\n    tag_367:\n        /* \"#utility.yul\":7723:7747   */\n      tag_484\n        /* \"#utility.yul\":7741:7746   */\n      dup2\n        /* \"#utility.yul\":7723:7747   */\n      tag_366\n      jump\t// in\n    tag_484:\n        /* \"#utility.yul\":7716:7721   */\n      dup2\n        /* \"#utility.yul\":7713:7748   */\n      eq\n        /* \"#utility.yul\":7703:7766   */\n      tag_485\n      jumpi\n        /* \"#utility.yul\":7762:7763   */\n      0x00\n        /* \"#utility.yul\":7759:7760   */\n      0x00\n        /* \"#utility.yul\":7752:7764   */\n      revert\n        /* \"#utility.yul\":7703:7766   */\n    tag_485:\n        /* \"#utility.yul\":7650:7772   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7778:7917   */\n    tag_368:\n        /* \"#utility.yul\":7824:7829   */\n      0x00\n        /* \"#utility.yul\":7862:7868   */\n      dup2\n        /* \"#utility.yul\":7849:7869   */\n      calldataload\n        /* \"#utility.yul\":7840:7869   */\n      swap1\n      pop\n        /* \"#utility.yul\":7878:7911   */\n      tag_487\n        /* \"#utility.yul\":7905:7910   */\n      dup2\n        /* \"#utility.yul\":7878:7911   */\n      tag_367\n      jump\t// in\n    tag_487:\n        /* \"#utility.yul\":7778:7917   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7923:8830   */\n    tag_62:\n        /* \"#utility.yul\":8016:8022   */\n      0x00\n        /* \"#utility.yul\":8024:8030   */\n      0x00\n        /* \"#utility.yul\":8032:8038   */\n      0x00\n        /* \"#utility.yul\":8040:8046   */\n      0x00\n        /* \"#utility.yul\":8048:8054   */\n      0x00\n        /* \"#utility.yul\":8097:8100   */\n      0xa0\n        /* \"#utility.yul\":8085:8094   */\n      dup7\n        /* \"#utility.yul\":8076:8083   */\n      dup9\n        /* \"#utility.yul\":8072:8095   */\n      sub\n        /* \"#utility.yul\":8068:8101   */\n      slt\n        /* \"#utility.yul\":8065:8185   */\n      iszero\n      tag_489\n      jumpi\n        /* \"#utility.yul\":8104:8183   */\n      tag_490\n      tag_332\n      jump\t// in\n    tag_490:\n        /* \"#utility.yul\":8065:8185   */\n    tag_489:\n        /* \"#utility.yul\":8224:8225   */\n      0x00\n        /* \"#utility.yul\":8249:8302   */\n      tag_491\n        /* \"#utility.yul\":8294:8301   */\n      dup9\n        /* \"#utility.yul\":8285:8291   */\n      dup3\n        /* \"#utility.yul\":8274:8283   */\n      dup10\n        /* \"#utility.yul\":8270:8292   */\n      add\n        /* \"#utility.yul\":8249:8302   */\n      tag_363\n      jump\t// in\n    tag_491:\n        /* \"#utility.yul\":8239:8302   */\n      swap6\n      pop\n        /* \"#utility.yul\":8195:8312   */\n      pop\n        /* \"#utility.yul\":8351:8353   */\n      0x20\n        /* \"#utility.yul\":8377:8430   */\n      tag_492\n        /* \"#utility.yul\":8422:8429   */\n      dup9\n        /* \"#utility.yul\":8413:8419   */\n      dup3\n        /* \"#utility.yul\":8402:8411   */\n      dup10\n        /* \"#utility.yul\":8398:8420   */\n      add\n        /* \"#utility.yul\":8377:8430   */\n      tag_336\n      jump\t// in\n    tag_492:\n        /* \"#utility.yul\":8367:8430   */\n      swap5\n      pop\n        /* \"#utility.yul\":8322:8440   */\n      pop\n        /* \"#utility.yul\":8479:8481   */\n      0x40\n        /* \"#utility.yul\":8505:8557   */\n      tag_493\n        /* \"#utility.yul\":8549:8556   */\n      dup9\n        /* \"#utility.yul\":8540:8546   */\n      dup3\n        /* \"#utility.yul\":8529:8538   */\n      dup10\n        /* \"#utility.yul\":8525:8547   */\n      add\n        /* \"#utility.yul\":8505:8557   */\n      tag_365\n      jump\t// in\n    tag_493:\n        /* \"#utility.yul\":8495:8557   */\n      swap4\n      pop\n        /* \"#utility.yul\":8450:8567   */\n      pop\n        /* \"#utility.yul\":8606:8608   */\n      0x60\n        /* \"#utility.yul\":8632:8684   */\n      tag_494\n        /* \"#utility.yul\":8676:8683   */\n      dup9\n        /* \"#utility.yul\":8667:8673   */\n      dup3\n        /* \"#utility.yul\":8656:8665   */\n      dup10\n        /* \"#utility.yul\":8652:8674   */\n      add\n        /* \"#utility.yul\":8632:8684   */\n      tag_365\n      jump\t// in\n    tag_494:\n        /* \"#utility.yul\":8622:8684   */\n      swap3\n      pop\n        /* \"#utility.yul\":8577:8694   */\n      pop\n        /* \"#utility.yul\":8733:8736   */\n      0x80\n        /* \"#utility.yul\":8760:8813   */\n      tag_495\n        /* \"#utility.yul\":8805:8812   */\n      dup9\n        /* \"#utility.yul\":8796:8802   */\n      dup3\n        /* \"#utility.yul\":8785:8794   */\n      dup10\n        /* \"#utility.yul\":8781:8803   */\n      add\n        /* \"#utility.yul\":8760:8813   */\n      tag_368\n      jump\t// in\n    tag_495:\n        /* \"#utility.yul\":8750:8813   */\n      swap2\n      pop\n        /* \"#utility.yul\":8704:8823   */\n      pop\n        /* \"#utility.yul\":7923:8830   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      swap1\n      swap4\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8836:8954   */\n    tag_369:\n        /* \"#utility.yul\":8923:8947   */\n      tag_497\n        /* \"#utility.yul\":8941:8946   */\n      dup2\n        /* \"#utility.yul\":8923:8947   */\n      tag_334\n      jump\t// in\n    tag_497:\n        /* \"#utility.yul\":8918:8921   */\n      dup3\n        /* \"#utility.yul\":8911:8948   */\n      mstore\n        /* \"#utility.yul\":8836:8954   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8960:9182   */\n    tag_65:\n        /* \"#utility.yul\":9053:9057   */\n      0x00\n        /* \"#utility.yul\":9091:9093   */\n      0x20\n        /* \"#utility.yul\":9080:9089   */\n      dup3\n        /* \"#utility.yul\":9076:9094   */\n      add\n        /* \"#utility.yul\":9068:9094   */\n      swap1\n      pop\n        /* \"#utility.yul\":9104:9175   */\n      tag_499\n        /* \"#utility.yul\":9172:9173   */\n      0x00\n        /* \"#utility.yul\":9161:9170   */\n      dup4\n        /* \"#utility.yul\":9157:9174   */\n      add\n        /* \"#utility.yul\":9148:9154   */\n      dup5\n        /* \"#utility.yul\":9104:9175   */\n      tag_369\n      jump\t// in\n    tag_499:\n        /* \"#utility.yul\":8960:9182   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9188:9805   */\n    tag_74:\n        /* \"#utility.yul\":9264:9270   */\n      0x00\n        /* \"#utility.yul\":9272:9278   */\n      0x00\n        /* \"#utility.yul\":9280:9286   */\n      0x00\n        /* \"#utility.yul\":9329:9331   */\n      0x60\n        /* \"#utility.yul\":9317:9326   */\n      dup5\n        /* \"#utility.yul\":9308:9315   */\n      dup7\n        /* \"#utility.yul\":9304:9327   */\n      sub\n        /* \"#utility.yul\":9300:9332   */\n      slt\n        /* \"#utility.yul\":9297:9416   */\n      iszero\n      tag_501\n      jumpi\n        /* \"#utility.yul\":9335:9414   */\n      tag_502\n      tag_332\n      jump\t// in\n    tag_502:\n        /* \"#utility.yul\":9297:9416   */\n    tag_501:\n        /* \"#utility.yul\":9455:9456   */\n      0x00\n        /* \"#utility.yul\":9480:9533   */\n      tag_503\n        /* \"#utility.yul\":9525:9532   */\n      dup7\n        /* \"#utility.yul\":9516:9522   */\n      dup3\n        /* \"#utility.yul\":9505:9514   */\n      dup8\n        /* \"#utility.yul\":9501:9523   */\n      add\n        /* \"#utility.yul\":9480:9533   */\n      tag_363\n      jump\t// in\n    tag_503:\n        /* \"#utility.yul\":9470:9533   */\n      swap4\n      pop\n        /* \"#utility.yul\":9426:9543   */\n      pop\n        /* \"#utility.yul\":9582:9584   */\n      0x20\n        /* \"#utility.yul\":9608:9661   */\n      tag_504\n        /* \"#utility.yul\":9653:9660   */\n      dup7\n        /* \"#utility.yul\":9644:9650   */\n      dup3\n        /* \"#utility.yul\":9633:9642   */\n      dup8\n        /* \"#utility.yul\":9629:9651   */\n      add\n        /* \"#utility.yul\":9608:9661   */\n      tag_336\n      jump\t// in\n    tag_504:\n        /* \"#utility.yul\":9598:9661   */\n      swap3\n      pop\n        /* \"#utility.yul\":9553:9671   */\n      pop\n        /* \"#utility.yul\":9710:9712   */\n      0x40\n        /* \"#utility.yul\":9736:9788   */\n      tag_505\n        /* \"#utility.yul\":9780:9787   */\n      dup7\n        /* \"#utility.yul\":9771:9777   */\n      dup3\n        /* \"#utility.yul\":9760:9769   */\n      dup8\n        /* \"#utility.yul\":9756:9778   */\n      add\n        /* \"#utility.yul\":9736:9788   */\n      tag_365\n      jump\t// in\n    tag_505:\n        /* \"#utility.yul\":9726:9788   */\n      swap2\n      pop\n        /* \"#utility.yul\":9681:9798   */\n      pop\n        /* \"#utility.yul\":9188:9805   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":9811:10285   */\n    tag_79:\n        /* \"#utility.yul\":9879:9885   */\n      0x00\n        /* \"#utility.yul\":9887:9893   */\n      0x00\n        /* \"#utility.yul\":9936:9938   */\n      0x40\n        /* \"#utility.yul\":9924:9933   */\n      dup4\n        /* \"#utility.yul\":9915:9922   */\n      dup6\n        /* \"#utility.yul\":9911:9934   */\n      sub\n        /* \"#utility.yul\":9907:9939   */\n      slt\n        /* \"#utility.yul\":9904:10023   */\n      iszero\n      tag_507\n      jumpi\n        /* \"#utility.yul\":9942:10021   */\n      tag_508\n      tag_332\n      jump\t// in\n    tag_508:\n        /* \"#utility.yul\":9904:10023   */\n    tag_507:\n        /* \"#utility.yul\":10062:10063   */\n      0x00\n        /* \"#utility.yul\":10087:10140   */\n      tag_509\n        /* \"#utility.yul\":10132:10139   */\n      dup6\n        /* \"#utility.yul\":10123:10129   */\n      dup3\n        /* \"#utility.yul\":10112:10121   */\n      dup7\n        /* \"#utility.yul\":10108:10130   */\n      add\n        /* \"#utility.yul\":10087:10140   */\n      tag_336\n      jump\t// in\n    tag_509:\n        /* \"#utility.yul\":10077:10140   */\n      swap3\n      pop\n        /* \"#utility.yul\":10033:10150   */\n      pop\n        /* \"#utility.yul\":10189:10191   */\n      0x20\n        /* \"#utility.yul\":10215:10268   */\n      tag_510\n        /* \"#utility.yul\":10260:10267   */\n      dup6\n        /* \"#utility.yul\":10251:10257   */\n      dup3\n        /* \"#utility.yul\":10240:10249   */\n      dup7\n        /* \"#utility.yul\":10236:10258   */\n      add\n        /* \"#utility.yul\":10215:10268   */\n      tag_363\n      jump\t// in\n    tag_510:\n        /* \"#utility.yul\":10205:10268   */\n      swap2\n      pop\n        /* \"#utility.yul\":10160:10278   */\n      pop\n        /* \"#utility.yul\":9811:10285   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10291:10411   */\n    tag_370:\n        /* \"#utility.yul\":10363:10386   */\n      tag_512\n        /* \"#utility.yul\":10380:10385   */\n      dup2\n        /* \"#utility.yul\":10363:10386   */\n      tag_350\n      jump\t// in\n    tag_512:\n        /* \"#utility.yul\":10356:10361   */\n      dup2\n        /* \"#utility.yul\":10353:10387   */\n      eq\n        /* \"#utility.yul\":10343:10405   */\n      tag_513\n      jumpi\n        /* \"#utility.yul\":10401:10402   */\n      0x00\n        /* \"#utility.yul\":10398:10399   */\n      0x00\n        /* \"#utility.yul\":10391:10403   */\n      revert\n        /* \"#utility.yul\":10343:10405   */\n    tag_513:\n        /* \"#utility.yul\":10291:10411   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10417:10554   */\n    tag_371:\n        /* \"#utility.yul\":10462:10467   */\n      0x00\n        /* \"#utility.yul\":10500:10506   */\n      dup2\n        /* \"#utility.yul\":10487:10507   */\n      calldataload\n        /* \"#utility.yul\":10478:10507   */\n      swap1\n      pop\n        /* \"#utility.yul\":10516:10548   */\n      tag_515\n        /* \"#utility.yul\":10542:10547   */\n      dup2\n        /* \"#utility.yul\":10516:10548   */\n      tag_370\n      jump\t// in\n    tag_515:\n        /* \"#utility.yul\":10417:10554   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10560:11032   */\n    tag_86:\n        /* \"#utility.yul\":10627:10633   */\n      0x00\n        /* \"#utility.yul\":10635:10641   */\n      0x00\n        /* \"#utility.yul\":10684:10686   */\n      0x40\n        /* \"#utility.yul\":10672:10681   */\n      dup4\n        /* \"#utility.yul\":10663:10670   */\n      dup6\n        /* \"#utility.yul\":10659:10682   */\n      sub\n        /* \"#utility.yul\":10655:10687   */\n      slt\n        /* \"#utility.yul\":10652:10771   */\n      iszero\n      tag_517\n      jumpi\n        /* \"#utility.yul\":10690:10769   */\n      tag_518\n      tag_332\n      jump\t// in\n    tag_518:\n        /* \"#utility.yul\":10652:10771   */\n    tag_517:\n        /* \"#utility.yul\":10810:10811   */\n      0x00\n        /* \"#utility.yul\":10835:10887   */\n      tag_519\n        /* \"#utility.yul\":10879:10886   */\n      dup6\n        /* \"#utility.yul\":10870:10876   */\n      dup3\n        /* \"#utility.yul\":10859:10868   */\n      dup7\n        /* \"#utility.yul\":10855:10877   */\n      add\n        /* \"#utility.yul\":10835:10887   */\n      tag_371\n      jump\t// in\n    tag_519:\n        /* \"#utility.yul\":10825:10887   */\n      swap3\n      pop\n        /* \"#utility.yul\":10781:10897   */\n      pop\n        /* \"#utility.yul\":10936:10938   */\n      0x20\n        /* \"#utility.yul\":10962:11015   */\n      tag_520\n        /* \"#utility.yul\":11007:11014   */\n      dup6\n        /* \"#utility.yul\":10998:11004   */\n      dup3\n        /* \"#utility.yul\":10987:10996   */\n      dup7\n        /* \"#utility.yul\":10983:11005   */\n      add\n        /* \"#utility.yul\":10962:11015   */\n      tag_363\n      jump\t// in\n    tag_520:\n        /* \"#utility.yul\":10952:11015   */\n      swap2\n      pop\n        /* \"#utility.yul\":10907:11025   */\n      pop\n        /* \"#utility.yul\":10560:11032   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11038:11512   */\n    tag_90:\n        /* \"#utility.yul\":11106:11112   */\n      0x00\n        /* \"#utility.yul\":11114:11120   */\n      0x00\n        /* \"#utility.yul\":11163:11165   */\n      0x40\n        /* \"#utility.yul\":11151:11160   */\n      dup4\n        /* \"#utility.yul\":11142:11149   */\n      dup6\n        /* \"#utility.yul\":11138:11161   */\n      sub\n        /* \"#utility.yul\":11134:11166   */\n      slt\n        /* \"#utility.yul\":11131:11250   */\n      iszero\n      tag_522\n      jumpi\n        /* \"#utility.yul\":11169:11248   */\n      tag_523\n      tag_332\n      jump\t// in\n    tag_523:\n        /* \"#utility.yul\":11131:11250   */\n    tag_522:\n        /* \"#utility.yul\":11289:11290   */\n      0x00\n        /* \"#utility.yul\":11314:11367   */\n      tag_524\n        /* \"#utility.yul\":11359:11366   */\n      dup6\n        /* \"#utility.yul\":11350:11356   */\n      dup3\n        /* \"#utility.yul\":11339:11348   */\n      dup7\n        /* \"#utility.yul\":11335:11357   */\n      add\n        /* \"#utility.yul\":11314:11367   */\n      tag_336\n      jump\t// in\n    tag_524:\n        /* \"#utility.yul\":11304:11367   */\n      swap3\n      pop\n        /* \"#utility.yul\":11260:11377   */\n      pop\n        /* \"#utility.yul\":11416:11418   */\n      0x20\n        /* \"#utility.yul\":11442:11495   */\n      tag_525\n        /* \"#utility.yul\":11487:11494   */\n      dup6\n        /* \"#utility.yul\":11478:11484   */\n      dup3\n        /* \"#utility.yul\":11467:11476   */\n      dup7\n        /* \"#utility.yul\":11463:11485   */\n      add\n        /* \"#utility.yul\":11442:11495   */\n      tag_368\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":11432:11495   */\n      swap2\n      pop\n        /* \"#utility.yul\":11387:11505   */\n      pop\n        /* \"#utility.yul\":11038:11512   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11518:11847   */\n    tag_94:\n        /* \"#utility.yul\":11577:11583   */\n      0x00\n        /* \"#utility.yul\":11626:11628   */\n      0x20\n        /* \"#utility.yul\":11614:11623   */\n      dup3\n        /* \"#utility.yul\":11605:11612   */\n      dup5\n        /* \"#utility.yul\":11601:11624   */\n      sub\n        /* \"#utility.yul\":11597:11629   */\n      slt\n        /* \"#utility.yul\":11594:11713   */\n      iszero\n      tag_527\n      jumpi\n        /* \"#utility.yul\":11632:11711   */\n      tag_528\n      tag_332\n      jump\t// in\n    tag_528:\n        /* \"#utility.yul\":11594:11713   */\n    tag_527:\n        /* \"#utility.yul\":11752:11753   */\n      0x00\n        /* \"#utility.yul\":11777:11830   */\n      tag_529\n        /* \"#utility.yul\":11822:11829   */\n      dup5\n        /* \"#utility.yul\":11813:11819   */\n      dup3\n        /* \"#utility.yul\":11802:11811   */\n      dup6\n        /* \"#utility.yul\":11798:11820   */\n      add\n        /* \"#utility.yul\":11777:11830   */\n      tag_363\n      jump\t// in\n    tag_529:\n        /* \"#utility.yul\":11767:11830   */\n      swap2\n      pop\n        /* \"#utility.yul\":11723:11840   */\n      pop\n        /* \"#utility.yul\":11518:11847   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11853:11968   */\n    tag_372:\n        /* \"#utility.yul\":11938:11961   */\n      tag_531\n        /* \"#utility.yul\":11955:11960   */\n      dup2\n        /* \"#utility.yul\":11938:11961   */\n      tag_343\n      jump\t// in\n    tag_531:\n        /* \"#utility.yul\":11933:11936   */\n      dup3\n        /* \"#utility.yul\":11926:11962   */\n      mstore\n        /* \"#utility.yul\":11853:11968   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11974:12092   */\n    tag_373:\n        /* \"#utility.yul\":12061:12085   */\n      tag_533\n        /* \"#utility.yul\":12079:12084   */\n      dup2\n        /* \"#utility.yul\":12061:12085   */\n      tag_366\n      jump\t// in\n    tag_533:\n        /* \"#utility.yul\":12056:12059   */\n      dup3\n        /* \"#utility.yul\":12049:12086   */\n      mstore\n        /* \"#utility.yul\":11974:12092   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12098:12643   */\n    tag_149:\n        /* \"#utility.yul\":12271:12275   */\n      0x00\n        /* \"#utility.yul\":12309:12312   */\n      0x80\n        /* \"#utility.yul\":12298:12307   */\n      dup3\n        /* \"#utility.yul\":12294:12313   */\n      add\n        /* \"#utility.yul\":12286:12313   */\n      swap1\n      pop\n        /* \"#utility.yul\":12323:12392   */\n      tag_535\n        /* \"#utility.yul\":12389:12390   */\n      0x00\n        /* \"#utility.yul\":12378:12387   */\n      dup4\n        /* \"#utility.yul\":12374:12391   */\n      add\n        /* \"#utility.yul\":12365:12371   */\n      dup8\n        /* \"#utility.yul\":12323:12392   */\n      tag_372\n      jump\t// in\n    tag_535:\n        /* \"#utility.yul\":12402:12472   */\n      tag_536\n        /* \"#utility.yul\":12468:12470   */\n      0x20\n        /* \"#utility.yul\":12457:12466   */\n      dup4\n        /* \"#utility.yul\":12453:12471   */\n      add\n        /* \"#utility.yul\":12444:12450   */\n      dup7\n        /* \"#utility.yul\":12402:12472   */\n      tag_372\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":12482:12554   */\n      tag_537\n        /* \"#utility.yul\":12550:12552   */\n      0x40\n        /* \"#utility.yul\":12539:12548   */\n      dup4\n        /* \"#utility.yul\":12535:12553   */\n      add\n        /* \"#utility.yul\":12526:12532   */\n      dup6\n        /* \"#utility.yul\":12482:12554   */\n      tag_357\n      jump\t// in\n    tag_537:\n        /* \"#utility.yul\":12564:12636   */\n      tag_538\n        /* \"#utility.yul\":12632:12634   */\n      0x60\n        /* \"#utility.yul\":12621:12630   */\n      dup4\n        /* \"#utility.yul\":12617:12635   */\n      add\n        /* \"#utility.yul\":12608:12614   */\n      dup5\n        /* \"#utility.yul\":12564:12636   */\n      tag_373\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":12098:12643   */\n      swap6\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12649:12871   */\n    tag_169:\n        /* \"#utility.yul\":12742:12746   */\n      0x00\n        /* \"#utility.yul\":12780:12782   */\n      0x20\n        /* \"#utility.yul\":12769:12778   */\n      dup3\n        /* \"#utility.yul\":12765:12783   */\n      add\n        /* \"#utility.yul\":12757:12783   */\n      swap1\n      pop\n        /* \"#utility.yul\":12793:12864   */\n      tag_540\n        /* \"#utility.yul\":12861:12862   */\n      0x00\n        /* \"#utility.yul\":12850:12859   */\n      dup4\n        /* \"#utility.yul\":12846:12863   */\n      add\n        /* \"#utility.yul\":12837:12843   */\n      dup5\n        /* \"#utility.yul\":12793:12864   */\n      tag_373\n      jump\t// in\n    tag_540:\n        /* \"#utility.yul\":12649:12871   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12877:12971   */\n    tag_374:\n        /* \"#utility.yul\":12910:12918   */\n      0x00\n        /* \"#utility.yul\":12958:12963   */\n      dup2\n        /* \"#utility.yul\":12954:12956   */\n      0x60\n        /* \"#utility.yul\":12950:12964   */\n      shl\n        /* \"#utility.yul\":12929:12964   */\n      swap1\n      pop\n        /* \"#utility.yul\":12877:12971   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12977:13071   */\n    tag_375:\n        /* \"#utility.yul\":13016:13023   */\n      0x00\n        /* \"#utility.yul\":13045:13065   */\n      tag_543\n        /* \"#utility.yul\":13059:13064   */\n      dup3\n        /* \"#utility.yul\":13045:13065   */\n      tag_374\n      jump\t// in\n    tag_543:\n        /* \"#utility.yul\":13034:13065   */\n      swap1\n      pop\n        /* \"#utility.yul\":12977:13071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13077:13177   */\n    tag_376:\n        /* \"#utility.yul\":13116:13123   */\n      0x00\n        /* \"#utility.yul\":13145:13171   */\n      tag_545\n        /* \"#utility.yul\":13165:13170   */\n      dup3\n        /* \"#utility.yul\":13145:13171   */\n      tag_375\n      jump\t// in\n    tag_545:\n        /* \"#utility.yul\":13134:13171   */\n      swap1\n      pop\n        /* \"#utility.yul\":13077:13177   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13183:13340   */\n    tag_377:\n        /* \"#utility.yul\":13288:13333   */\n      tag_547\n        /* \"#utility.yul\":13308:13332   */\n      tag_548\n        /* \"#utility.yul\":13326:13331   */\n      dup3\n        /* \"#utility.yul\":13308:13332   */\n      tag_339\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":13288:13333   */\n      tag_376\n      jump\t// in\n    tag_547:\n        /* \"#utility.yul\":13283:13286   */\n      dup3\n        /* \"#utility.yul\":13276:13334   */\n      mstore\n        /* \"#utility.yul\":13183:13340   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13346:13425   */\n    tag_378:\n        /* \"#utility.yul\":13385:13392   */\n      0x00\n        /* \"#utility.yul\":13414:13419   */\n      dup2\n        /* \"#utility.yul\":13403:13419   */\n      swap1\n      pop\n        /* \"#utility.yul\":13346:13425   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13431:13588   */\n    tag_379:\n        /* \"#utility.yul\":13536:13581   */\n      tag_551\n        /* \"#utility.yul\":13556:13580   */\n      tag_552\n        /* \"#utility.yul\":13574:13579   */\n      dup3\n        /* \"#utility.yul\":13556:13580   */\n      tag_334\n      jump\t// in\n    tag_552:\n        /* \"#utility.yul\":13536:13581   */\n      tag_378\n      jump\t// in\n    tag_551:\n        /* \"#utility.yul\":13531:13534   */\n      dup3\n        /* \"#utility.yul\":13524:13582   */\n      mstore\n        /* \"#utility.yul\":13431:13588   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13594:13690   */\n    tag_380:\n        /* \"#utility.yul\":13628:13636   */\n      0x00\n        /* \"#utility.yul\":13677:13682   */\n      dup2\n        /* \"#utility.yul\":13672:13675   */\n      0xc0\n        /* \"#utility.yul\":13668:13683   */\n      shl\n        /* \"#utility.yul\":13647:13683   */\n      swap1\n      pop\n        /* \"#utility.yul\":13594:13690   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13696:13790   */\n    tag_381:\n        /* \"#utility.yul\":13734:13741   */\n      0x00\n        /* \"#utility.yul\":13763:13784   */\n      tag_555\n        /* \"#utility.yul\":13778:13783   */\n      dup3\n        /* \"#utility.yul\":13763:13784   */\n      tag_380\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":13752:13784   */\n      swap1\n      pop\n        /* \"#utility.yul\":13696:13790   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13796:13949   */\n    tag_382:\n        /* \"#utility.yul\":13899:13942   */\n      tag_557\n        /* \"#utility.yul\":13918:13941   */\n      tag_558\n        /* \"#utility.yul\":13935:13940   */\n      dup3\n        /* \"#utility.yul\":13918:13941   */\n      tag_343\n      jump\t// in\n    tag_558:\n        /* \"#utility.yul\":13899:13942   */\n      tag_381\n      jump\t// in\n    tag_557:\n        /* \"#utility.yul\":13894:13897   */\n      dup3\n        /* \"#utility.yul\":13887:13943   */\n      mstore\n        /* \"#utility.yul\":13796:13949   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13955:14488   */\n    tag_191:\n        /* \"#utility.yul\":14121:14124   */\n      0x00\n        /* \"#utility.yul\":14136:14211   */\n      tag_560\n        /* \"#utility.yul\":14207:14210   */\n      dup3\n        /* \"#utility.yul\":14198:14204   */\n      dup7\n        /* \"#utility.yul\":14136:14211   */\n      tag_377\n      jump\t// in\n    tag_560:\n        /* \"#utility.yul\":14236:14238   */\n      0x14\n        /* \"#utility.yul\":14231:14234   */\n      dup3\n        /* \"#utility.yul\":14227:14239   */\n      add\n        /* \"#utility.yul\":14220:14239   */\n      swap2\n      pop\n        /* \"#utility.yul\":14249:14324   */\n      tag_561\n        /* \"#utility.yul\":14320:14323   */\n      dup3\n        /* \"#utility.yul\":14311:14317   */\n      dup6\n        /* \"#utility.yul\":14249:14324   */\n      tag_379\n      jump\t// in\n    tag_561:\n        /* \"#utility.yul\":14349:14351   */\n      0x20\n        /* \"#utility.yul\":14344:14347   */\n      dup3\n        /* \"#utility.yul\":14340:14352   */\n      add\n        /* \"#utility.yul\":14333:14352   */\n      swap2\n      pop\n        /* \"#utility.yul\":14362:14435   */\n      tag_562\n        /* \"#utility.yul\":14431:14434   */\n      dup3\n        /* \"#utility.yul\":14422:14428   */\n      dup5\n        /* \"#utility.yul\":14362:14435   */\n      tag_382\n      jump\t// in\n    tag_562:\n        /* \"#utility.yul\":14460:14461   */\n      0x08\n        /* \"#utility.yul\":14455:14458   */\n      dup3\n        /* \"#utility.yul\":14451:14462   */\n      add\n        /* \"#utility.yul\":14444:14462   */\n      swap2\n      pop\n        /* \"#utility.yul\":14479:14482   */\n      dup2\n        /* \"#utility.yul\":14472:14482   */\n      swap1\n      pop\n        /* \"#utility.yul\":13955:14488   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14494:14674   */\n    tag_383:\n        /* \"#utility.yul\":14542:14619   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":14539:14540   */\n      0x00\n        /* \"#utility.yul\":14532:14620   */\n      mstore\n        /* \"#utility.yul\":14639:14643   */\n      0x11\n        /* \"#utility.yul\":14636:14637   */\n      0x04\n        /* \"#utility.yul\":14629:14644   */\n      mstore\n        /* \"#utility.yul\":14663:14667   */\n      0x24\n        /* \"#utility.yul\":14660:14661   */\n      0x00\n        /* \"#utility.yul\":14653:14668   */\n      revert\n        /* \"#utility.yul\":14680:14874   */\n    tag_209:\n        /* \"#utility.yul\":14720:14724   */\n      0x00\n        /* \"#utility.yul\":14740:14760   */\n      tag_565\n        /* \"#utility.yul\":14758:14759   */\n      dup3\n        /* \"#utility.yul\":14740:14760   */\n      tag_366\n      jump\t// in\n    tag_565:\n        /* \"#utility.yul\":14735:14760   */\n      swap2\n      pop\n        /* \"#utility.yul\":14774:14794   */\n      tag_566\n        /* \"#utility.yul\":14792:14793   */\n      dup4\n        /* \"#utility.yul\":14774:14794   */\n      tag_366\n      jump\t// in\n    tag_566:\n        /* \"#utility.yul\":14769:14794   */\n      swap3\n      pop\n        /* \"#utility.yul\":14818:14819   */\n      dup3\n        /* \"#utility.yul\":14815:14816   */\n      dup3\n        /* \"#utility.yul\":14811:14820   */\n      sub\n        /* \"#utility.yul\":14803:14820   */\n      swap1\n      pop\n        /* \"#utility.yul\":14842:14843   */\n      dup2\n        /* \"#utility.yul\":14836:14840   */\n      dup2\n        /* \"#utility.yul\":14833:14844   */\n      gt\n        /* \"#utility.yul\":14830:14867   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":14847:14865   */\n      tag_568\n      tag_383\n      jump\t// in\n    tag_568:\n        /* \"#utility.yul\":14830:14867   */\n    tag_567:\n        /* \"#utility.yul\":14680:14874   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14880:15212   */\n    tag_215:\n        /* \"#utility.yul\":15001:15005   */\n      0x00\n        /* \"#utility.yul\":15039:15041   */\n      0x40\n        /* \"#utility.yul\":15028:15037   */\n      dup3\n        /* \"#utility.yul\":15024:15042   */\n      add\n        /* \"#utility.yul\":15016:15042   */\n      swap1\n      pop\n        /* \"#utility.yul\":15052:15123   */\n      tag_570\n        /* \"#utility.yul\":15120:15121   */\n      0x00\n        /* \"#utility.yul\":15109:15118   */\n      dup4\n        /* \"#utility.yul\":15105:15122   */\n      add\n        /* \"#utility.yul\":15096:15102   */\n      dup6\n        /* \"#utility.yul\":15052:15123   */\n      tag_373\n      jump\t// in\n    tag_570:\n        /* \"#utility.yul\":15133:15205   */\n      tag_571\n        /* \"#utility.yul\":15201:15203   */\n      0x20\n        /* \"#utility.yul\":15190:15199   */\n      dup4\n        /* \"#utility.yul\":15186:15204   */\n      add\n        /* \"#utility.yul\":15177:15183   */\n      dup5\n        /* \"#utility.yul\":15133:15205   */\n      tag_373\n      jump\t// in\n    tag_571:\n        /* \"#utility.yul\":14880:15212   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15218:15546   */\n    tag_223:\n        /* \"#utility.yul\":15337:15341   */\n      0x00\n        /* \"#utility.yul\":15375:15377   */\n      0x40\n        /* \"#utility.yul\":15364:15373   */\n      dup3\n        /* \"#utility.yul\":15360:15378   */\n      add\n        /* \"#utility.yul\":15352:15378   */\n      swap1\n      pop\n        /* \"#utility.yul\":15388:15457   */\n      tag_573\n        /* \"#utility.yul\":15454:15455   */\n      0x00\n        /* \"#utility.yul\":15443:15452   */\n      dup4\n        /* \"#utility.yul\":15439:15456   */\n      add\n        /* \"#utility.yul\":15430:15436   */\n      dup6\n        /* \"#utility.yul\":15388:15457   */\n      tag_351\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":15467:15539   */\n      tag_574\n        /* \"#utility.yul\":15535:15537   */\n      0x20\n        /* \"#utility.yul\":15524:15533   */\n      dup4\n        /* \"#utility.yul\":15520:15538   */\n      add\n        /* \"#utility.yul\":15511:15517   */\n      dup5\n        /* \"#utility.yul\":15467:15539   */\n      tag_357\n      jump\t// in\n    tag_574:\n        /* \"#utility.yul\":15218:15546   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15552:15743   */\n    tag_237:\n        /* \"#utility.yul\":15592:15595   */\n      0x00\n        /* \"#utility.yul\":15611:15631   */\n      tag_576\n        /* \"#utility.yul\":15629:15630   */\n      dup3\n        /* \"#utility.yul\":15611:15631   */\n      tag_366\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":15606:15631   */\n      swap2\n      pop\n        /* \"#utility.yul\":15645:15665   */\n      tag_577\n        /* \"#utility.yul\":15663:15664   */\n      dup4\n        /* \"#utility.yul\":15645:15665   */\n      tag_366\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":15640:15665   */\n      swap3\n      pop\n        /* \"#utility.yul\":15688:15689   */\n      dup3\n        /* \"#utility.yul\":15685:15686   */\n      dup3\n        /* \"#utility.yul\":15681:15690   */\n      add\n        /* \"#utility.yul\":15674:15690   */\n      swap1\n      pop\n        /* \"#utility.yul\":15709:15712   */\n      dup1\n        /* \"#utility.yul\":15706:15707   */\n      dup3\n        /* \"#utility.yul\":15703:15713   */\n      gt\n        /* \"#utility.yul\":15700:15736   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":15716:15734   */\n      tag_579\n      tag_383\n      jump\t// in\n    tag_579:\n        /* \"#utility.yul\":15700:15736   */\n    tag_578:\n        /* \"#utility.yul\":15552:15743   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15749:15835   */\n    tag_384:\n        /* \"#utility.yul\":15795:15802   */\n      0x00\n        /* \"#utility.yul\":15824:15829   */\n      dup2\n        /* \"#utility.yul\":15813:15829   */\n      swap1\n      pop\n        /* \"#utility.yul\":15749:15835   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15841:15997   */\n    tag_385:\n        /* \"#utility.yul\":15898:15907   */\n      0x00\n        /* \"#utility.yul\":15931:15991   */\n      tag_582\n        /* \"#utility.yul\":15947:15990   */\n      tag_583\n        /* \"#utility.yul\":15956:15989   */\n      tag_584\n        /* \"#utility.yul\":15983:15988   */\n      dup5\n        /* \"#utility.yul\":15956:15989   */\n      tag_384\n      jump\t// in\n    tag_584:\n        /* \"#utility.yul\":15947:15990   */\n      tag_352\n      jump\t// in\n    tag_583:\n        /* \"#utility.yul\":15931:15991   */\n      tag_360\n      jump\t// in\n    tag_582:\n        /* \"#utility.yul\":15918:15991   */\n      swap1\n      pop\n        /* \"#utility.yul\":15841:15997   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16003:16148   */\n    tag_386:\n        /* \"#utility.yul\":16097:16141   */\n      tag_586\n        /* \"#utility.yul\":16135:16140   */\n      dup2\n        /* \"#utility.yul\":16097:16141   */\n      tag_385\n      jump\t// in\n    tag_586:\n        /* \"#utility.yul\":16092:16095   */\n      dup3\n        /* \"#utility.yul\":16085:16142   */\n      mstore\n        /* \"#utility.yul\":16003:16148   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16154:16500   */\n    tag_276:\n        /* \"#utility.yul\":16282:16286   */\n      0x00\n        /* \"#utility.yul\":16320:16322   */\n      0x40\n        /* \"#utility.yul\":16309:16318   */\n      dup3\n        /* \"#utility.yul\":16305:16323   */\n      add\n        /* \"#utility.yul\":16297:16323   */\n      swap1\n      pop\n        /* \"#utility.yul\":16333:16411   */\n      tag_588\n        /* \"#utility.yul\":16408:16409   */\n      0x00\n        /* \"#utility.yul\":16397:16406   */\n      dup4\n        /* \"#utility.yul\":16393:16410   */\n      add\n        /* \"#utility.yul\":16384:16390   */\n      dup6\n        /* \"#utility.yul\":16333:16411   */\n      tag_386\n      jump\t// in\n    tag_588:\n        /* \"#utility.yul\":16421:16493   */\n      tag_589\n        /* \"#utility.yul\":16489:16491   */\n      0x20\n        /* \"#utility.yul\":16478:16487   */\n      dup4\n        /* \"#utility.yul\":16474:16492   */\n      add\n        /* \"#utility.yul\":16465:16471   */\n      dup5\n        /* \"#utility.yul\":16421:16493   */\n      tag_373\n      jump\t// in\n    tag_589:\n        /* \"#utility.yul\":16154:16500   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16506:16948   */\n    tag_280:\n        /* \"#utility.yul\":16655:16659   */\n      0x00\n        /* \"#utility.yul\":16693:16695   */\n      0x60\n        /* \"#utility.yul\":16682:16691   */\n      dup3\n        /* \"#utility.yul\":16678:16696   */\n      add\n        /* \"#utility.yul\":16670:16696   */\n      swap1\n      pop\n        /* \"#utility.yul\":16706:16777   */\n      tag_591\n        /* \"#utility.yul\":16774:16775   */\n      0x00\n        /* \"#utility.yul\":16763:16772   */\n      dup4\n        /* \"#utility.yul\":16759:16776   */\n      add\n        /* \"#utility.yul\":16750:16756   */\n      dup7\n        /* \"#utility.yul\":16706:16777   */\n      tag_357\n      jump\t// in\n    tag_591:\n        /* \"#utility.yul\":16787:16859   */\n      tag_592\n        /* \"#utility.yul\":16855:16857   */\n      0x20\n        /* \"#utility.yul\":16844:16853   */\n      dup4\n        /* \"#utility.yul\":16840:16858   */\n      add\n        /* \"#utility.yul\":16831:16837   */\n      dup6\n        /* \"#utility.yul\":16787:16859   */\n      tag_357\n      jump\t// in\n    tag_592:\n        /* \"#utility.yul\":16869:16941   */\n      tag_593\n        /* \"#utility.yul\":16937:16939   */\n      0x40\n        /* \"#utility.yul\":16926:16935   */\n      dup4\n        /* \"#utility.yul\":16922:16940   */\n      add\n        /* \"#utility.yul\":16913:16919   */\n      dup5\n        /* \"#utility.yul\":16869:16941   */\n      tag_373\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":16506:16948   */\n      swap5\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":16954:17286   */\n    tag_286:\n        /* \"#utility.yul\":17075:17079   */\n      0x00\n        /* \"#utility.yul\":17113:17115   */\n      0x40\n        /* \"#utility.yul\":17102:17111   */\n      dup3\n        /* \"#utility.yul\":17098:17116   */\n      add\n        /* \"#utility.yul\":17090:17116   */\n      swap1\n      pop\n        /* \"#utility.yul\":17126:17197   */\n      tag_595\n        /* \"#utility.yul\":17194:17195   */\n      0x00\n        /* \"#utility.yul\":17183:17192   */\n      dup4\n        /* \"#utility.yul\":17179:17196   */\n      add\n        /* \"#utility.yul\":17170:17176   */\n      dup6\n        /* \"#utility.yul\":17126:17197   */\n      tag_357\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":17207:17279   */\n      tag_596\n        /* \"#utility.yul\":17275:17277   */\n      0x20\n        /* \"#utility.yul\":17264:17273   */\n      dup4\n        /* \"#utility.yul\":17260:17278   */\n      add\n        /* \"#utility.yul\":17251:17257   */\n      dup5\n        /* \"#utility.yul\":17207:17279   */\n      tag_373\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":16954:17286   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17292:17472   */\n    tag_291:\n        /* \"#utility.yul\":17340:17417   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":17337:17338   */\n      0x00\n        /* \"#utility.yul\":17330:17418   */\n      mstore\n        /* \"#utility.yul\":17437:17441   */\n      0x12\n        /* \"#utility.yul\":17434:17435   */\n      0x04\n        /* \"#utility.yul\":17427:17442   */\n      mstore\n        /* \"#utility.yul\":17461:17465   */\n      0x24\n        /* \"#utility.yul\":17458:17459   */\n      0x00\n        /* \"#utility.yul\":17451:17466   */\n      revert\n        /* \"#utility.yul\":17478:17594   */\n    tag_387:\n        /* \"#utility.yul\":17548:17569   */\n      tag_599\n        /* \"#utility.yul\":17563:17568   */\n      dup2\n        /* \"#utility.yul\":17548:17569   */\n      tag_358\n      jump\t// in\n    tag_599:\n        /* \"#utility.yul\":17541:17546   */\n      dup2\n        /* \"#utility.yul\":17538:17570   */\n      eq\n        /* \"#utility.yul\":17528:17588   */\n      tag_600\n      jumpi\n        /* \"#utility.yul\":17584:17585   */\n      0x00\n        /* \"#utility.yul\":17581:17582   */\n      0x00\n        /* \"#utility.yul\":17574:17586   */\n      revert\n        /* \"#utility.yul\":17528:17588   */\n    tag_600:\n        /* \"#utility.yul\":17478:17594   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17600:17737   */\n    tag_388:\n        /* \"#utility.yul\":17654:17659   */\n      0x00\n        /* \"#utility.yul\":17685:17691   */\n      dup2\n        /* \"#utility.yul\":17679:17692   */\n      mload\n        /* \"#utility.yul\":17670:17692   */\n      swap1\n      pop\n        /* \"#utility.yul\":17701:17731   */\n      tag_602\n        /* \"#utility.yul\":17725:17730   */\n      dup2\n        /* \"#utility.yul\":17701:17731   */\n      tag_387\n      jump\t// in\n    tag_602:\n        /* \"#utility.yul\":17600:17737   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":17743:18088   */\n    tag_302:\n        /* \"#utility.yul\":17810:17816   */\n      0x00\n        /* \"#utility.yul\":17859:17861   */\n      0x20\n        /* \"#utility.yul\":17847:17856   */\n      dup3\n        /* \"#utility.yul\":17838:17845   */\n      dup5\n        /* \"#utility.yul\":17834:17857   */\n      sub\n        /* \"#utility.yul\":17830:17862   */\n      slt\n        /* \"#utility.yul\":17827:17946   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":17865:17944   */\n      tag_605\n      tag_332\n      jump\t// in\n    tag_605:\n        /* \"#utility.yul\":17827:17946   */\n    tag_604:\n        /* \"#utility.yul\":17985:17986   */\n      0x00\n        /* \"#utility.yul\":18010:18071   */\n      tag_606\n        /* \"#utility.yul\":18063:18070   */\n      dup5\n        /* \"#utility.yul\":18054:18060   */\n      dup3\n        /* \"#utility.yul\":18043:18052   */\n      dup6\n        /* \"#utility.yul\":18039:18061   */\n      add\n        /* \"#utility.yul\":18010:18071   */\n      tag_388\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":18000:18071   */\n      swap2\n      pop\n        /* \"#utility.yul\":17956:18081   */\n      pop\n        /* \"#utility.yul\":17743:18088   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18094:18192   */\n    tag_389:\n        /* \"#utility.yul\":18145:18151   */\n      0x00\n        /* \"#utility.yul\":18179:18184   */\n      dup2\n        /* \"#utility.yul\":18173:18185   */\n      mload\n        /* \"#utility.yul\":18163:18185   */\n      swap1\n      pop\n        /* \"#utility.yul\":18094:18192   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18198:18345   */\n    tag_390:\n        /* \"#utility.yul\":18299:18310   */\n      0x00\n        /* \"#utility.yul\":18336:18339   */\n      dup2\n        /* \"#utility.yul\":18321:18339   */\n      swap1\n      pop\n        /* \"#utility.yul\":18198:18345   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18351:18490   */\n    tag_391:\n        /* \"#utility.yul\":18440:18446   */\n      dup3\n        /* \"#utility.yul\":18435:18438   */\n      dup2\n        /* \"#utility.yul\":18430:18433   */\n      dup4\n        /* \"#utility.yul\":18424:18447   */\n      mcopy\n        /* \"#utility.yul\":18481:18482   */\n      0x00\n        /* \"#utility.yul\":18472:18478   */\n      dup4\n        /* \"#utility.yul\":18467:18470   */\n      dup4\n        /* \"#utility.yul\":18463:18479   */\n      add\n        /* \"#utility.yul\":18456:18483   */\n      mstore\n        /* \"#utility.yul\":18351:18490   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18496:18882   */\n    tag_392:\n        /* \"#utility.yul\":18600:18603   */\n      0x00\n        /* \"#utility.yul\":18628:18666   */\n      tag_611\n        /* \"#utility.yul\":18660:18665   */\n      dup3\n        /* \"#utility.yul\":18628:18666   */\n      tag_389\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":18682:18770   */\n      tag_612\n        /* \"#utility.yul\":18763:18769   */\n      dup2\n        /* \"#utility.yul\":18758:18761   */\n      dup6\n        /* \"#utility.yul\":18682:18770   */\n      tag_390\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":18675:18770   */\n      swap4\n      pop\n        /* \"#utility.yul\":18779:18844   */\n      tag_613\n        /* \"#utility.yul\":18837:18843   */\n      dup2\n        /* \"#utility.yul\":18832:18835   */\n      dup6\n        /* \"#utility.yul\":18825:18829   */\n      0x20\n        /* \"#utility.yul\":18818:18823   */\n      dup7\n        /* \"#utility.yul\":18814:18830   */\n      add\n        /* \"#utility.yul\":18779:18844   */\n      tag_391\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":18869:18875   */\n      dup1\n        /* \"#utility.yul\":18864:18867   */\n      dup5\n        /* \"#utility.yul\":18860:18876   */\n      add\n        /* \"#utility.yul\":18853:18876   */\n      swap2\n      pop\n        /* \"#utility.yul\":18604:18882   */\n      pop\n        /* \"#utility.yul\":18496:18882   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":18888:19159   */\n    tag_312:\n        /* \"#utility.yul\":19018:19021   */\n      0x00\n        /* \"#utility.yul\":19040:19133   */\n      tag_615\n        /* \"#utility.yul\":19129:19132   */\n      dup3\n        /* \"#utility.yul\":19120:19126   */\n      dup5\n        /* \"#utility.yul\":19040:19133   */\n      tag_392\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":19033:19133   */\n      swap2\n      pop\n        /* \"#utility.yul\":19150:19153   */\n      dup2\n        /* \"#utility.yul\":19143:19153   */\n      swap1\n      pop\n        /* \"#utility.yul\":18888:19159   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220fa2c85e239d774b1506cae5c4c4677b92d45b9017bc2f801c3633f437f28254b64736f6c634300081e0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_4111": {
									"entryPoint": null,
									"id": 4111,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@_50": {
									"entryPoint": null,
									"id": 50,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_894": {
									"entryPoint": null,
									"id": 894,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_999": {
									"entryPoint": null,
									"id": 999,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 780,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address_fromMemory": {
									"entryPoint": 1048,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16_fromMemory": {
									"entryPoint": 1103,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint8_fromMemory": {
									"entryPoint": 1297,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint16t_addresst_address_fromMemory": {
									"entryPoint": 1123,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 4
								},
								"abi_decode_tuple_t_uint8_fromMemory": {
									"entryPoint": 1317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1223,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 1009,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 1068,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 1263,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 974,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 1026,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 1081,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint8": {
									"entryPoint": 1275,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3100:12",
										"nodeType": "YulBlock",
										"src": "0:3100:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:81:12",
													"nodeType": "YulBlock",
													"src": "379:81:12",
													"statements": [
														{
															"nativeSrc": "389:65:12",
															"nodeType": "YulAssignment",
															"src": "389:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:12",
																		"nodeType": "YulLiteral",
																		"src": "411:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:12"
																},
																"nativeSrc": "400:54:12",
																"nodeType": "YulFunctionCall",
																"src": "400:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:126:12"
											},
											{
												"body": {
													"nativeSrc": "511:51:12",
													"nodeType": "YulBlock",
													"src": "511:51:12",
													"statements": [
														{
															"nativeSrc": "521:35:12",
															"nodeType": "YulAssignment",
															"src": "521:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:12"
																},
																"nativeSrc": "532:24:12",
																"nodeType": "YulFunctionCall",
																"src": "532:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:12",
														"nodeType": "YulTypedName",
														"src": "493:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:12",
														"nodeType": "YulTypedName",
														"src": "503:7:12",
														"type": ""
													}
												],
												"src": "466:96:12"
											},
											{
												"body": {
													"nativeSrc": "611:79:12",
													"nodeType": "YulBlock",
													"src": "611:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:12",
																"nodeType": "YulBlock",
																"src": "668:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:12",
																					"nodeType": "YulLiteral",
																					"src": "677:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:12",
																					"nodeType": "YulLiteral",
																					"src": "680:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:12"
																			},
																			"nativeSrc": "670:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:12"
																		},
																		"nativeSrc": "670:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:12"
																				},
																				"nativeSrc": "641:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:12"
																		},
																		"nativeSrc": "631:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:12"
																},
																"nativeSrc": "624:43:12",
																"nodeType": "YulFunctionCall",
																"src": "624:43:12"
															},
															"nativeSrc": "621:63:12",
															"nodeType": "YulIf",
															"src": "621:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:12",
														"nodeType": "YulTypedName",
														"src": "604:5:12",
														"type": ""
													}
												],
												"src": "568:122:12"
											},
											{
												"body": {
													"nativeSrc": "759:80:12",
													"nodeType": "YulBlock",
													"src": "759:80:12",
													"statements": [
														{
															"nativeSrc": "769:22:12",
															"nodeType": "YulAssignment",
															"src": "769:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "784:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "784:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "778:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "778:5:12"
																},
																"nativeSrc": "778:13:12",
																"nodeType": "YulFunctionCall",
																"src": "778:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "769:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "827:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "800:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "800:26:12"
																},
																"nativeSrc": "800:33:12",
																"nodeType": "YulFunctionCall",
																"src": "800:33:12"
															},
															"nativeSrc": "800:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "800:33:12"
														}
													]
												},
												"name": "abi_decode_t_address_fromMemory",
												"nativeSrc": "696:143:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "737:6:12",
														"nodeType": "YulTypedName",
														"src": "737:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "745:3:12",
														"nodeType": "YulTypedName",
														"src": "745:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "753:5:12",
														"nodeType": "YulTypedName",
														"src": "753:5:12",
														"type": ""
													}
												],
												"src": "696:143:12"
											},
											{
												"body": {
													"nativeSrc": "889:45:12",
													"nodeType": "YulBlock",
													"src": "889:45:12",
													"statements": [
														{
															"nativeSrc": "899:29:12",
															"nodeType": "YulAssignment",
															"src": "899:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "914:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "914:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "921:6:12",
																		"nodeType": "YulLiteral",
																		"src": "921:6:12",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "910:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "910:3:12"
																},
																"nativeSrc": "910:18:12",
																"nodeType": "YulFunctionCall",
																"src": "910:18:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "899:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "899:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "845:89:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "871:5:12",
														"nodeType": "YulTypedName",
														"src": "871:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "881:7:12",
														"nodeType": "YulTypedName",
														"src": "881:7:12",
														"type": ""
													}
												],
												"src": "845:89:12"
											},
											{
												"body": {
													"nativeSrc": "982:78:12",
													"nodeType": "YulBlock",
													"src": "982:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1038:16:12",
																"nodeType": "YulBlock",
																"src": "1038:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1047:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1047:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1050:1:12",
																					"nodeType": "YulLiteral",
																					"src": "1050:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1040:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "1040:6:12"
																			},
																			"nativeSrc": "1040:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1040:12:12"
																		},
																		"nativeSrc": "1040:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1040:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1005:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1005:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1029:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "1029:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "1012:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "1012:16:12"
																				},
																				"nativeSrc": "1012:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1012:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1002:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "1002:2:12"
																		},
																		"nativeSrc": "1002:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1002:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "995:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "995:6:12"
																},
																"nativeSrc": "995:42:12",
																"nodeType": "YulFunctionCall",
																"src": "995:42:12"
															},
															"nativeSrc": "992:62:12",
															"nodeType": "YulIf",
															"src": "992:62:12"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "940:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "975:5:12",
														"nodeType": "YulTypedName",
														"src": "975:5:12",
														"type": ""
													}
												],
												"src": "940:120:12"
											},
											{
												"body": {
													"nativeSrc": "1128:79:12",
													"nodeType": "YulBlock",
													"src": "1128:79:12",
													"statements": [
														{
															"nativeSrc": "1138:22:12",
															"nodeType": "YulAssignment",
															"src": "1138:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1153:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "1153:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "1147:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1147:5:12"
																},
																"nativeSrc": "1147:13:12",
																"nodeType": "YulFunctionCall",
																"src": "1147:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1138:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "1138:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1195:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1195:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "1169:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "1169:25:12"
																},
																"nativeSrc": "1169:32:12",
																"nodeType": "YulFunctionCall",
																"src": "1169:32:12"
															},
															"nativeSrc": "1169:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "1169:32:12"
														}
													]
												},
												"name": "abi_decode_t_uint16_fromMemory",
												"nativeSrc": "1066:141:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1106:6:12",
														"nodeType": "YulTypedName",
														"src": "1106:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1114:3:12",
														"nodeType": "YulTypedName",
														"src": "1114:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1122:5:12",
														"nodeType": "YulTypedName",
														"src": "1122:5:12",
														"type": ""
													}
												],
												"src": "1066:141:12"
											},
											{
												"body": {
													"nativeSrc": "1340:691:12",
													"nodeType": "YulBlock",
													"src": "1340:691:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "1387:83:12",
																"nodeType": "YulBlock",
																"src": "1387:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1389:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "1389:77:12"
																			},
																			"nativeSrc": "1389:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "1389:79:12"
																		},
																		"nativeSrc": "1389:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "1389:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1361:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1361:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1370:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "1370:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1357:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "1357:3:12"
																		},
																		"nativeSrc": "1357:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1357:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1382:3:12",
																		"nodeType": "YulLiteral",
																		"src": "1382:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1353:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:12"
																},
																"nativeSrc": "1353:33:12",
																"nodeType": "YulFunctionCall",
																"src": "1353:33:12"
															},
															"nativeSrc": "1350:120:12",
															"nodeType": "YulIf",
															"src": "1350:120:12"
														},
														{
															"nativeSrc": "1480:128:12",
															"nodeType": "YulBlock",
															"src": "1480:128:12",
															"statements": [
																{
																	"nativeSrc": "1495:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1495:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1509:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1509:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1499:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1499:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1524:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1524:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1570:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1570:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1581:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1581:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1566:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1566:3:12"
																				},
																				"nativeSrc": "1566:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1566:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1590:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1590:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1534:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1534:31:12"
																		},
																		"nativeSrc": "1534:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1534:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1524:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1524:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1618:128:12",
															"nodeType": "YulBlock",
															"src": "1618:128:12",
															"statements": [
																{
																	"nativeSrc": "1633:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1633:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1647:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1647:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1637:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1637:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1663:73:12",
																	"nodeType": "YulAssignment",
																	"src": "1663:73:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1708:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1708:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1719:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1719:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1704:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1704:3:12"
																				},
																				"nativeSrc": "1704:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1704:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1728:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1728:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16_fromMemory",
																			"nativeSrc": "1673:30:12",
																			"nodeType": "YulIdentifier",
																			"src": "1673:30:12"
																		},
																		"nativeSrc": "1673:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1673:63:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1663:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1663:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1756:129:12",
															"nodeType": "YulBlock",
															"src": "1756:129:12",
															"statements": [
																{
																	"nativeSrc": "1771:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1771:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1785:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1785:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1775:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1775:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1801:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1801:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1847:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1847:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1858:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1858:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1843:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1843:3:12"
																				},
																				"nativeSrc": "1843:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1843:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1867:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "1867:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1811:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1811:31:12"
																		},
																		"nativeSrc": "1811:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1811:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "1801:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1801:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1895:129:12",
															"nodeType": "YulBlock",
															"src": "1895:129:12",
															"statements": [
																{
																	"nativeSrc": "1910:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1910:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1924:2:12",
																		"nodeType": "YulLiteral",
																		"src": "1924:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1914:6:12",
																			"nodeType": "YulTypedName",
																			"src": "1914:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1940:74:12",
																	"nodeType": "YulAssignment",
																	"src": "1940:74:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1986:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "1986:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1997:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "1997:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1982:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "1982:3:12"
																				},
																				"nativeSrc": "1982:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "1982:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2006:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2006:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address_fromMemory",
																			"nativeSrc": "1950:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "1950:31:12"
																		},
																		"nativeSrc": "1950:64:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1950:64:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "1940:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "1940:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint16t_addresst_address_fromMemory",
												"nativeSrc": "1213:818:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1286:9:12",
														"nodeType": "YulTypedName",
														"src": "1286:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1297:7:12",
														"nodeType": "YulTypedName",
														"src": "1297:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1309:6:12",
														"nodeType": "YulTypedName",
														"src": "1309:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1317:6:12",
														"nodeType": "YulTypedName",
														"src": "1317:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1325:6:12",
														"nodeType": "YulTypedName",
														"src": "1325:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "1333:6:12",
														"nodeType": "YulTypedName",
														"src": "1333:6:12",
														"type": ""
													}
												],
												"src": "1213:818:12"
											},
											{
												"body": {
													"nativeSrc": "2102:53:12",
													"nodeType": "YulBlock",
													"src": "2102:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2119:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2119:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2142:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2142:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2124:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "2124:17:12"
																		},
																		"nativeSrc": "2124:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2124:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2112:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:12"
																},
																"nativeSrc": "2112:37:12",
																"nodeType": "YulFunctionCall",
																"src": "2112:37:12"
															},
															"nativeSrc": "2112:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "2112:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "2037:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2090:5:12",
														"nodeType": "YulTypedName",
														"src": "2090:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2097:3:12",
														"nodeType": "YulTypedName",
														"src": "2097:3:12",
														"type": ""
													}
												],
												"src": "2037:118:12"
											},
											{
												"body": {
													"nativeSrc": "2259:124:12",
													"nodeType": "YulBlock",
													"src": "2259:124:12",
													"statements": [
														{
															"nativeSrc": "2269:26:12",
															"nodeType": "YulAssignment",
															"src": "2269:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2281:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "2281:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2292:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2292:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2277:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2277:3:12"
																},
																"nativeSrc": "2277:18:12",
																"nodeType": "YulFunctionCall",
																"src": "2277:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2269:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "2269:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2349:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2349:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2362:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2362:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2373:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2373:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2358:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2358:3:12"
																		},
																		"nativeSrc": "2358:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2358:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "2305:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "2305:43:12"
																},
																"nativeSrc": "2305:71:12",
																"nodeType": "YulFunctionCall",
																"src": "2305:71:12"
															},
															"nativeSrc": "2305:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "2305:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "2161:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2231:9:12",
														"nodeType": "YulTypedName",
														"src": "2231:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2243:6:12",
														"nodeType": "YulTypedName",
														"src": "2243:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2254:4:12",
														"nodeType": "YulTypedName",
														"src": "2254:4:12",
														"type": ""
													}
												],
												"src": "2161:222:12"
											},
											{
												"body": {
													"nativeSrc": "2432:43:12",
													"nodeType": "YulBlock",
													"src": "2432:43:12",
													"statements": [
														{
															"nativeSrc": "2442:27:12",
															"nodeType": "YulAssignment",
															"src": "2442:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2457:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2457:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2464:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2464:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "2453:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2453:3:12"
																},
																"nativeSrc": "2453:16:12",
																"nodeType": "YulFunctionCall",
																"src": "2453:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2442:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2442:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "2389:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2414:5:12",
														"nodeType": "YulTypedName",
														"src": "2414:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2424:7:12",
														"nodeType": "YulTypedName",
														"src": "2424:7:12",
														"type": ""
													}
												],
												"src": "2389:86:12"
											},
											{
												"body": {
													"nativeSrc": "2522:77:12",
													"nodeType": "YulBlock",
													"src": "2522:77:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2577:16:12",
																"nodeType": "YulBlock",
																"src": "2577:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2586:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2586:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2589:1:12",
																					"nodeType": "YulLiteral",
																					"src": "2589:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2579:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "2579:6:12"
																			},
																			"nativeSrc": "2579:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2579:12:12"
																		},
																		"nativeSrc": "2579:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2579:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2545:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2545:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2568:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2568:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint8",
																					"nativeSrc": "2552:15:12",
																					"nodeType": "YulIdentifier",
																					"src": "2552:15:12"
																				},
																				"nativeSrc": "2552:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2552:22:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2542:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2542:2:12"
																		},
																		"nativeSrc": "2542:33:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2542:33:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2535:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2535:6:12"
																},
																"nativeSrc": "2535:41:12",
																"nodeType": "YulFunctionCall",
																"src": "2535:41:12"
															},
															"nativeSrc": "2532:61:12",
															"nodeType": "YulIf",
															"src": "2532:61:12"
														}
													]
												},
												"name": "validator_revert_t_uint8",
												"nativeSrc": "2481:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2515:5:12",
														"nodeType": "YulTypedName",
														"src": "2515:5:12",
														"type": ""
													}
												],
												"src": "2481:118:12"
											},
											{
												"body": {
													"nativeSrc": "2666:78:12",
													"nodeType": "YulBlock",
													"src": "2666:78:12",
													"statements": [
														{
															"nativeSrc": "2676:22:12",
															"nodeType": "YulAssignment",
															"src": "2676:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2691:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "2691:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2685:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2685:5:12"
																},
																"nativeSrc": "2685:13:12",
																"nodeType": "YulFunctionCall",
																"src": "2685:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2676:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "2676:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2732:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2732:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint8",
																	"nativeSrc": "2707:24:12",
																	"nodeType": "YulIdentifier",
																	"src": "2707:24:12"
																},
																"nativeSrc": "2707:31:12",
																"nodeType": "YulFunctionCall",
																"src": "2707:31:12"
															},
															"nativeSrc": "2707:31:12",
															"nodeType": "YulExpressionStatement",
															"src": "2707:31:12"
														}
													]
												},
												"name": "abi_decode_t_uint8_fromMemory",
												"nativeSrc": "2605:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2644:6:12",
														"nodeType": "YulTypedName",
														"src": "2644:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2652:3:12",
														"nodeType": "YulTypedName",
														"src": "2652:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2660:5:12",
														"nodeType": "YulTypedName",
														"src": "2660:5:12",
														"type": ""
													}
												],
												"src": "2605:139:12"
											},
											{
												"body": {
													"nativeSrc": "2825:272:12",
													"nodeType": "YulBlock",
													"src": "2825:272:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2871:83:12",
																"nodeType": "YulBlock",
																"src": "2871:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2873:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "2873:77:12"
																			},
																			"nativeSrc": "2873:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2873:79:12"
																		},
																		"nativeSrc": "2873:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2873:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2846:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "2846:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2855:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "2855:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2842:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "2842:3:12"
																		},
																		"nativeSrc": "2842:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2842:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2867:2:12",
																		"nodeType": "YulLiteral",
																		"src": "2867:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2838:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2838:3:12"
																},
																"nativeSrc": "2838:32:12",
																"nodeType": "YulFunctionCall",
																"src": "2838:32:12"
															},
															"nativeSrc": "2835:119:12",
															"nodeType": "YulIf",
															"src": "2835:119:12"
														},
														{
															"nativeSrc": "2964:126:12",
															"nodeType": "YulBlock",
															"src": "2964:126:12",
															"statements": [
																{
																	"nativeSrc": "2979:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2979:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2993:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2993:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2983:6:12",
																			"nodeType": "YulTypedName",
																			"src": "2983:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3008:72:12",
																	"nodeType": "YulAssignment",
																	"src": "3008:72:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3052:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "3052:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3063:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "3063:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3048:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3048:3:12"
																				},
																				"nativeSrc": "3048:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3048:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3072:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "3072:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint8_fromMemory",
																			"nativeSrc": "3018:29:12",
																			"nodeType": "YulIdentifier",
																			"src": "3018:29:12"
																		},
																		"nativeSrc": "3018:62:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3018:62:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3008:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "3008:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint8_fromMemory",
												"nativeSrc": "2750:347:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2795:9:12",
														"nodeType": "YulTypedName",
														"src": "2795:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2806:7:12",
														"nodeType": "YulTypedName",
														"src": "2806:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2818:6:12",
														"nodeType": "YulTypedName",
														"src": "2818:6:12",
														"type": ""
													}
												],
												"src": "2750:347:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint16t_addresst_address_fromMemory(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint16_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_address_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function validator_revert_t_uint8(value) {\n        if iszero(eq(value, cleanup_t_uint8(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint8_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint8(value)\n    }\n\n    function abi_decode_tuple_t_uint8_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint8_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60c060405234801561000f575f5ffd5b50604051612f1c380380612f1c83398181016040528101906100319190610463565b8060015f819055505f60015f6101000a81548160ff0219169083151502179055505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100c2575f6040517f1e4fbdf70000000000000000000000000000000000000000000000000000000081526004016100b991906104d6565b60405180910390fd5b6100d18161030c60201b60201c565b505f73ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff16148061013757505f73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b8061016d57505f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16145b156101a4576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e861ffff168361ffff1611156101e8576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250505f8473ffffffffffffffffffffffffffffffffffffffff1663313ce5676040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561028557506040513d601f19601f820116820180604052508101906102829190610525565b60015b6102925760069050610297565b809150505b8060ff1660a08160ff16815250508360035f6101000a81548161ffff021916908361ffff16021790555082600360026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050610550565b5f60018054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b5f5ffd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6103fb826103d2565b9050919050565b61040b816103f1565b8114610415575f5ffd5b50565b5f8151905061042681610402565b92915050565b5f61ffff82169050919050565b6104428161042c565b811461044c575f5ffd5b50565b5f8151905061045d81610439565b92915050565b5f5f5f5f6080858703121561047b5761047a6103ce565b5b5f61048887828801610418565b94505060206104998782880161044f565b93505060406104aa87828801610418565b92505060606104bb87828801610418565b91505092959194509250565b6104d0816103f1565b82525050565b5f6020820190506104e95f8301846104c7565b92915050565b5f60ff82169050919050565b610504816104ef565b811461050e575f5ffd5b50565b5f8151905061051f816104fb565b92915050565b5f6020828403121561053a576105396103ce565b5b5f61054784828501610511565b91505092915050565b60805160a05161298161059b5f395f6105a201525f818161051b0152818161093101528181610bb901528181610eb3015281816111fb01528181611271015261168001526129815ff3fe608060405234801561000f575f5ffd5b506004361061011f575f3560e01c80638da5cb5b116100ab578063d16866041161006f578063d1686604146102bd578063d55be8c6146102d9578063e0120cf8146102f7578063e46bbc9e14610313578063f2fde38b1461032f5761011f565b80638da5cb5b14610207578063c23945ac14610225578063c4d252f514610255578063cc3e049b14610271578063cd2025c31461028d5761011f565b8063478222c2116100f2578063478222c2146101995780635c975abb146101b7578063715018a6146101d55780637bf42165146101df5780638456cb59146101fd5761011f565b80632417395c1461012357806324a9d853146101535780633e413bee146101715780633f4ba83a1461018f575b5f5ffd5b61013d60048036038101906101389190611fdf565b61034b565b60405161014a919061219f565b60405180910390f35b61015b610505565b60405161016891906121d4565b60405180910390f35b610179610518565b6040516101869190612248565b60405180910390f35b61019761053f565b005b6101a1610551565b6040516101ae9190612270565b60405180910390f35b6101bf610577565b6040516101cc91906122a3565b60405180910390f35b6101dd61058c565b005b6101e761059f565b6040516101f491906122d7565b60405180910390f35b6102056105c6565b005b61020f6105d8565b60405161021c9190612270565b60405180910390f35b61023f600480360381019061023a9190612377565b6105ff565b60405161024c91906123fd565b60405180910390f35b61026f600480360381019061026a9190611fdf565b6109de565b005b61028b60048036038101906102869190611fdf565b610c7d565b005b6102a760048036038101906102a29190612416565b610f77565b6040516102b491906123fd565b60405180910390f35b6102d760048036038101906102d29190612466565b610fac565b005b6102e1611317565b6040516102ee91906121d4565b60405180910390f35b610311600480360381019061030c91906124ce565b61131d565b005b61032d6004803603810190610328919061250c565b611468565b005b6103496004803603810190610344919061254a565b61170b565b005b610353611f12565b60025f8381526020019081526020015f206040518060e00160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff168152602001600382015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016003820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016003820160109054906101000a900460ff1660048111156104e8576104e76120a0565b5b60048111156104fa576104f96120a0565b5b815250509050919050565b60035f9054906101000a900461ffff1681565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b61054761178f565b61054f611816565b565b600360029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f9054906101000a900460ff16905090565b61059461178f565b61059d5f611877565b565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b6105ce61178f565b6105d6611939565b565b5f60018054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f61060861199a565b6106106119de565b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610675576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5f1b85148061068e57505f8467ffffffffffffffff16145b156106c5576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428367ffffffffffffffff1611610708576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8203610741576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074c338686610f77565b90505f6004811115610761576107606120a0565b5b60025f8381526020019081526020015f2060030160109054906101000a900460ff166004811115610795576107946120a0565b5b146107cc576040517f23369fa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f8381526020019081526020015f20905085815f018190555033816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061087583611a1f565b8160020160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555083816003015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550848160030160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060018160030160106101000a81548160ff02191690836004811115610924576109236120a0565b5b02179055506109763330857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611a7e909392919063ffffffff16565b853373ffffffffffffffffffffffffffffffffffffffff16837fb9f72851bf0c89db77e8b273bf29aef517207f92830df76851a309f1a6c5c80e88888c896040516109c49493929190612593565b60405180910390a4506109d5611b00565b95945050505050565b6109e661199a565b6109ee6119de565b5f60025f8381526020019081526020015f20905060016004811115610a1657610a156120a0565b5b8160030160109054906101000a900460ff166004811115610a3a57610a396120a0565b5b14610a71576040517fddafad9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af9576040517fdf4795c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048160030160106101000a81548160ff02191690836004811115610b2157610b206120a0565b5b02179055505f8160020160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1690505f8260020160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505f811115610bfe57610bfd826001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b099092919063ffffffff16565b5b816001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837f13ca42b383dddac8a499886c122185485535c8144d34355991f87265cfbee4cc83604051610c6891906125d6565b60405180910390a35050610c7a611b00565b50565b610c8561199a565b610c8d6119de565b5f60025f8381526020019081526020015f20905060016004811115610cb557610cb46120a0565b5b8160030160109054906101000a900460ff166004811115610cd957610cd86120a0565b5b14610d10576040517fddafad9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806003015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff16421015610d6b576040517f66ec4ee600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610df3576040517fdf4795c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60038160030160106101000a81548160ff02191690836004811115610e1b57610e1a6120a0565b5b02179055505f8160020160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1690505f8260020160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505f811115610ef857610ef7826001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b099092919063ffffffff16565b5b816001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837ff552ca82e113ac3c539c3d617f29fcd19c172a0c75dad017555c9e109f7fe18383604051610f6291906125d6565b60405180910390a35050610f74611b00565b50565b5f838383604051602001610f8d93929190612688565b6040516020818303038152906040528051906020012090509392505050565b610fb461199a565b610fbc6119de565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611021576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f8481526020019081526020015f20905060016004811115611049576110486120a0565b5b8160030160109054906101000a900460ff16600481111561106d5761106c6120a0565b5b146110a4576040517fddafad9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461112c576040517fba2a9fc200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028160030160106101000a81548160ff02191690836004811115611154576111536120a0565b5b02179055505f8160020160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1690505f8260020160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505f6111db8260035f9054906101000a900461ffff1661ffff16612710611b88565b90505f81836111ea91906126f1565b90505f8111156112405761123f85827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b099092919063ffffffff16565b5b5f8211156112b6576112b5600360029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b099092919063ffffffff16565b5b8473ffffffffffffffffffffffffffffffffffffffff16867f461dc02513380b552c1c7e42377606be7a1c06610e50589fc4664dd29bf47fc083856040516112ff929190612724565b60405180910390a350505050611313611b00565b5050565b6103e881565b61132561178f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361138a576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e861ffff168261ffff1611156113ce576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160035f6101000a81548161ffff021916908361ffff16021790555080600360026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f553bd03bb9146c7a9c7ad0a260aed36e8d47650815df076dfb60f9d47e6cf727828260405161145c92919061274b565b60405180910390a15050565b61147061199a565b6114786119de565b5f60025f8481526020019081526020015f209050600160048111156114a05761149f6120a0565b5b8160030160109054906101000a900460ff1660048111156114c4576114c36120a0565b5b146114fb576040517fddafad9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611583576040517fdf4795c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f82036115bc576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f828260020160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166115f39190612772565b90506bffffffffffffffffffffffff801681111561163d576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61164681611a1f565b8260020160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506116c53330857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611a7e909392919063ffffffff16565b837f9f4592c3bd42bd33860ee93dc92d07f06e3f4fb6e19a9ca214982fe7c1bdb037826040516116f591906125d6565b60405180910390a25050611707611b00565b5050565b61171361178f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611783575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161177a9190612270565b60405180910390fd5b61178c81611877565b50565b611797611c87565b73ffffffffffffffffffffffffffffffffffffffff166117b56105d8565b73ffffffffffffffffffffffffffffffffffffffff1614611814576117d8611c87565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161180b9190612270565b60405180910390fd5b565b61181e611c8e565b5f60015f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611860611c87565b60405161186d9190612270565b60405180910390a1565b5f60018054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6119416119de565b6001805f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611983611c87565b6040516119909190612270565b60405180910390a1565b60025f54036119d5576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b6119e6610577565b15611a1d576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6bffffffffffffffffffffffff8016821115611a76576060826040517f6dfcc650000000000000000000000000000000000000000000000000000000008152600401611a6d9291906127de565b60405180910390fd5b819050919050565b611afa848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611ab393929190612805565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611cce565b50505050565b60015f81905550565b611b83838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611b3c92919061283a565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611cce565b505050565b5f5f83850290505f5f19858709828110838203039150505f8103611bc057838281611bb657611bb5612861565b5b0492505050611c80565b808411611bf9576040517f227bc15300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8486880990508281118203915080830392505f855f038616905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b5f33905090565b611c96610577565b611ccc576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f611cf8828473ffffffffffffffffffffffffffffffffffffffff16611d6390919063ffffffff16565b90505f815114158015611d1c575080806020019051810190611d1a91906128b8565b155b15611d5e57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611d559190612270565b60405180910390fd5b505050565b6060611d7083835f611d78565b905092915050565b606081471015611dbf57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401611db69190612270565b60405180910390fd5b5f5f8573ffffffffffffffffffffffffffffffffffffffff168486604051611de79190612935565b5f6040518083038185875af1925050503d805f8114611e21576040519150601f19603f3d011682016040523d82523d5f602084013e611e26565b606091505b5091509150611e36868383611e41565b925050509392505050565b606082611e5657611e5182611ece565b611ec6565b5f8251148015611e7c57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611ebe57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611eb59190612270565b60405180910390fd5b819050611ec7565b5b9392505050565b5f81511115611ee05780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060e001604052805f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f6bffffffffffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f6004811115611fa257611fa16120a0565b5b81525090565b5f5ffd5b5f819050919050565b611fbe81611fac565b8114611fc8575f5ffd5b50565b5f81359050611fd981611fb5565b92915050565b5f60208284031215611ff457611ff3611fa8565b5b5f61200184828501611fcb565b91505092915050565b61201381611fac565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61204282612019565b9050919050565b61205281612038565b82525050565b5f6bffffffffffffffffffffffff82169050919050565b61207881612058565b82525050565b5f67ffffffffffffffff82169050919050565b61209a8161207e565b82525050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600581106120de576120dd6120a0565b5b50565b5f8190506120ee826120cd565b919050565b5f6120fd826120e1565b9050919050565b61210d816120f3565b82525050565b60e082015f8201516121275f85018261200a565b50602082015161213a6020850182612049565b50604082015161214d6040850182612049565b506060820151612160606085018261206f565b5060808201516121736080850182612091565b5060a082015161218660a0850182612091565b5060c082015161219960c0850182612104565b50505050565b5f60e0820190506121b25f830184612113565b92915050565b5f61ffff82169050919050565b6121ce816121b8565b82525050565b5f6020820190506121e75f8301846121c5565b92915050565b5f819050919050565b5f61221061220b61220684612019565b6121ed565b612019565b9050919050565b5f612221826121f6565b9050919050565b5f61223282612217565b9050919050565b61224281612228565b82525050565b5f60208201905061225b5f830184612239565b92915050565b61226a81612038565b82525050565b5f6020820190506122835f830184612261565b92915050565b5f8115159050919050565b61229d81612289565b82525050565b5f6020820190506122b65f830184612294565b92915050565b5f60ff82169050919050565b6122d1816122bc565b82525050565b5f6020820190506122ea5f8301846122c8565b92915050565b6122f981612038565b8114612303575f5ffd5b50565b5f81359050612314816122f0565b92915050565b6123238161207e565b811461232d575f5ffd5b50565b5f8135905061233e8161231a565b92915050565b5f819050919050565b61235681612344565b8114612360575f5ffd5b50565b5f813590506123718161234d565b92915050565b5f5f5f5f5f60a086880312156123905761238f611fa8565b5b5f61239d88828901612306565b95505060206123ae88828901611fcb565b94505060406123bf88828901612330565b93505060606123d088828901612330565b92505060806123e188828901612363565b9150509295509295909350565b6123f781611fac565b82525050565b5f6020820190506124105f8301846123ee565b92915050565b5f5f5f6060848603121561242d5761242c611fa8565b5b5f61243a86828701612306565b935050602061244b86828701611fcb565b925050604061245c86828701612330565b9150509250925092565b5f5f6040838503121561247c5761247b611fa8565b5b5f61248985828601611fcb565b925050602061249a85828601612306565b9150509250929050565b6124ad816121b8565b81146124b7575f5ffd5b50565b5f813590506124c8816124a4565b92915050565b5f5f604083850312156124e4576124e3611fa8565b5b5f6124f1858286016124ba565b925050602061250285828601612306565b9150509250929050565b5f5f6040838503121561252257612521611fa8565b5b5f61252f85828601611fcb565b925050602061254085828601612363565b9150509250929050565b5f6020828403121561255f5761255e611fa8565b5b5f61256c84828501612306565b91505092915050565b61257e8161207e565b82525050565b61258d81612344565b82525050565b5f6080820190506125a65f830187612575565b6125b36020830186612575565b6125c06040830185612261565b6125cd6060830184612584565b95945050505050565b5f6020820190506125e95f830184612584565b92915050565b5f8160601b9050919050565b5f612605826125ef565b9050919050565b5f612616826125fb565b9050919050565b61262e61262982612038565b61260c565b82525050565b5f819050919050565b61264e61264982611fac565b612634565b82525050565b5f8160c01b9050919050565b5f61266a82612654565b9050919050565b61268261267d8261207e565b612660565b82525050565b5f612693828661261d565b6014820191506126a3828561263d565b6020820191506126b38284612671565b600882019150819050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126fb82612344565b915061270683612344565b925082820390508181111561271e5761271d6126c4565b5b92915050565b5f6040820190506127375f830185612584565b6127446020830184612584565b9392505050565b5f60408201905061275e5f8301856121c5565b61276b6020830184612261565b9392505050565b5f61277c82612344565b915061278783612344565b925082820190508082111561279f5761279e6126c4565b5b92915050565b5f819050919050565b5f6127c86127c36127be846127a5565b6121ed565b6122bc565b9050919050565b6127d8816127ae565b82525050565b5f6040820190506127f15f8301856127cf565b6127fe6020830184612584565b9392505050565b5f6060820190506128185f830186612261565b6128256020830185612261565b6128326040830184612584565b949350505050565b5f60408201905061284d5f830185612261565b61285a6020830184612584565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b61289781612289565b81146128a1575f5ffd5b50565b5f815190506128b28161288e565b92915050565b5f602082840312156128cd576128cc611fa8565b5b5f6128da848285016128a4565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61290f826128e3565b61291981856128ed565b93506129298185602086016128f7565b80840191505092915050565b5f6129408284612905565b91508190509291505056fea2646970667358221220fa2c85e239d774b1506cae5c4c4677b92d45b9017bc2f801c3633f437f28254b64736f6c634300081e0033",
							"opcodes": "PUSH1 0xC0 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0x2F1C CODESIZE SUB DUP1 PUSH2 0x2F1C DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x31 SWAP2 SWAP1 PUSH2 0x463 JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0xC2 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB9 SWAP2 SWAP1 PUSH2 0x4D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xD1 DUP2 PUSH2 0x30C PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x137 JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x16D JUMPI POP PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x1A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH2 0xFFFF AND DUP4 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x1E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA86B651200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x80 DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE POP POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x313CE567 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x285 JUMPI POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x282 SWAP2 SWAP1 PUSH2 0x525 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x292 JUMPI PUSH1 0x6 SWAP1 POP PUSH2 0x297 JUMP JUMPDEST DUP1 SWAP2 POP POP JUMPDEST DUP1 PUSH1 0xFF AND PUSH1 0xA0 DUP2 PUSH1 0xFF AND DUP2 MSTORE POP POP DUP4 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP3 PUSH1 0x3 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP POP POP POP POP PUSH2 0x550 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x3FB DUP3 PUSH2 0x3D2 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x40B DUP2 PUSH2 0x3F1 JUMP JUMPDEST DUP2 EQ PUSH2 0x415 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x426 DUP2 PUSH2 0x402 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x442 DUP2 PUSH2 0x42C JUMP JUMPDEST DUP2 EQ PUSH2 0x44C JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x45D DUP2 PUSH2 0x439 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x47B JUMPI PUSH2 0x47A PUSH2 0x3CE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x488 DUP8 DUP3 DUP9 ADD PUSH2 0x418 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x499 DUP8 DUP3 DUP9 ADD PUSH2 0x44F JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x4AA DUP8 DUP3 DUP9 ADD PUSH2 0x418 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x4BB DUP8 DUP3 DUP9 ADD PUSH2 0x418 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH2 0x4D0 DUP2 PUSH2 0x3F1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x4E9 PUSH0 DUP4 ADD DUP5 PUSH2 0x4C7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x504 DUP2 PUSH2 0x4EF JUMP JUMPDEST DUP2 EQ PUSH2 0x50E JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x51F DUP2 PUSH2 0x4FB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x53A JUMPI PUSH2 0x539 PUSH2 0x3CE JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x547 DUP5 DUP3 DUP6 ADD PUSH2 0x511 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH1 0xA0 MLOAD PUSH2 0x2981 PUSH2 0x59B PUSH0 CODECOPY PUSH0 PUSH2 0x5A2 ADD MSTORE PUSH0 DUP2 DUP2 PUSH2 0x51B ADD MSTORE DUP2 DUP2 PUSH2 0x931 ADD MSTORE DUP2 DUP2 PUSH2 0xBB9 ADD MSTORE DUP2 DUP2 PUSH2 0xEB3 ADD MSTORE DUP2 DUP2 PUSH2 0x11FB ADD MSTORE DUP2 DUP2 PUSH2 0x1271 ADD MSTORE PUSH2 0x1680 ADD MSTORE PUSH2 0x2981 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD1686604 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD1686604 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xD55BE8C6 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xE0120CF8 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xE46BBC9E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32F JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xC23945AC EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xC4D252F5 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xCC3E049B EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xCD2025C3 EQ PUSH2 0x28D JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x478222C2 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x478222C2 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x7BF42165 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1FD JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x2417395C EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x24A9D853 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x219F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH2 0x53F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x577 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x58C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x5C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x2377 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x23FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0xC7D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2416 JUMP JUMPDEST PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x23FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH2 0xFAC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E1 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x24CE JUMP JUMPDEST PUSH2 0x131D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0x1468 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x254A JUMP JUMPDEST PUSH2 0x170B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x353 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4E7 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x4FA JUMPI PUSH2 0x4F9 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x547 PUSH2 0x178F JUMP JUMPDEST PUSH2 0x54F PUSH2 0x1816 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x594 PUSH2 0x178F JUMP JUMPDEST PUSH2 0x59D PUSH0 PUSH2 0x1877 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x178F JUMP JUMPDEST PUSH2 0x5D6 PUSH2 0x1939 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x608 PUSH2 0x199A JUMP JUMPDEST PUSH2 0x610 PUSH2 0x19DE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SHL DUP6 EQ DUP1 PUSH2 0x68E JUMPI POP PUSH0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA86B651200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA86B651200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x74C CALLER DUP7 DUP7 PUSH2 0xF77 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x761 JUMPI PUSH2 0x760 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x795 JUMPI PUSH2 0x794 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x23369FA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP6 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x875 DUP4 PUSH2 0x1A1F JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x924 JUMPI PUSH2 0x923 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x976 CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A7E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xB9F72851BF0C89DB77E8B273BF29AEF517207F92830DF76851A309F1A6C5C80E DUP9 DUP9 DUP13 DUP10 PUSH1 0x40 MLOAD PUSH2 0x9C4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x9D5 PUSH2 0x1B00 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9E6 PUSH2 0x199A JUMP JUMPDEST PUSH2 0x9EE PUSH2 0x19DE JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA16 JUMPI PUSH2 0xA15 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA3A JUMPI PUSH2 0xA39 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDDAFAD9800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDF4795C700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB21 JUMPI PUSH2 0xB20 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP2 GT ISZERO PUSH2 0xBFE JUMPI PUSH2 0xBFD DUP3 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B09 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x13CA42B383DDDAC8A499886C122185485535C8144D34355991F87265CFBEE4CC DUP4 PUSH1 0x40 MLOAD PUSH2 0xC68 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xC7A PUSH2 0x1B00 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC85 PUSH2 0x199A JUMP JUMPDEST PUSH2 0xC8D PUSH2 0x19DE JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xCB5 JUMPI PUSH2 0xCB4 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xCD9 JUMPI PUSH2 0xCD8 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDDAFAD9800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT ISZERO PUSH2 0xD6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x66EC4EE600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDF4795C700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP2 GT ISZERO PUSH2 0xEF8 JUMPI PUSH2 0xEF7 DUP3 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B09 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF552CA82E113AC3C539C3D617F29FCD19C172A0C75DAD017555C9E109F7FE183 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF62 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xF74 PUSH2 0x1B00 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF8D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFB4 PUSH2 0x199A JUMP JUMPDEST PUSH2 0xFBC PUSH2 0x19DE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1021 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1049 JUMPI PUSH2 0x1048 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x106D JUMPI PUSH2 0x106C PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDDAFAD9800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0xBA2A9FC200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1154 JUMPI PUSH2 0x1153 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x11DB DUP3 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0x2710 PUSH2 0x1B88 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x11EA SWAP2 SWAP1 PUSH2 0x26F1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1240 JUMPI PUSH2 0x123F DUP6 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B09 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x12B6 JUMPI PUSH2 0x12B5 PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B09 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH32 0x461DC02513380B552C1C7E42377606BE7A1C06610E50589FC4664DD29BF47FC0 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x12FF SWAP3 SWAP2 SWAP1 PUSH2 0x2724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0x1313 PUSH2 0x1B00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x1325 PUSH2 0x178F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x138A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD PUSH32 0xA86B651200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x553BD03BB9146C7A9C7AD0A260AED36E8D47650815DF076DFB60F9D47E6CF727 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x145C SWAP3 SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1470 PUSH2 0x199A JUMP JUMPDEST PUSH2 0x1478 PUSH2 0x19DE JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14A0 JUMPI PUSH2 0x149F PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14C4 JUMPI PUSH2 0x14C3 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x14FB JUMPI PUSH1 0x40 MLOAD PUSH32 0xDDAFAD9800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1583 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDF4795C700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0x15BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15F3 SWAP2 SWAP1 PUSH2 0x2772 JUMP JUMPDEST SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP2 GT ISZERO PUSH2 0x163D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA86B651200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1646 DUP2 PUSH2 0x1A1F JUMP JUMPDEST DUP3 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x16C5 CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A7E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH32 0x9F4592C3BD42BD33860EE93DC92D07F06E3F4FB6E19A9CA214982FE7C1BDB037 DUP3 PUSH1 0x40 MLOAD PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1707 PUSH2 0x1B00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1713 PUSH2 0x178F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1783 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177A SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x178C DUP2 PUSH2 0x1877 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1797 PUSH2 0x1C87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17B5 PUSH2 0x5D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1814 JUMPI PUSH2 0x17D8 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180B SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x181E PUSH2 0x1C8E JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1860 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186D SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1941 PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1983 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1990 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x19D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x19E6 PUSH2 0x577 JUMP JUMPDEST ISZERO PUSH2 0x1A1D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1A76 JUMPI PUSH1 0x60 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6D SWAP3 SWAP2 SWAP1 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AFA DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1AB3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1CCE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1B83 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B3C SWAP3 SWAP2 SWAP1 PUSH2 0x283A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1CCE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP6 MUL SWAP1 POP PUSH0 PUSH0 NOT DUP6 DUP8 MULMOD DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH0 DUP2 SUB PUSH2 0x1BC0 JUMPI DUP4 DUP3 DUP2 PUSH2 0x1BB6 JUMPI PUSH2 0x1BB5 PUSH2 0x2861 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x1C80 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x1BF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x227BC15300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH0 DUP6 PUSH0 SUB DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C96 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x1CCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1CF8 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1D1C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1D1A SWAP2 SWAP1 PUSH2 0x28B8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1D5E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D55 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D70 DUP4 DUP4 PUSH0 PUSH2 0x1D78 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1DBF JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB6 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1DE7 SWAP2 SWAP1 PUSH2 0x2935 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1E21 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E36 DUP7 DUP4 DUP4 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1E56 JUMPI PUSH2 0x1E51 DUP3 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x1EC6 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1E7C JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1EBE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB5 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1EC7 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1EE0 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1FA2 JUMPI PUSH2 0x1FA1 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FBE DUP2 PUSH2 0x1FAC JUMP JUMPDEST DUP2 EQ PUSH2 0x1FC8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FD9 DUP2 PUSH2 0x1FB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FF4 JUMPI PUSH2 0x1FF3 PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2001 DUP5 DUP3 DUP6 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2013 DUP2 PUSH2 0x1FAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2042 DUP3 PUSH2 0x2019 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2052 DUP2 PUSH2 0x2038 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2078 DUP2 PUSH2 0x2058 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x209A DUP2 PUSH2 0x207E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x20DE JUMPI PUSH2 0x20DD PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x20EE DUP3 PUSH2 0x20CD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20FD DUP3 PUSH2 0x20E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x210D DUP2 PUSH2 0x20F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x2127 PUSH0 DUP6 ADD DUP3 PUSH2 0x200A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x213A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2049 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x214D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2049 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2160 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x206F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2173 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2091 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2186 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2091 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2199 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2104 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x21B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x2113 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21CE DUP2 PUSH2 0x21B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x21C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2210 PUSH2 0x220B PUSH2 0x2206 DUP5 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x2019 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2221 DUP3 PUSH2 0x21F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2232 DUP3 PUSH2 0x2217 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2242 DUP2 PUSH2 0x2228 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x225B PUSH0 DUP4 ADD DUP5 PUSH2 0x2239 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x226A DUP2 PUSH2 0x2038 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2283 PUSH0 DUP4 ADD DUP5 PUSH2 0x2261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x229D DUP2 PUSH2 0x2289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D1 DUP2 PUSH2 0x22BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22EA PUSH0 DUP4 ADD DUP5 PUSH2 0x22C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22F9 DUP2 PUSH2 0x2038 JUMP JUMPDEST DUP2 EQ PUSH2 0x2303 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2314 DUP2 PUSH2 0x22F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2323 DUP2 PUSH2 0x207E JUMP JUMPDEST DUP2 EQ PUSH2 0x232D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x233E DUP2 PUSH2 0x231A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2356 DUP2 PUSH2 0x2344 JUMP JUMPDEST DUP2 EQ PUSH2 0x2360 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2371 DUP2 PUSH2 0x234D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2390 JUMPI PUSH2 0x238F PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239D DUP9 DUP3 DUP10 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x23AE DUP9 DUP3 DUP10 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x23BF DUP9 DUP3 DUP10 ADD PUSH2 0x2330 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x23D0 DUP9 DUP3 DUP10 ADD PUSH2 0x2330 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x23E1 DUP9 DUP3 DUP10 ADD PUSH2 0x2363 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x23F7 DUP2 PUSH2 0x1FAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2410 PUSH0 DUP4 ADD DUP5 PUSH2 0x23EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x242D JUMPI PUSH2 0x242C PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x243A DUP7 DUP3 DUP8 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x244B DUP7 DUP3 DUP8 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x245C DUP7 DUP3 DUP8 ADD PUSH2 0x2330 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x247C JUMPI PUSH2 0x247B PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2489 DUP6 DUP3 DUP7 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x249A DUP6 DUP3 DUP7 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AD DUP2 PUSH2 0x21B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x24B7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24C8 DUP2 PUSH2 0x24A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24E4 JUMPI PUSH2 0x24E3 PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24F1 DUP6 DUP3 DUP7 ADD PUSH2 0x24BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2502 DUP6 DUP3 DUP7 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2522 JUMPI PUSH2 0x2521 PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252F DUP6 DUP3 DUP7 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2540 DUP6 DUP3 DUP7 ADD PUSH2 0x2363 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255F JUMPI PUSH2 0x255E PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x256C DUP5 DUP3 DUP6 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x257E DUP2 PUSH2 0x207E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x258D DUP2 PUSH2 0x2344 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x25A6 PUSH0 DUP4 ADD DUP8 PUSH2 0x2575 JUMP JUMPDEST PUSH2 0x25B3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2575 JUMP JUMPDEST PUSH2 0x25C0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x25CD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25E9 PUSH0 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2605 DUP3 PUSH2 0x25EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2616 DUP3 PUSH2 0x25FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x262E PUSH2 0x2629 DUP3 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0x260C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x264E PUSH2 0x2649 DUP3 PUSH2 0x1FAC JUMP JUMPDEST PUSH2 0x2634 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xC0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x266A DUP3 PUSH2 0x2654 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2682 PUSH2 0x267D DUP3 PUSH2 0x207E JUMP JUMPDEST PUSH2 0x2660 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2693 DUP3 DUP7 PUSH2 0x261D JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x26A3 DUP3 DUP6 PUSH2 0x263D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x26B3 DUP3 DUP5 PUSH2 0x2671 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26FB DUP3 PUSH2 0x2344 JUMP JUMPDEST SWAP2 POP PUSH2 0x2706 DUP4 PUSH2 0x2344 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x271E JUMPI PUSH2 0x271D PUSH2 0x26C4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2737 PUSH0 DUP4 ADD DUP6 PUSH2 0x2584 JUMP JUMPDEST PUSH2 0x2744 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x275E PUSH0 DUP4 ADD DUP6 PUSH2 0x21C5 JUMP JUMPDEST PUSH2 0x276B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2261 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x277C DUP3 PUSH2 0x2344 JUMP JUMPDEST SWAP2 POP PUSH2 0x2787 DUP4 PUSH2 0x2344 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x279F JUMPI PUSH2 0x279E PUSH2 0x26C4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27C8 PUSH2 0x27C3 PUSH2 0x27BE DUP5 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x22BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27D8 DUP2 PUSH2 0x27AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27F1 PUSH0 DUP4 ADD DUP6 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x27FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2818 PUSH0 DUP4 ADD DUP7 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x2825 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x2832 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x284D PUSH0 DUP4 ADD DUP6 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x285A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2897 DUP2 PUSH2 0x2289 JUMP JUMPDEST DUP2 EQ PUSH2 0x28A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28B2 DUP2 PUSH2 0x288E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28CD JUMPI PUSH2 0x28CC PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28DA DUP5 DUP3 DUP6 ADD PUSH2 0x28A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x290F DUP3 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0x2919 DUP2 DUP6 PUSH2 0x28ED JUMP JUMPDEST SWAP4 POP PUSH2 0x2929 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28F7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2940 DUP3 DUP5 PUSH2 0x2905 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0x2C DUP6 0xE2 CODECOPY 0xD7 PUSH21 0xB1506CAE5C4C4677B92D45B9017BC2F801C3633F43 PUSH32 0x28254B64736F6C634300081E0033000000000000000000000000000000000000 ",
							"sourceMap": "1963:14673:11:-:0;;;7815:747;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7945:12;1713:1:8;1917:7;:21;;;;1241:5:7;1231:7;;:15;;;;;;;;;;;;;;;;;;1297:1:0;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;8003:1:11::1;7986:19;;:5;:19;;;:58;;;;8042:1;8021:23;;:9;:23;;;7986:58;:100;;;;8084:1;8060:26;;:12;:26;;;7986:100;7969:148;;;8104:13;;;;;;;;;;;;;;7969:148;2199:5;8131:21;;:7;:21;;;8127:49;;;8161:15;;;;;;;;;;;;;;8127:49;8202:5;8187:21;;;;;;;;::::0;::::1;8325:9;8363:5;8348:30;;;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;8344:126;;8458:1;8452:7;;8344:126;;;8419:1;8413:7;;8381:50;8344:126;8495:3;8479:19;;;;;;;;::::0;::::1;8518:7;8509:6;;:16;;;;;;;;;;;;;;;;;;8546:9;8535:8;;:20;;;;;;;;;;;;;;;;;;7959:603;7815:747:::0;;;;1963:14673;;2912:187:0;2985:16;3004:6;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:12:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:89::-;881:7;921:6;914:5;910:18;899:29;;845:89;;;:::o;940:120::-;1012:23;1029:5;1012:23;:::i;:::-;1005:5;1002:34;992:62;;1050:1;1047;1040:12;992:62;940:120;:::o;1066:141::-;1122:5;1153:6;1147:13;1138:22;;1169:32;1195:5;1169:32;:::i;:::-;1066:141;;;;:::o;1213:818::-;1309:6;1317;1325;1333;1382:3;1370:9;1361:7;1357:23;1353:33;1350:120;;;1389:79;;:::i;:::-;1350:120;1509:1;1534:64;1590:7;1581:6;1570:9;1566:22;1534:64;:::i;:::-;1524:74;;1480:128;1647:2;1673:63;1728:7;1719:6;1708:9;1704:22;1673:63;:::i;:::-;1663:73;;1618:128;1785:2;1811:64;1867:7;1858:6;1847:9;1843:22;1811:64;:::i;:::-;1801:74;;1756:129;1924:2;1950:64;2006:7;1997:6;1986:9;1982:22;1950:64;:::i;:::-;1940:74;;1895:129;1213:818;;;;;;;:::o;2037:118::-;2124:24;2142:5;2124:24;:::i;:::-;2119:3;2112:37;2037:118;;:::o;2161:222::-;2254:4;2292:2;2281:9;2277:18;2269:26;;2305:71;2373:1;2362:9;2358:17;2349:6;2305:71;:::i;:::-;2161:222;;;;:::o;2389:86::-;2424:7;2464:4;2457:5;2453:16;2442:27;;2389:86;;;:::o;2481:118::-;2552:22;2568:5;2552:22;:::i;:::-;2545:5;2542:33;2532:61;;2589:1;2586;2579:12;2532:61;2481:118;:::o;2605:139::-;2660:5;2691:6;2685:13;2676:22;;2707:31;2732:5;2707:31;:::i;:::-;2605:139;;;;:::o;2750:347::-;2818:6;2867:2;2855:9;2846:7;2842:23;2838:32;2835:119;;;2873:79;;:::i;:::-;2835:119;2993:1;3018:62;3072:7;3063:6;3052:9;3048:22;3018:62;:::i;:::-;3008:72;;2964:126;2750:347;;;;:::o;1963:14673:11:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@MAX_FEE_BPS_3891": {
									"entryPoint": 4887,
									"id": 3891,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_callOptionalReturn_527": {
									"entryPoint": 7374,
									"id": 527,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_checkOwner_84": {
									"entryPoint": 6031,
									"id": 84,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_842": {
									"entryPoint": 7303,
									"id": 842,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_nonReentrantAfter_1034": {
									"entryPoint": 6912,
									"id": 1034,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_nonReentrantBefore_1026": {
									"entryPoint": 6554,
									"id": 1026,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_pause_960": {
									"entryPoint": 6457,
									"id": 960,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_931": {
									"entryPoint": 6622,
									"id": 931,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_944": {
									"entryPoint": 7310,
									"id": 944,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_829": {
									"entryPoint": 7886,
									"id": 829,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_transferOwnership_146": {
									"entryPoint": 6263,
									"id": 146,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_976": {
									"entryPoint": 6166,
									"id": 976,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cancel_4514": {
									"entryPoint": 2526,
									"id": 4514,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@computeBountyId_4133": {
									"entryPoint": 3959,
									"id": 4133,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@createBounty_4350": {
									"entryPoint": 1535,
									"id": 4350,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"@feeBps_3935": {
									"entryPoint": 1285,
									"id": 3935,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@feeVault_3938": {
									"entryPoint": 1361,
									"id": 3938,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionCallWithValue_697": {
									"entryPoint": 7544,
									"id": 697,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@functionCall_651": {
									"entryPoint": 7523,
									"id": 651,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@fund_4441": {
									"entryPoint": 5224,
									"id": 4441,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@getBounty_4739": {
									"entryPoint": 843,
									"id": 4739,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@mulDiv_1434": {
									"entryPoint": 7048,
									"id": 1434,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@owner_67": {
									"entryPoint": 1496,
									"id": 67,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@pause_4143": {
									"entryPoint": 1478,
									"id": 4143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_919": {
									"entryPoint": 1399,
									"id": 919,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@refundExpired_4706": {
									"entryPoint": 3197,
									"id": 4706,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_98": {
									"entryPoint": 1420,
									"id": 98,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@resolve_4624": {
									"entryPoint": 4012,
									"id": 4624,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@safeTransferFrom_364": {
									"entryPoint": 6782,
									"id": 364,
									"parameterSlots": 4,
									"returnSlots": 0
								},
								"@safeTransfer_337": {
									"entryPoint": 6921,
									"id": 337,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@setFeeParams_4194": {
									"entryPoint": 4893,
									"id": 4194,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@toUint96_2687": {
									"entryPoint": 6687,
									"id": 2687,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transferOwnership_126": {
									"entryPoint": 5899,
									"id": 126,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@unpause_4153": {
									"entryPoint": 1343,
									"id": 4153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@usdcDecimals_4725": {
									"entryPoint": 1439,
									"id": 4725,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@usdc_4716": {
									"entryPoint": 1304,
									"id": 4716,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@verifyCallResultFromTarget_789": {
									"entryPoint": 7745,
									"id": 789,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 8966,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 10404,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bytes32": {
									"entryPoint": 8139,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint16": {
									"entryPoint": 9402,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 9059,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint64": {
									"entryPoint": 9008,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 9546,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes32t_uint64": {
									"entryPoint": 9238,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bytes32t_uint64t_uint64t_uint256": {
									"entryPoint": 9079,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 10424,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 8159,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 9318,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32t_uint256": {
									"entryPoint": 9484,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_uint16t_address": {
									"entryPoint": 9422,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address": {
									"entryPoint": 8265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 8801,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack": {
									"entryPoint": 9757,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 8852,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32": {
									"entryPoint": 8202,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_fromStack": {
									"entryPoint": 9198,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack": {
									"entryPoint": 9789,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10501,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack": {
									"entryPoint": 8761,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_enum$_Status_$3902_to_t_uint8": {
									"entryPoint": 8452,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_rational_96_by_1_to_t_uint8_fromStack": {
									"entryPoint": 10191,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_struct$_Bounty_$3919_memory_ptr_to_t_struct$_Bounty_$3919_memory_ptr_fromStack": {
									"entryPoint": 8467,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint16_to_t_uint16_fromStack": {
									"entryPoint": 8645,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 9604,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64": {
									"entryPoint": 8337,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64_fromStack": {
									"entryPoint": 9589,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack": {
									"entryPoint": 9841,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint8_to_t_uint8_fromStack": {
									"entryPoint": 8904,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_uint96_to_t_uint96": {
									"entryPoint": 8303,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_address_t_bytes32_t_uint64__to_t_address_t_bytes32_t_uint64__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9864,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 10549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 8816,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10245,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 10298,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 8867,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": 9213,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed": {
									"entryPoint": 8776,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_96_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed": {
									"entryPoint": 10206,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_struct$_Bounty_$3919_memory_ptr__to_t_struct$_Bounty_$3919_memory_ptr__fromStack_reversed": {
									"entryPoint": 8607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed": {
									"entryPoint": 8660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint16_t_address__to_t_uint16_t_address__fromStack_reversed": {
									"entryPoint": 10059,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 9686,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 10020,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64_t_uint64_t_address_t_uint256__to_t_uint64_t_uint64_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 9619,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
									"entryPoint": 8919,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 10467,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 10477,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 10098,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9969,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 8248,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 8841,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes32": {
									"entryPoint": 8108,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_enum$_Status_$3902": {
									"entryPoint": 8417,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_rational_96_by_1": {
									"entryPoint": 10149,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint16": {
									"entryPoint": 8632,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 8217,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 9028,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint64": {
									"entryPoint": 8318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint8": {
									"entryPoint": 8892,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint96": {
									"entryPoint": 8280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_contract$_IERC20_$225_to_t_address": {
									"entryPoint": 8744,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_enum$_Status_$3902_to_t_uint8": {
									"entryPoint": 8435,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_rational_96_by_1_to_t_uint8": {
									"entryPoint": 10158,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_address": {
									"entryPoint": 8727,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"convert_t_uint160_to_t_uint160": {
									"entryPoint": 8694,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 10487,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"identity": {
									"entryPoint": 8685,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_address": {
									"entryPoint": 9740,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_bytes32": {
									"entryPoint": 9780,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint160": {
									"entryPoint": 9723,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"leftAlign_t_uint64": {
									"entryPoint": 9824,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9924,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 10337,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x21": {
									"entryPoint": 8352,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 8104,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"shift_left_192": {
									"entryPoint": 9812,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"shift_left_96": {
									"entryPoint": 9711,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"validator_assert_t_enum$_Status_$3902": {
									"entryPoint": 8397,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 8944,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 10382,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bytes32": {
									"entryPoint": 8117,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint16": {
									"entryPoint": 9380,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 9037,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint64": {
									"entryPoint": 8986,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:19162:12",
										"nodeType": "YulBlock",
										"src": "0:19162:12",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:12",
													"nodeType": "YulBlock",
													"src": "47:35:12",
													"statements": [
														{
															"nativeSrc": "57:19:12",
															"nodeType": "YulAssignment",
															"src": "57:19:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:12",
																		"nodeType": "YulLiteral",
																		"src": "73:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:12"
																},
																"nativeSrc": "67:9:12",
																"nodeType": "YulFunctionCall",
																"src": "67:9:12"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:12"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:12",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:12",
														"nodeType": "YulTypedName",
														"src": "40:6:12",
														"type": ""
													}
												],
												"src": "7:75:12"
											},
											{
												"body": {
													"nativeSrc": "177:28:12",
													"nodeType": "YulBlock",
													"src": "177:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:12",
																		"nodeType": "YulLiteral",
																		"src": "194:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:12",
																		"nodeType": "YulLiteral",
																		"src": "197:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:12"
																},
																"nativeSrc": "187:12:12",
																"nodeType": "YulFunctionCall",
																"src": "187:12:12"
															},
															"nativeSrc": "187:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:12"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:12"
											},
											{
												"body": {
													"nativeSrc": "300:28:12",
													"nodeType": "YulBlock",
													"src": "300:28:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:12",
																		"nodeType": "YulLiteral",
																		"src": "317:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:12",
																		"nodeType": "YulLiteral",
																		"src": "320:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:12"
																},
																"nativeSrc": "310:12:12",
																"nodeType": "YulFunctionCall",
																"src": "310:12:12"
															},
															"nativeSrc": "310:12:12",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:12"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:12",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:12"
											},
											{
												"body": {
													"nativeSrc": "379:32:12",
													"nodeType": "YulBlock",
													"src": "379:32:12",
													"statements": [
														{
															"nativeSrc": "389:16:12",
															"nodeType": "YulAssignment",
															"src": "389:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:12",
																"nodeType": "YulIdentifier",
																"src": "400:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes32",
												"nativeSrc": "334:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:12",
														"nodeType": "YulTypedName",
														"src": "361:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:12",
														"nodeType": "YulTypedName",
														"src": "371:7:12",
														"type": ""
													}
												],
												"src": "334:77:12"
											},
											{
												"body": {
													"nativeSrc": "460:79:12",
													"nodeType": "YulBlock",
													"src": "460:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:12",
																"nodeType": "YulBlock",
																"src": "517:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:12",
																					"nodeType": "YulLiteral",
																					"src": "526:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:12",
																					"nodeType": "YulLiteral",
																					"src": "529:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:12"
																			},
																			"nativeSrc": "519:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:12"
																		},
																		"nativeSrc": "519:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "490:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:12"
																				},
																				"nativeSrc": "490:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:12"
																		},
																		"nativeSrc": "480:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:12"
																},
																"nativeSrc": "473:43:12",
																"nodeType": "YulFunctionCall",
																"src": "473:43:12"
															},
															"nativeSrc": "470:63:12",
															"nodeType": "YulIf",
															"src": "470:63:12"
														}
													]
												},
												"name": "validator_revert_t_bytes32",
												"nativeSrc": "417:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:12",
														"nodeType": "YulTypedName",
														"src": "453:5:12",
														"type": ""
													}
												],
												"src": "417:122:12"
											},
											{
												"body": {
													"nativeSrc": "597:87:12",
													"nodeType": "YulBlock",
													"src": "597:87:12",
													"statements": [
														{
															"nativeSrc": "607:29:12",
															"nodeType": "YulAssignment",
															"src": "607:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "629:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "629:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "616:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "616:12:12"
																},
																"nativeSrc": "616:20:12",
																"nodeType": "YulFunctionCall",
																"src": "616:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "607:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "607:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "672:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "672:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes32",
																	"nativeSrc": "645:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "645:26:12"
																},
																"nativeSrc": "645:33:12",
																"nodeType": "YulFunctionCall",
																"src": "645:33:12"
															},
															"nativeSrc": "645:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "645:33:12"
														}
													]
												},
												"name": "abi_decode_t_bytes32",
												"nativeSrc": "545:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "575:6:12",
														"nodeType": "YulTypedName",
														"src": "575:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "583:3:12",
														"nodeType": "YulTypedName",
														"src": "583:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "591:5:12",
														"nodeType": "YulTypedName",
														"src": "591:5:12",
														"type": ""
													}
												],
												"src": "545:139:12"
											},
											{
												"body": {
													"nativeSrc": "756:263:12",
													"nodeType": "YulBlock",
													"src": "756:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "802:83:12",
																"nodeType": "YulBlock",
																"src": "802:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "804:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "804:77:12"
																			},
																			"nativeSrc": "804:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "804:79:12"
																		},
																		"nativeSrc": "804:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "804:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "777:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "777:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "786:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "786:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "773:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "773:3:12"
																		},
																		"nativeSrc": "773:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "773:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "798:2:12",
																		"nodeType": "YulLiteral",
																		"src": "798:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "769:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "769:3:12"
																},
																"nativeSrc": "769:32:12",
																"nodeType": "YulFunctionCall",
																"src": "769:32:12"
															},
															"nativeSrc": "766:119:12",
															"nodeType": "YulIf",
															"src": "766:119:12"
														},
														{
															"nativeSrc": "895:117:12",
															"nodeType": "YulBlock",
															"src": "895:117:12",
															"statements": [
																{
																	"nativeSrc": "910:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "910:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "924:1:12",
																		"nodeType": "YulLiteral",
																		"src": "924:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "914:6:12",
																			"nodeType": "YulTypedName",
																			"src": "914:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "939:63:12",
																	"nodeType": "YulAssignment",
																	"src": "939:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "974:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "974:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "985:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "985:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "970:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "970:3:12"
																				},
																				"nativeSrc": "970:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "970:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "994:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "994:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "949:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "949:20:12"
																		},
																		"nativeSrc": "949:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "949:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "939:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "939:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "690:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "726:9:12",
														"nodeType": "YulTypedName",
														"src": "726:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "737:7:12",
														"nodeType": "YulTypedName",
														"src": "737:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "749:6:12",
														"nodeType": "YulTypedName",
														"src": "749:6:12",
														"type": ""
													}
												],
												"src": "690:329:12"
											},
											{
												"body": {
													"nativeSrc": "1080:53:12",
													"nodeType": "YulBlock",
													"src": "1080:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1097:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1097:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1120:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1120:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "1102:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1102:17:12"
																		},
																		"nativeSrc": "1102:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1102:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1090:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1090:6:12"
																},
																"nativeSrc": "1090:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1090:37:12"
															},
															"nativeSrc": "1090:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1090:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32",
												"nativeSrc": "1025:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1068:5:12",
														"nodeType": "YulTypedName",
														"src": "1068:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1075:3:12",
														"nodeType": "YulTypedName",
														"src": "1075:3:12",
														"type": ""
													}
												],
												"src": "1025:108:12"
											},
											{
												"body": {
													"nativeSrc": "1184:81:12",
													"nodeType": "YulBlock",
													"src": "1184:81:12",
													"statements": [
														{
															"nativeSrc": "1194:65:12",
															"nodeType": "YulAssignment",
															"src": "1194:65:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1209:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1209:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1216:42:12",
																		"nodeType": "YulLiteral",
																		"src": "1216:42:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1205:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1205:3:12"
																},
																"nativeSrc": "1205:54:12",
																"nodeType": "YulFunctionCall",
																"src": "1205:54:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1194:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1194:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1139:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1166:5:12",
														"nodeType": "YulTypedName",
														"src": "1166:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1176:7:12",
														"nodeType": "YulTypedName",
														"src": "1176:7:12",
														"type": ""
													}
												],
												"src": "1139:126:12"
											},
											{
												"body": {
													"nativeSrc": "1316:51:12",
													"nodeType": "YulBlock",
													"src": "1316:51:12",
													"statements": [
														{
															"nativeSrc": "1326:35:12",
															"nodeType": "YulAssignment",
															"src": "1326:35:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1355:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1355:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1337:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "1337:17:12"
																},
																"nativeSrc": "1337:24:12",
																"nodeType": "YulFunctionCall",
																"src": "1337:24:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1326:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1326:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1271:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1298:5:12",
														"nodeType": "YulTypedName",
														"src": "1298:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1308:7:12",
														"nodeType": "YulTypedName",
														"src": "1308:7:12",
														"type": ""
													}
												],
												"src": "1271:96:12"
											},
											{
												"body": {
													"nativeSrc": "1428:53:12",
													"nodeType": "YulBlock",
													"src": "1428:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1445:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1445:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1468:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1468:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1450:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "1450:17:12"
																		},
																		"nativeSrc": "1450:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1450:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1438:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1438:6:12"
																},
																"nativeSrc": "1438:37:12",
																"nodeType": "YulFunctionCall",
																"src": "1438:37:12"
															},
															"nativeSrc": "1438:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "1438:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address",
												"nativeSrc": "1373:108:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1416:5:12",
														"nodeType": "YulTypedName",
														"src": "1416:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1423:3:12",
														"nodeType": "YulTypedName",
														"src": "1423:3:12",
														"type": ""
													}
												],
												"src": "1373:108:12"
											},
											{
												"body": {
													"nativeSrc": "1531:65:12",
													"nodeType": "YulBlock",
													"src": "1531:65:12",
													"statements": [
														{
															"nativeSrc": "1541:49:12",
															"nodeType": "YulAssignment",
															"src": "1541:49:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1556:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1556:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1563:26:12",
																		"nodeType": "YulLiteral",
																		"src": "1563:26:12",
																		"type": "",
																		"value": "0xffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1552:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1552:3:12"
																},
																"nativeSrc": "1552:38:12",
																"nodeType": "YulFunctionCall",
																"src": "1552:38:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1541:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1541:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint96",
												"nativeSrc": "1487:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1513:5:12",
														"nodeType": "YulTypedName",
														"src": "1513:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1523:7:12",
														"nodeType": "YulTypedName",
														"src": "1523:7:12",
														"type": ""
													}
												],
												"src": "1487:109:12"
											},
											{
												"body": {
													"nativeSrc": "1655:52:12",
													"nodeType": "YulBlock",
													"src": "1655:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1672:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1672:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1694:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1694:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint96",
																			"nativeSrc": "1677:16:12",
																			"nodeType": "YulIdentifier",
																			"src": "1677:16:12"
																		},
																		"nativeSrc": "1677:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1677:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1665:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1665:6:12"
																},
																"nativeSrc": "1665:36:12",
																"nodeType": "YulFunctionCall",
																"src": "1665:36:12"
															},
															"nativeSrc": "1665:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "1665:36:12"
														}
													]
												},
												"name": "abi_encode_t_uint96_to_t_uint96",
												"nativeSrc": "1602:105:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1643:5:12",
														"nodeType": "YulTypedName",
														"src": "1643:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1650:3:12",
														"nodeType": "YulTypedName",
														"src": "1650:3:12",
														"type": ""
													}
												],
												"src": "1602:105:12"
											},
											{
												"body": {
													"nativeSrc": "1757:57:12",
													"nodeType": "YulBlock",
													"src": "1757:57:12",
													"statements": [
														{
															"nativeSrc": "1767:41:12",
															"nodeType": "YulAssignment",
															"src": "1767:41:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1782:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "1782:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1789:18:12",
																		"nodeType": "YulLiteral",
																		"src": "1789:18:12",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1778:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "1778:3:12"
																},
																"nativeSrc": "1778:30:12",
																"nodeType": "YulFunctionCall",
																"src": "1778:30:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1767:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "1767:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint64",
												"nativeSrc": "1713:101:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1739:5:12",
														"nodeType": "YulTypedName",
														"src": "1739:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1749:7:12",
														"nodeType": "YulTypedName",
														"src": "1749:7:12",
														"type": ""
													}
												],
												"src": "1713:101:12"
											},
											{
												"body": {
													"nativeSrc": "1873:52:12",
													"nodeType": "YulBlock",
													"src": "1873:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1890:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "1890:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1912:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "1912:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "1895:16:12",
																			"nodeType": "YulIdentifier",
																			"src": "1895:16:12"
																		},
																		"nativeSrc": "1895:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "1895:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1883:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1883:6:12"
																},
																"nativeSrc": "1883:36:12",
																"nodeType": "YulFunctionCall",
																"src": "1883:36:12"
															},
															"nativeSrc": "1883:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "1883:36:12"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64",
												"nativeSrc": "1820:105:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1861:5:12",
														"nodeType": "YulTypedName",
														"src": "1861:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1868:3:12",
														"nodeType": "YulTypedName",
														"src": "1868:3:12",
														"type": ""
													}
												],
												"src": "1820:105:12"
											},
											{
												"body": {
													"nativeSrc": "1959:152:12",
													"nodeType": "YulBlock",
													"src": "1959:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1976:1:12",
																		"nodeType": "YulLiteral",
																		"src": "1976:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1979:77:12",
																		"nodeType": "YulLiteral",
																		"src": "1979:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1969:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "1969:6:12"
																},
																"nativeSrc": "1969:88:12",
																"nodeType": "YulFunctionCall",
																"src": "1969:88:12"
															},
															"nativeSrc": "1969:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "1969:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2073:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2073:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2076:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2076:4:12",
																		"type": "",
																		"value": "0x21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2066:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2066:6:12"
																},
																"nativeSrc": "2066:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2066:15:12"
															},
															"nativeSrc": "2066:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2066:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2097:1:12",
																		"nodeType": "YulLiteral",
																		"src": "2097:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2100:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2100:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2090:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2090:6:12"
																},
																"nativeSrc": "2090:15:12",
																"nodeType": "YulFunctionCall",
																"src": "2090:15:12"
															},
															"nativeSrc": "2090:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "2090:15:12"
														}
													]
												},
												"name": "panic_error_0x21",
												"nativeSrc": "1931:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "1931:180:12"
											},
											{
												"body": {
													"nativeSrc": "2171:62:12",
													"nodeType": "YulBlock",
													"src": "2171:62:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "2205:22:12",
																"nodeType": "YulBlock",
																"src": "2205:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x21",
																				"nativeSrc": "2207:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "2207:16:12"
																			},
																			"nativeSrc": "2207:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "2207:18:12"
																		},
																		"nativeSrc": "2207:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "2207:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2194:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2194:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2201:1:12",
																				"nodeType": "YulLiteral",
																				"src": "2201:1:12",
																				"type": "",
																				"value": "5"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2191:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "2191:2:12"
																		},
																		"nativeSrc": "2191:12:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2191:12:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2184:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2184:6:12"
																},
																"nativeSrc": "2184:20:12",
																"nodeType": "YulFunctionCall",
																"src": "2184:20:12"
															},
															"nativeSrc": "2181:46:12",
															"nodeType": "YulIf",
															"src": "2181:46:12"
														}
													]
												},
												"name": "validator_assert_t_enum$_Status_$3902",
												"nativeSrc": "2117:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2164:5:12",
														"nodeType": "YulTypedName",
														"src": "2164:5:12",
														"type": ""
													}
												],
												"src": "2117:116:12"
											},
											{
												"body": {
													"nativeSrc": "2295:77:12",
													"nodeType": "YulBlock",
													"src": "2295:77:12",
													"statements": [
														{
															"nativeSrc": "2305:16:12",
															"nodeType": "YulAssignment",
															"src": "2305:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "2316:5:12",
																"nodeType": "YulIdentifier",
																"src": "2316:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2305:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "2305:7:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2360:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2360:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_assert_t_enum$_Status_$3902",
																	"nativeSrc": "2322:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "2322:37:12"
																},
																"nativeSrc": "2322:44:12",
																"nodeType": "YulFunctionCall",
																"src": "2322:44:12"
															},
															"nativeSrc": "2322:44:12",
															"nodeType": "YulExpressionStatement",
															"src": "2322:44:12"
														}
													]
												},
												"name": "cleanup_t_enum$_Status_$3902",
												"nativeSrc": "2239:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2277:5:12",
														"nodeType": "YulTypedName",
														"src": "2277:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2287:7:12",
														"nodeType": "YulTypedName",
														"src": "2287:7:12",
														"type": ""
													}
												],
												"src": "2239:133:12"
											},
											{
												"body": {
													"nativeSrc": "2447:64:12",
													"nodeType": "YulBlock",
													"src": "2447:64:12",
													"statements": [
														{
															"nativeSrc": "2457:48:12",
															"nodeType": "YulAssignment",
															"src": "2457:48:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2499:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "2499:5:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_enum$_Status_$3902",
																	"nativeSrc": "2470:28:12",
																	"nodeType": "YulIdentifier",
																	"src": "2470:28:12"
																},
																"nativeSrc": "2470:35:12",
																"nodeType": "YulFunctionCall",
																"src": "2470:35:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "2457:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "2457:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_enum$_Status_$3902_to_t_uint8",
												"nativeSrc": "2378:133:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2427:5:12",
														"nodeType": "YulTypedName",
														"src": "2427:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "2437:9:12",
														"nodeType": "YulTypedName",
														"src": "2437:9:12",
														"type": ""
													}
												],
												"src": "2378:133:12"
											},
											{
												"body": {
													"nativeSrc": "2581:75:12",
													"nodeType": "YulBlock",
													"src": "2581:75:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2598:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2598:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2643:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "2643:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_enum$_Status_$3902_to_t_uint8",
																			"nativeSrc": "2603:39:12",
																			"nodeType": "YulIdentifier",
																			"src": "2603:39:12"
																		},
																		"nativeSrc": "2603:46:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2603:46:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2591:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "2591:6:12"
																},
																"nativeSrc": "2591:59:12",
																"nodeType": "YulFunctionCall",
																"src": "2591:59:12"
															},
															"nativeSrc": "2591:59:12",
															"nodeType": "YulExpressionStatement",
															"src": "2591:59:12"
														}
													]
												},
												"name": "abi_encode_t_enum$_Status_$3902_to_t_uint8",
												"nativeSrc": "2517:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2569:5:12",
														"nodeType": "YulTypedName",
														"src": "2569:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2576:3:12",
														"nodeType": "YulTypedName",
														"src": "2576:3:12",
														"type": ""
													}
												],
												"src": "2517:139:12"
											},
											{
												"body": {
													"nativeSrc": "2840:1292:12",
													"nodeType": "YulBlock",
													"src": "2840:1292:12",
													"statements": [
														{
															"nativeSrc": "2850:26:12",
															"nodeType": "YulVariableDeclaration",
															"src": "2850:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2866:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "2866:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2871:4:12",
																		"nodeType": "YulLiteral",
																		"src": "2871:4:12",
																		"type": "",
																		"value": "0xe0"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2862:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "2862:3:12"
																},
																"nativeSrc": "2862:14:12",
																"nodeType": "YulFunctionCall",
																"src": "2862:14:12"
															},
															"variables": [
																{
																	"name": "tail",
																	"nativeSrc": "2854:4:12",
																	"nodeType": "YulTypedName",
																	"src": "2854:4:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2886:170:12",
															"nodeType": "YulBlock",
															"src": "2886:170:12",
															"statements": [
																{
																	"nativeSrc": "2927:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2927:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2957:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "2957:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2964:4:12",
																						"nodeType": "YulLiteral",
																						"src": "2964:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2953:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "2953:3:12"
																				},
																				"nativeSrc": "2953:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "2953:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "2947:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "2947:5:12"
																		},
																		"nativeSrc": "2947:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2947:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "2931:12:12",
																			"nodeType": "YulTypedName",
																			"src": "2931:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3017:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "3017:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3035:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3035:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3040:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3040:4:12",
																						"type": "",
																						"value": "0x00"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3031:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3031:3:12"
																				},
																				"nativeSrc": "3031:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3031:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_bytes32_to_t_bytes32",
																			"nativeSrc": "2983:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "2983:33:12"
																		},
																		"nativeSrc": "2983:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "2983:63:12"
																	},
																	"nativeSrc": "2983:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "2983:63:12"
																}
															]
														},
														{
															"nativeSrc": "3066:167:12",
															"nodeType": "YulBlock",
															"src": "3066:167:12",
															"statements": [
																{
																	"nativeSrc": "3104:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3104:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3134:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3134:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3141:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3141:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3130:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3130:3:12"
																				},
																				"nativeSrc": "3130:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3130:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3124:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3124:5:12"
																		},
																		"nativeSrc": "3124:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3124:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3108:12:12",
																			"nodeType": "YulTypedName",
																			"src": "3108:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3194:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "3194:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3212:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3212:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3217:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3217:4:12",
																						"type": "",
																						"value": "0x20"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3208:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3208:3:12"
																				},
																				"nativeSrc": "3208:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3208:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "3160:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "3160:33:12"
																		},
																		"nativeSrc": "3160:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3160:63:12"
																	},
																	"nativeSrc": "3160:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "3160:63:12"
																}
															]
														},
														{
															"nativeSrc": "3243:168:12",
															"nodeType": "YulBlock",
															"src": "3243:168:12",
															"statements": [
																{
																	"nativeSrc": "3282:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3282:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3312:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3312:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3319:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3319:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3308:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3308:3:12"
																				},
																				"nativeSrc": "3308:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3308:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3302:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3302:5:12"
																		},
																		"nativeSrc": "3302:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3302:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3286:12:12",
																			"nodeType": "YulTypedName",
																			"src": "3286:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3372:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "3372:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3390:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3390:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3395:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3395:4:12",
																						"type": "",
																						"value": "0x40"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3386:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3386:3:12"
																				},
																				"nativeSrc": "3386:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3386:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_address_to_t_address",
																			"nativeSrc": "3338:33:12",
																			"nodeType": "YulIdentifier",
																			"src": "3338:33:12"
																		},
																		"nativeSrc": "3338:63:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3338:63:12"
																	},
																	"nativeSrc": "3338:63:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "3338:63:12"
																}
															]
														},
														{
															"nativeSrc": "3421:164:12",
															"nodeType": "YulBlock",
															"src": "3421:164:12",
															"statements": [
																{
																	"nativeSrc": "3458:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3458:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3488:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3488:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3495:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3495:4:12",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3484:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3484:3:12"
																				},
																				"nativeSrc": "3484:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3484:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3478:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3478:5:12"
																		},
																		"nativeSrc": "3478:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3478:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3462:12:12",
																			"nodeType": "YulTypedName",
																			"src": "3462:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3546:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "3546:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3564:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3564:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3569:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3569:4:12",
																						"type": "",
																						"value": "0x60"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3560:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3560:3:12"
																				},
																				"nativeSrc": "3560:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3560:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint96_to_t_uint96",
																			"nativeSrc": "3514:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "3514:31:12"
																		},
																		"nativeSrc": "3514:61:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3514:61:12"
																	},
																	"nativeSrc": "3514:61:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "3514:61:12"
																}
															]
														},
														{
															"nativeSrc": "3595:166:12",
															"nodeType": "YulBlock",
															"src": "3595:166:12",
															"statements": [
																{
																	"nativeSrc": "3634:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3634:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3664:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3664:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3671:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3671:4:12",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3660:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3660:3:12"
																				},
																				"nativeSrc": "3660:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3660:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3654:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3654:5:12"
																		},
																		"nativeSrc": "3654:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3654:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3638:12:12",
																			"nodeType": "YulTypedName",
																			"src": "3638:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3722:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "3722:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3740:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3740:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3745:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3745:4:12",
																						"type": "",
																						"value": "0x80"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3736:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3736:3:12"
																				},
																				"nativeSrc": "3736:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3736:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint64_to_t_uint64",
																			"nativeSrc": "3690:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "3690:31:12"
																		},
																		"nativeSrc": "3690:61:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3690:61:12"
																	},
																	"nativeSrc": "3690:61:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "3690:61:12"
																}
															]
														},
														{
															"nativeSrc": "3771:169:12",
															"nodeType": "YulBlock",
															"src": "3771:169:12",
															"statements": [
																{
																	"nativeSrc": "3813:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3813:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "3843:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "3843:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3850:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3850:4:12",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3839:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3839:3:12"
																				},
																				"nativeSrc": "3839:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3839:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "3833:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "3833:5:12"
																		},
																		"nativeSrc": "3833:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3833:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3817:12:12",
																			"nodeType": "YulTypedName",
																			"src": "3817:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "3901:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "3901:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "3919:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "3919:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3924:4:12",
																						"nodeType": "YulLiteral",
																						"src": "3924:4:12",
																						"type": "",
																						"value": "0xa0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3915:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "3915:3:12"
																				},
																				"nativeSrc": "3915:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "3915:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_uint64_to_t_uint64",
																			"nativeSrc": "3869:31:12",
																			"nodeType": "YulIdentifier",
																			"src": "3869:31:12"
																		},
																		"nativeSrc": "3869:61:12",
																		"nodeType": "YulFunctionCall",
																		"src": "3869:61:12"
																	},
																	"nativeSrc": "3869:61:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "3869:61:12"
																}
															]
														},
														{
															"nativeSrc": "3950:175:12",
															"nodeType": "YulBlock",
															"src": "3950:175:12",
															"statements": [
																{
																	"nativeSrc": "3987:43:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "3987:43:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "4017:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "4017:5:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4024:4:12",
																						"nodeType": "YulLiteral",
																						"src": "4024:4:12",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4013:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4013:3:12"
																				},
																				"nativeSrc": "4013:16:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4013:16:12"
																			}
																		],
																		"functionName": {
																			"name": "mload",
																			"nativeSrc": "4007:5:12",
																			"nodeType": "YulIdentifier",
																			"src": "4007:5:12"
																		},
																		"nativeSrc": "4007:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4007:23:12"
																	},
																	"variables": [
																		{
																			"name": "memberValue0",
																			"nativeSrc": "3991:12:12",
																			"nodeType": "YulTypedName",
																			"src": "3991:12:12",
																			"type": ""
																		}
																	]
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"name": "memberValue0",
																				"nativeSrc": "4086:12:12",
																				"nodeType": "YulIdentifier",
																				"src": "4086:12:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4104:3:12",
																						"nodeType": "YulIdentifier",
																						"src": "4104:3:12"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4109:4:12",
																						"nodeType": "YulLiteral",
																						"src": "4109:4:12",
																						"type": "",
																						"value": "0xc0"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4100:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "4100:3:12"
																				},
																				"nativeSrc": "4100:14:12",
																				"nodeType": "YulFunctionCall",
																				"src": "4100:14:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_encode_t_enum$_Status_$3902_to_t_uint8",
																			"nativeSrc": "4043:42:12",
																			"nodeType": "YulIdentifier",
																			"src": "4043:42:12"
																		},
																		"nativeSrc": "4043:72:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4043:72:12"
																	},
																	"nativeSrc": "4043:72:12",
																	"nodeType": "YulExpressionStatement",
																	"src": "4043:72:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_struct$_Bounty_$3919_memory_ptr_to_t_struct$_Bounty_$3919_memory_ptr_fromStack",
												"nativeSrc": "2726:1406:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2827:5:12",
														"nodeType": "YulTypedName",
														"src": "2827:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2834:3:12",
														"nodeType": "YulTypedName",
														"src": "2834:3:12",
														"type": ""
													}
												],
												"src": "2726:1406:12"
											},
											{
												"body": {
													"nativeSrc": "4284:173:12",
													"nodeType": "YulBlock",
													"src": "4284:173:12",
													"statements": [
														{
															"nativeSrc": "4294:27:12",
															"nodeType": "YulAssignment",
															"src": "4294:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4306:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4306:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4317:3:12",
																		"nodeType": "YulLiteral",
																		"src": "4317:3:12",
																		"type": "",
																		"value": "224"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4302:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4302:3:12"
																},
																"nativeSrc": "4302:19:12",
																"nodeType": "YulFunctionCall",
																"src": "4302:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4294:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4294:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4423:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4423:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4436:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4436:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4447:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4447:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4432:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4432:3:12"
																		},
																		"nativeSrc": "4432:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4432:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_struct$_Bounty_$3919_memory_ptr_to_t_struct$_Bounty_$3919_memory_ptr_fromStack",
																	"nativeSrc": "4331:91:12",
																	"nodeType": "YulIdentifier",
																	"src": "4331:91:12"
																},
																"nativeSrc": "4331:119:12",
																"nodeType": "YulFunctionCall",
																"src": "4331:119:12"
															},
															"nativeSrc": "4331:119:12",
															"nodeType": "YulExpressionStatement",
															"src": "4331:119:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_struct$_Bounty_$3919_memory_ptr__to_t_struct$_Bounty_$3919_memory_ptr__fromStack_reversed",
												"nativeSrc": "4138:319:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4256:9:12",
														"nodeType": "YulTypedName",
														"src": "4256:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4268:6:12",
														"nodeType": "YulTypedName",
														"src": "4268:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4279:4:12",
														"nodeType": "YulTypedName",
														"src": "4279:4:12",
														"type": ""
													}
												],
												"src": "4138:319:12"
											},
											{
												"body": {
													"nativeSrc": "4507:45:12",
													"nodeType": "YulBlock",
													"src": "4507:45:12",
													"statements": [
														{
															"nativeSrc": "4517:29:12",
															"nodeType": "YulAssignment",
															"src": "4517:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4532:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "4532:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4539:6:12",
																		"nodeType": "YulLiteral",
																		"src": "4539:6:12",
																		"type": "",
																		"value": "0xffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "4528:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4528:3:12"
																},
																"nativeSrc": "4528:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4528:18:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "4517:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "4517:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint16",
												"nativeSrc": "4463:89:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4489:5:12",
														"nodeType": "YulTypedName",
														"src": "4489:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "4499:7:12",
														"nodeType": "YulTypedName",
														"src": "4499:7:12",
														"type": ""
													}
												],
												"src": "4463:89:12"
											},
											{
												"body": {
													"nativeSrc": "4621:52:12",
													"nodeType": "YulBlock",
													"src": "4621:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4638:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "4638:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4660:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "4660:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint16",
																			"nativeSrc": "4643:16:12",
																			"nodeType": "YulIdentifier",
																			"src": "4643:16:12"
																		},
																		"nativeSrc": "4643:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4643:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4631:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "4631:6:12"
																},
																"nativeSrc": "4631:36:12",
																"nodeType": "YulFunctionCall",
																"src": "4631:36:12"
															},
															"nativeSrc": "4631:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "4631:36:12"
														}
													]
												},
												"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
												"nativeSrc": "4558:115:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4609:5:12",
														"nodeType": "YulTypedName",
														"src": "4609:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "4616:3:12",
														"nodeType": "YulTypedName",
														"src": "4616:3:12",
														"type": ""
													}
												],
												"src": "4558:115:12"
											},
											{
												"body": {
													"nativeSrc": "4775:122:12",
													"nodeType": "YulBlock",
													"src": "4775:122:12",
													"statements": [
														{
															"nativeSrc": "4785:26:12",
															"nodeType": "YulAssignment",
															"src": "4785:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4797:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "4797:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4808:2:12",
																		"nodeType": "YulLiteral",
																		"src": "4808:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4793:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4793:3:12"
																},
																"nativeSrc": "4793:18:12",
																"nodeType": "YulFunctionCall",
																"src": "4793:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4785:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "4785:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4863:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "4863:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4876:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "4876:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4887:1:12",
																				"nodeType": "YulLiteral",
																				"src": "4887:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4872:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "4872:3:12"
																		},
																		"nativeSrc": "4872:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "4872:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nativeSrc": "4821:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "4821:41:12"
																},
																"nativeSrc": "4821:69:12",
																"nodeType": "YulFunctionCall",
																"src": "4821:69:12"
															},
															"nativeSrc": "4821:69:12",
															"nodeType": "YulExpressionStatement",
															"src": "4821:69:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed",
												"nativeSrc": "4679:218:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4747:9:12",
														"nodeType": "YulTypedName",
														"src": "4747:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4759:6:12",
														"nodeType": "YulTypedName",
														"src": "4759:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4770:4:12",
														"nodeType": "YulTypedName",
														"src": "4770:4:12",
														"type": ""
													}
												],
												"src": "4679:218:12"
											},
											{
												"body": {
													"nativeSrc": "4935:28:12",
													"nodeType": "YulBlock",
													"src": "4935:28:12",
													"statements": [
														{
															"nativeSrc": "4945:12:12",
															"nodeType": "YulAssignment",
															"src": "4945:12:12",
															"value": {
																"name": "value",
																"nativeSrc": "4952:5:12",
																"nodeType": "YulIdentifier",
																"src": "4952:5:12"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "4945:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "4945:3:12"
																}
															]
														}
													]
												},
												"name": "identity",
												"nativeSrc": "4903:60:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "4921:5:12",
														"nodeType": "YulTypedName",
														"src": "4921:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "4931:3:12",
														"nodeType": "YulTypedName",
														"src": "4931:3:12",
														"type": ""
													}
												],
												"src": "4903:60:12"
											},
											{
												"body": {
													"nativeSrc": "5029:82:12",
													"nodeType": "YulBlock",
													"src": "5029:82:12",
													"statements": [
														{
															"nativeSrc": "5039:66:12",
															"nodeType": "YulAssignment",
															"src": "5039:66:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "5097:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "5097:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint160",
																					"nativeSrc": "5079:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "5079:17:12"
																				},
																				"nativeSrc": "5079:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "5079:24:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "5070:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "5070:8:12"
																		},
																		"nativeSrc": "5070:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5070:34:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "5052:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "5052:17:12"
																},
																"nativeSrc": "5052:53:12",
																"nodeType": "YulFunctionCall",
																"src": "5052:53:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5039:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5039:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_uint160",
												"nativeSrc": "4969:142:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5009:5:12",
														"nodeType": "YulTypedName",
														"src": "5009:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5019:9:12",
														"nodeType": "YulTypedName",
														"src": "5019:9:12",
														"type": ""
													}
												],
												"src": "4969:142:12"
											},
											{
												"body": {
													"nativeSrc": "5177:66:12",
													"nodeType": "YulBlock",
													"src": "5177:66:12",
													"statements": [
														{
															"nativeSrc": "5187:50:12",
															"nodeType": "YulAssignment",
															"src": "5187:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5231:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5231:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_uint160",
																	"nativeSrc": "5200:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "5200:30:12"
																},
																"nativeSrc": "5200:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5200:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5187:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5187:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_uint160_to_t_address",
												"nativeSrc": "5117:126:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5157:5:12",
														"nodeType": "YulTypedName",
														"src": "5157:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5167:9:12",
														"nodeType": "YulTypedName",
														"src": "5167:9:12",
														"type": ""
													}
												],
												"src": "5117:126:12"
											},
											{
												"body": {
													"nativeSrc": "5323:66:12",
													"nodeType": "YulBlock",
													"src": "5323:66:12",
													"statements": [
														{
															"nativeSrc": "5333:50:12",
															"nodeType": "YulAssignment",
															"src": "5333:50:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5377:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "5377:5:12"
																	}
																],
																"functionName": {
																	"name": "convert_t_uint160_to_t_address",
																	"nativeSrc": "5346:30:12",
																	"nodeType": "YulIdentifier",
																	"src": "5346:30:12"
																},
																"nativeSrc": "5346:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5346:37:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "5333:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "5333:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_contract$_IERC20_$225_to_t_address",
												"nativeSrc": "5249:140:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5303:5:12",
														"nodeType": "YulTypedName",
														"src": "5303:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "5313:9:12",
														"nodeType": "YulTypedName",
														"src": "5313:9:12",
														"type": ""
													}
												],
												"src": "5249:140:12"
											},
											{
												"body": {
													"nativeSrc": "5474:80:12",
													"nodeType": "YulBlock",
													"src": "5474:80:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5491:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5491:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5541:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5541:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_contract$_IERC20_$225_to_t_address",
																			"nativeSrc": "5496:44:12",
																			"nodeType": "YulIdentifier",
																			"src": "5496:44:12"
																		},
																		"nativeSrc": "5496:51:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5496:51:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5484:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5484:6:12"
																},
																"nativeSrc": "5484:64:12",
																"nodeType": "YulFunctionCall",
																"src": "5484:64:12"
															},
															"nativeSrc": "5484:64:12",
															"nodeType": "YulExpressionStatement",
															"src": "5484:64:12"
														}
													]
												},
												"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
												"nativeSrc": "5395:159:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5462:5:12",
														"nodeType": "YulTypedName",
														"src": "5462:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5469:3:12",
														"nodeType": "YulTypedName",
														"src": "5469:3:12",
														"type": ""
													}
												],
												"src": "5395:159:12"
											},
											{
												"body": {
													"nativeSrc": "5672:138:12",
													"nodeType": "YulBlock",
													"src": "5672:138:12",
													"statements": [
														{
															"nativeSrc": "5682:26:12",
															"nodeType": "YulAssignment",
															"src": "5682:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5694:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "5694:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5705:2:12",
																		"nodeType": "YulLiteral",
																		"src": "5705:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5690:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "5690:3:12"
																},
																"nativeSrc": "5690:18:12",
																"nodeType": "YulFunctionCall",
																"src": "5690:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5682:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "5682:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5776:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "5776:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5789:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "5789:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5800:1:12",
																				"nodeType": "YulLiteral",
																				"src": "5800:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5785:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "5785:3:12"
																		},
																		"nativeSrc": "5785:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5785:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack",
																	"nativeSrc": "5718:57:12",
																	"nodeType": "YulIdentifier",
																	"src": "5718:57:12"
																},
																"nativeSrc": "5718:85:12",
																"nodeType": "YulFunctionCall",
																"src": "5718:85:12"
															},
															"nativeSrc": "5718:85:12",
															"nodeType": "YulExpressionStatement",
															"src": "5718:85:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed",
												"nativeSrc": "5560:250:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5644:9:12",
														"nodeType": "YulTypedName",
														"src": "5644:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5656:6:12",
														"nodeType": "YulTypedName",
														"src": "5656:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5667:4:12",
														"nodeType": "YulTypedName",
														"src": "5667:4:12",
														"type": ""
													}
												],
												"src": "5560:250:12"
											},
											{
												"body": {
													"nativeSrc": "5881:53:12",
													"nodeType": "YulBlock",
													"src": "5881:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5898:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "5898:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5921:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "5921:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "5903:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "5903:17:12"
																		},
																		"nativeSrc": "5903:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "5903:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5891:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "5891:6:12"
																},
																"nativeSrc": "5891:37:12",
																"nodeType": "YulFunctionCall",
																"src": "5891:37:12"
															},
															"nativeSrc": "5891:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "5891:37:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "5816:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5869:5:12",
														"nodeType": "YulTypedName",
														"src": "5869:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5876:3:12",
														"nodeType": "YulTypedName",
														"src": "5876:3:12",
														"type": ""
													}
												],
												"src": "5816:118:12"
											},
											{
												"body": {
													"nativeSrc": "6038:124:12",
													"nodeType": "YulBlock",
													"src": "6038:124:12",
													"statements": [
														{
															"nativeSrc": "6048:26:12",
															"nodeType": "YulAssignment",
															"src": "6048:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6060:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6060:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6071:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6071:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6056:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6056:3:12"
																},
																"nativeSrc": "6056:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6056:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6048:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6048:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6128:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6128:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6141:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6141:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6152:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6152:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6137:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6137:3:12"
																		},
																		"nativeSrc": "6137:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6137:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "6084:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "6084:43:12"
																},
																"nativeSrc": "6084:71:12",
																"nodeType": "YulFunctionCall",
																"src": "6084:71:12"
															},
															"nativeSrc": "6084:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "6084:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "5940:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6010:9:12",
														"nodeType": "YulTypedName",
														"src": "6010:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6022:6:12",
														"nodeType": "YulTypedName",
														"src": "6022:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6033:4:12",
														"nodeType": "YulTypedName",
														"src": "6033:4:12",
														"type": ""
													}
												],
												"src": "5940:222:12"
											},
											{
												"body": {
													"nativeSrc": "6210:48:12",
													"nodeType": "YulBlock",
													"src": "6210:48:12",
													"statements": [
														{
															"nativeSrc": "6220:32:12",
															"nodeType": "YulAssignment",
															"src": "6220:32:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6245:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6245:5:12"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "6238:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "6238:6:12"
																		},
																		"nativeSrc": "6238:13:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6238:13:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6231:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6231:6:12"
																},
																"nativeSrc": "6231:21:12",
																"nodeType": "YulFunctionCall",
																"src": "6231:21:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6220:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "6220:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "6168:90:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6192:5:12",
														"nodeType": "YulTypedName",
														"src": "6192:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6202:7:12",
														"nodeType": "YulTypedName",
														"src": "6202:7:12",
														"type": ""
													}
												],
												"src": "6168:90:12"
											},
											{
												"body": {
													"nativeSrc": "6323:50:12",
													"nodeType": "YulBlock",
													"src": "6323:50:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6340:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6340:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6360:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6360:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "6345:14:12",
																			"nodeType": "YulIdentifier",
																			"src": "6345:14:12"
																		},
																		"nativeSrc": "6345:21:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6345:21:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6333:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6333:6:12"
																},
																"nativeSrc": "6333:34:12",
																"nodeType": "YulFunctionCall",
																"src": "6333:34:12"
															},
															"nativeSrc": "6333:34:12",
															"nodeType": "YulExpressionStatement",
															"src": "6333:34:12"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "6264:109:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6311:5:12",
														"nodeType": "YulTypedName",
														"src": "6311:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6318:3:12",
														"nodeType": "YulTypedName",
														"src": "6318:3:12",
														"type": ""
													}
												],
												"src": "6264:109:12"
											},
											{
												"body": {
													"nativeSrc": "6471:118:12",
													"nodeType": "YulBlock",
													"src": "6471:118:12",
													"statements": [
														{
															"nativeSrc": "6481:26:12",
															"nodeType": "YulAssignment",
															"src": "6481:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6493:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6493:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6504:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6504:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6489:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6489:3:12"
																},
																"nativeSrc": "6489:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6489:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6481:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6481:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6555:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6555:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6568:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6568:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6579:1:12",
																				"nodeType": "YulLiteral",
																				"src": "6579:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6564:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6564:3:12"
																		},
																		"nativeSrc": "6564:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6564:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "6517:37:12",
																	"nodeType": "YulIdentifier",
																	"src": "6517:37:12"
																},
																"nativeSrc": "6517:65:12",
																"nodeType": "YulFunctionCall",
																"src": "6517:65:12"
															},
															"nativeSrc": "6517:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "6517:65:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "6379:210:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6443:9:12",
														"nodeType": "YulTypedName",
														"src": "6443:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6455:6:12",
														"nodeType": "YulTypedName",
														"src": "6455:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6466:4:12",
														"nodeType": "YulTypedName",
														"src": "6466:4:12",
														"type": ""
													}
												],
												"src": "6379:210:12"
											},
											{
												"body": {
													"nativeSrc": "6638:43:12",
													"nodeType": "YulBlock",
													"src": "6638:43:12",
													"statements": [
														{
															"nativeSrc": "6648:27:12",
															"nodeType": "YulAssignment",
															"src": "6648:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6663:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "6663:5:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6670:4:12",
																		"nodeType": "YulLiteral",
																		"src": "6670:4:12",
																		"type": "",
																		"value": "0xff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "6659:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6659:3:12"
																},
																"nativeSrc": "6659:16:12",
																"nodeType": "YulFunctionCall",
																"src": "6659:16:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "6648:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "6648:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint8",
												"nativeSrc": "6595:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6620:5:12",
														"nodeType": "YulTypedName",
														"src": "6620:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "6630:7:12",
														"nodeType": "YulTypedName",
														"src": "6630:7:12",
														"type": ""
													}
												],
												"src": "6595:86:12"
											},
											{
												"body": {
													"nativeSrc": "6748:51:12",
													"nodeType": "YulBlock",
													"src": "6748:51:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "6765:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "6765:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "6786:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "6786:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint8",
																			"nativeSrc": "6770:15:12",
																			"nodeType": "YulIdentifier",
																			"src": "6770:15:12"
																		},
																		"nativeSrc": "6770:22:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6770:22:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6758:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "6758:6:12"
																},
																"nativeSrc": "6758:35:12",
																"nodeType": "YulFunctionCall",
																"src": "6758:35:12"
															},
															"nativeSrc": "6758:35:12",
															"nodeType": "YulExpressionStatement",
															"src": "6758:35:12"
														}
													]
												},
												"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
												"nativeSrc": "6687:112:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "6736:5:12",
														"nodeType": "YulTypedName",
														"src": "6736:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "6743:3:12",
														"nodeType": "YulTypedName",
														"src": "6743:3:12",
														"type": ""
													}
												],
												"src": "6687:112:12"
											},
											{
												"body": {
													"nativeSrc": "6899:120:12",
													"nodeType": "YulBlock",
													"src": "6899:120:12",
													"statements": [
														{
															"nativeSrc": "6909:26:12",
															"nodeType": "YulAssignment",
															"src": "6909:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6921:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "6921:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6932:2:12",
																		"nodeType": "YulLiteral",
																		"src": "6932:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6917:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "6917:3:12"
																},
																"nativeSrc": "6917:18:12",
																"nodeType": "YulFunctionCall",
																"src": "6917:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6909:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "6909:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "6985:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "6985:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6998:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "6998:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7009:1:12",
																				"nodeType": "YulLiteral",
																				"src": "7009:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6994:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "6994:3:12"
																		},
																		"nativeSrc": "6994:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "6994:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
																	"nativeSrc": "6945:39:12",
																	"nodeType": "YulIdentifier",
																	"src": "6945:39:12"
																},
																"nativeSrc": "6945:67:12",
																"nodeType": "YulFunctionCall",
																"src": "6945:67:12"
															},
															"nativeSrc": "6945:67:12",
															"nodeType": "YulExpressionStatement",
															"src": "6945:67:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
												"nativeSrc": "6805:214:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6871:9:12",
														"nodeType": "YulTypedName",
														"src": "6871:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6883:6:12",
														"nodeType": "YulTypedName",
														"src": "6883:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6894:4:12",
														"nodeType": "YulTypedName",
														"src": "6894:4:12",
														"type": ""
													}
												],
												"src": "6805:214:12"
											},
											{
												"body": {
													"nativeSrc": "7068:79:12",
													"nodeType": "YulBlock",
													"src": "7068:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7125:16:12",
																"nodeType": "YulBlock",
																"src": "7125:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7134:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7134:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7137:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7137:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7127:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7127:6:12"
																			},
																			"nativeSrc": "7127:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7127:12:12"
																		},
																		"nativeSrc": "7127:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7127:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7091:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7091:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7116:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7116:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "7098:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "7098:17:12"
																				},
																				"nativeSrc": "7098:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7098:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7088:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7088:2:12"
																		},
																		"nativeSrc": "7088:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7088:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7081:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7081:6:12"
																},
																"nativeSrc": "7081:43:12",
																"nodeType": "YulFunctionCall",
																"src": "7081:43:12"
															},
															"nativeSrc": "7078:63:12",
															"nodeType": "YulIf",
															"src": "7078:63:12"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "7025:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7061:5:12",
														"nodeType": "YulTypedName",
														"src": "7061:5:12",
														"type": ""
													}
												],
												"src": "7025:122:12"
											},
											{
												"body": {
													"nativeSrc": "7205:87:12",
													"nodeType": "YulBlock",
													"src": "7205:87:12",
													"statements": [
														{
															"nativeSrc": "7215:29:12",
															"nodeType": "YulAssignment",
															"src": "7215:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7237:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7237:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7224:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7224:12:12"
																},
																"nativeSrc": "7224:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7224:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7215:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7215:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7280:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7280:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "7253:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "7253:26:12"
																},
																"nativeSrc": "7253:33:12",
																"nodeType": "YulFunctionCall",
																"src": "7253:33:12"
															},
															"nativeSrc": "7253:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "7253:33:12"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "7153:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7183:6:12",
														"nodeType": "YulTypedName",
														"src": "7183:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7191:3:12",
														"nodeType": "YulTypedName",
														"src": "7191:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7199:5:12",
														"nodeType": "YulTypedName",
														"src": "7199:5:12",
														"type": ""
													}
												],
												"src": "7153:139:12"
											},
											{
												"body": {
													"nativeSrc": "7340:78:12",
													"nodeType": "YulBlock",
													"src": "7340:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7396:16:12",
																"nodeType": "YulBlock",
																"src": "7396:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7405:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7405:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7408:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7408:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7398:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7398:6:12"
																			},
																			"nativeSrc": "7398:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7398:12:12"
																		},
																		"nativeSrc": "7398:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7398:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7363:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7363:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7387:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7387:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "7370:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "7370:16:12"
																				},
																				"nativeSrc": "7370:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7370:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7360:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7360:2:12"
																		},
																		"nativeSrc": "7360:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7360:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7353:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7353:6:12"
																},
																"nativeSrc": "7353:42:12",
																"nodeType": "YulFunctionCall",
																"src": "7353:42:12"
															},
															"nativeSrc": "7350:62:12",
															"nodeType": "YulIf",
															"src": "7350:62:12"
														}
													]
												},
												"name": "validator_revert_t_uint64",
												"nativeSrc": "7298:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7333:5:12",
														"nodeType": "YulTypedName",
														"src": "7333:5:12",
														"type": ""
													}
												],
												"src": "7298:120:12"
											},
											{
												"body": {
													"nativeSrc": "7475:86:12",
													"nodeType": "YulBlock",
													"src": "7475:86:12",
													"statements": [
														{
															"nativeSrc": "7485:29:12",
															"nodeType": "YulAssignment",
															"src": "7485:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7507:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7507:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7494:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7494:12:12"
																},
																"nativeSrc": "7494:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7494:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7485:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7485:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7549:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7549:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint64",
																	"nativeSrc": "7523:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "7523:25:12"
																},
																"nativeSrc": "7523:32:12",
																"nodeType": "YulFunctionCall",
																"src": "7523:32:12"
															},
															"nativeSrc": "7523:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "7523:32:12"
														}
													]
												},
												"name": "abi_decode_t_uint64",
												"nativeSrc": "7424:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7453:6:12",
														"nodeType": "YulTypedName",
														"src": "7453:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7461:3:12",
														"nodeType": "YulTypedName",
														"src": "7461:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7469:5:12",
														"nodeType": "YulTypedName",
														"src": "7469:5:12",
														"type": ""
													}
												],
												"src": "7424:137:12"
											},
											{
												"body": {
													"nativeSrc": "7612:32:12",
													"nodeType": "YulBlock",
													"src": "7612:32:12",
													"statements": [
														{
															"nativeSrc": "7622:16:12",
															"nodeType": "YulAssignment",
															"src": "7622:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "7633:5:12",
																"nodeType": "YulIdentifier",
																"src": "7633:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "7622:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "7622:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7567:77:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7594:5:12",
														"nodeType": "YulTypedName",
														"src": "7594:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "7604:7:12",
														"nodeType": "YulTypedName",
														"src": "7604:7:12",
														"type": ""
													}
												],
												"src": "7567:77:12"
											},
											{
												"body": {
													"nativeSrc": "7693:79:12",
													"nodeType": "YulBlock",
													"src": "7693:79:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "7750:16:12",
																"nodeType": "YulBlock",
																"src": "7750:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7759:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7759:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7762:1:12",
																					"nodeType": "YulLiteral",
																					"src": "7762:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7752:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "7752:6:12"
																			},
																			"nativeSrc": "7752:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "7752:12:12"
																		},
																		"nativeSrc": "7752:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "7752:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7716:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "7716:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "7741:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "7741:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "7723:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "7723:17:12"
																				},
																				"nativeSrc": "7723:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "7723:24:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7713:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "7713:2:12"
																		},
																		"nativeSrc": "7713:35:12",
																		"nodeType": "YulFunctionCall",
																		"src": "7713:35:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7706:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "7706:6:12"
																},
																"nativeSrc": "7706:43:12",
																"nodeType": "YulFunctionCall",
																"src": "7706:43:12"
															},
															"nativeSrc": "7703:63:12",
															"nodeType": "YulIf",
															"src": "7703:63:12"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "7650:122:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "7686:5:12",
														"nodeType": "YulTypedName",
														"src": "7686:5:12",
														"type": ""
													}
												],
												"src": "7650:122:12"
											},
											{
												"body": {
													"nativeSrc": "7830:87:12",
													"nodeType": "YulBlock",
													"src": "7830:87:12",
													"statements": [
														{
															"nativeSrc": "7840:29:12",
															"nodeType": "YulAssignment",
															"src": "7840:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "7862:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "7862:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7849:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "7849:12:12"
																},
																"nativeSrc": "7849:20:12",
																"nodeType": "YulFunctionCall",
																"src": "7849:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "7840:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "7840:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "7905:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "7905:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "7878:26:12",
																	"nodeType": "YulIdentifier",
																	"src": "7878:26:12"
																},
																"nativeSrc": "7878:33:12",
																"nodeType": "YulFunctionCall",
																"src": "7878:33:12"
															},
															"nativeSrc": "7878:33:12",
															"nodeType": "YulExpressionStatement",
															"src": "7878:33:12"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "7778:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "7808:6:12",
														"nodeType": "YulTypedName",
														"src": "7808:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "7816:3:12",
														"nodeType": "YulTypedName",
														"src": "7816:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "7824:5:12",
														"nodeType": "YulTypedName",
														"src": "7824:5:12",
														"type": ""
													}
												],
												"src": "7778:139:12"
											},
											{
												"body": {
													"nativeSrc": "8055:775:12",
													"nodeType": "YulBlock",
													"src": "8055:775:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "8102:83:12",
																"nodeType": "YulBlock",
																"src": "8102:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "8104:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "8104:77:12"
																			},
																			"nativeSrc": "8104:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "8104:79:12"
																		},
																		"nativeSrc": "8104:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "8104:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8076:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8076:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8085:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "8085:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8072:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "8072:3:12"
																		},
																		"nativeSrc": "8072:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8072:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8097:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8097:3:12",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8068:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "8068:3:12"
																},
																"nativeSrc": "8068:33:12",
																"nodeType": "YulFunctionCall",
																"src": "8068:33:12"
															},
															"nativeSrc": "8065:120:12",
															"nodeType": "YulIf",
															"src": "8065:120:12"
														},
														{
															"nativeSrc": "8195:117:12",
															"nodeType": "YulBlock",
															"src": "8195:117:12",
															"statements": [
																{
																	"nativeSrc": "8210:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8210:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8224:1:12",
																		"nodeType": "YulLiteral",
																		"src": "8224:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8214:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8214:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8239:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8239:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8274:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8274:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8285:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8285:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8270:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8270:3:12"
																				},
																				"nativeSrc": "8270:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8270:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8294:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8294:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "8249:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8249:20:12"
																		},
																		"nativeSrc": "8249:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8249:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "8239:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8239:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8322:118:12",
															"nodeType": "YulBlock",
															"src": "8322:118:12",
															"statements": [
																{
																	"nativeSrc": "8337:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8337:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8351:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8351:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8341:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8341:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8367:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8367:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8402:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8402:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8413:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8413:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8398:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8398:3:12"
																				},
																				"nativeSrc": "8398:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8398:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8422:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8422:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "8377:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8377:20:12"
																		},
																		"nativeSrc": "8377:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8377:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "8367:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8367:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8450:117:12",
															"nodeType": "YulBlock",
															"src": "8450:117:12",
															"statements": [
																{
																	"nativeSrc": "8465:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8465:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8479:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8479:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8469:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8469:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8495:62:12",
																	"nodeType": "YulAssignment",
																	"src": "8495:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8529:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8529:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8540:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8540:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8525:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8525:3:12"
																				},
																				"nativeSrc": "8525:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8525:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8549:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8549:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "8505:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "8505:19:12"
																		},
																		"nativeSrc": "8505:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8505:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "8495:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8495:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8577:117:12",
															"nodeType": "YulBlock",
															"src": "8577:117:12",
															"statements": [
																{
																	"nativeSrc": "8592:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8592:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8606:2:12",
																		"nodeType": "YulLiteral",
																		"src": "8606:2:12",
																		"type": "",
																		"value": "96"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8596:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8596:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8622:62:12",
																	"nodeType": "YulAssignment",
																	"src": "8622:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8656:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8656:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8667:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8667:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8652:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8652:3:12"
																				},
																				"nativeSrc": "8652:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8652:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8676:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8676:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "8632:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "8632:19:12"
																		},
																		"nativeSrc": "8632:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8632:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value3",
																			"nativeSrc": "8622:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8622:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "8704:119:12",
															"nodeType": "YulBlock",
															"src": "8704:119:12",
															"statements": [
																{
																	"nativeSrc": "8719:17:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "8719:17:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "8733:3:12",
																		"nodeType": "YulLiteral",
																		"src": "8733:3:12",
																		"type": "",
																		"value": "128"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "8723:6:12",
																			"nodeType": "YulTypedName",
																			"src": "8723:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "8750:63:12",
																	"nodeType": "YulAssignment",
																	"src": "8750:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "8785:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "8785:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "8796:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "8796:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "8781:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "8781:3:12"
																				},
																				"nativeSrc": "8781:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "8781:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8805:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "8805:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "8760:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "8760:20:12"
																		},
																		"nativeSrc": "8760:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8760:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value4",
																			"nativeSrc": "8750:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "8750:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32t_uint64t_uint64t_uint256",
												"nativeSrc": "7923:907:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7993:9:12",
														"nodeType": "YulTypedName",
														"src": "7993:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8004:7:12",
														"nodeType": "YulTypedName",
														"src": "8004:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8016:6:12",
														"nodeType": "YulTypedName",
														"src": "8016:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8024:6:12",
														"nodeType": "YulTypedName",
														"src": "8024:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8032:6:12",
														"nodeType": "YulTypedName",
														"src": "8032:6:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8040:6:12",
														"nodeType": "YulTypedName",
														"src": "8040:6:12",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "8048:6:12",
														"nodeType": "YulTypedName",
														"src": "8048:6:12",
														"type": ""
													}
												],
												"src": "7923:907:12"
											},
											{
												"body": {
													"nativeSrc": "8901:53:12",
													"nodeType": "YulBlock",
													"src": "8901:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "8918:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "8918:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "8941:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "8941:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bytes32",
																			"nativeSrc": "8923:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "8923:17:12"
																		},
																		"nativeSrc": "8923:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "8923:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8911:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "8911:6:12"
																},
																"nativeSrc": "8911:37:12",
																"nodeType": "YulFunctionCall",
																"src": "8911:37:12"
															},
															"nativeSrc": "8911:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "8911:37:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
												"nativeSrc": "8836:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "8889:5:12",
														"nodeType": "YulTypedName",
														"src": "8889:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "8896:3:12",
														"nodeType": "YulTypedName",
														"src": "8896:3:12",
														"type": ""
													}
												],
												"src": "8836:118:12"
											},
											{
												"body": {
													"nativeSrc": "9058:124:12",
													"nodeType": "YulBlock",
													"src": "9058:124:12",
													"statements": [
														{
															"nativeSrc": "9068:26:12",
															"nodeType": "YulAssignment",
															"src": "9068:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9080:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "9080:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9091:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9091:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9076:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9076:3:12"
																},
																"nativeSrc": "9076:18:12",
																"nodeType": "YulFunctionCall",
																"src": "9076:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9068:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "9068:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "9148:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "9148:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9161:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9161:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9172:1:12",
																				"nodeType": "YulLiteral",
																				"src": "9172:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9157:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9157:3:12"
																		},
																		"nativeSrc": "9157:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9157:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_fromStack",
																	"nativeSrc": "9104:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "9104:43:12"
																},
																"nativeSrc": "9104:71:12",
																"nodeType": "YulFunctionCall",
																"src": "9104:71:12"
															},
															"nativeSrc": "9104:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "9104:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "8960:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9030:9:12",
														"nodeType": "YulTypedName",
														"src": "9030:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9042:6:12",
														"nodeType": "YulTypedName",
														"src": "9042:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9053:4:12",
														"nodeType": "YulTypedName",
														"src": "9053:4:12",
														"type": ""
													}
												],
												"src": "8960:222:12"
											},
											{
												"body": {
													"nativeSrc": "9287:518:12",
													"nodeType": "YulBlock",
													"src": "9287:518:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9333:83:12",
																"nodeType": "YulBlock",
																"src": "9333:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9335:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "9335:77:12"
																			},
																			"nativeSrc": "9335:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9335:79:12"
																		},
																		"nativeSrc": "9335:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9335:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9308:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9308:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9317:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9317:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9304:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9304:3:12"
																		},
																		"nativeSrc": "9304:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9304:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9329:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9329:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9300:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9300:3:12"
																},
																"nativeSrc": "9300:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9300:32:12"
															},
															"nativeSrc": "9297:119:12",
															"nodeType": "YulIf",
															"src": "9297:119:12"
														},
														{
															"nativeSrc": "9426:117:12",
															"nodeType": "YulBlock",
															"src": "9426:117:12",
															"statements": [
																{
																	"nativeSrc": "9441:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9441:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9455:1:12",
																		"nodeType": "YulLiteral",
																		"src": "9455:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9445:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9445:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9470:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9470:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9505:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9505:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9516:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9516:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9501:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9501:3:12"
																				},
																				"nativeSrc": "9501:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9501:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9525:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9525:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "9480:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9480:20:12"
																		},
																		"nativeSrc": "9480:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9480:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "9470:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9470:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9553:118:12",
															"nodeType": "YulBlock",
															"src": "9553:118:12",
															"statements": [
																{
																	"nativeSrc": "9568:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9568:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9582:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9582:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9572:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9572:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9598:63:12",
																	"nodeType": "YulAssignment",
																	"src": "9598:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9633:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9633:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9644:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9644:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9629:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9629:3:12"
																				},
																				"nativeSrc": "9629:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9629:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9653:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9653:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "9608:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "9608:20:12"
																		},
																		"nativeSrc": "9608:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9608:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "9598:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9598:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "9681:117:12",
															"nodeType": "YulBlock",
															"src": "9681:117:12",
															"statements": [
																{
																	"nativeSrc": "9696:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "9696:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "9710:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9710:2:12",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "9700:6:12",
																			"nodeType": "YulTypedName",
																			"src": "9700:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "9726:62:12",
																	"nodeType": "YulAssignment",
																	"src": "9726:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "9760:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "9760:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "9771:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "9771:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "9756:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "9756:3:12"
																				},
																				"nativeSrc": "9756:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "9756:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9780:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9780:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint64",
																			"nativeSrc": "9736:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "9736:19:12"
																		},
																		"nativeSrc": "9736:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9736:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nativeSrc": "9726:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "9726:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes32t_uint64",
												"nativeSrc": "9188:617:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9241:9:12",
														"nodeType": "YulTypedName",
														"src": "9241:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9252:7:12",
														"nodeType": "YulTypedName",
														"src": "9252:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9264:6:12",
														"nodeType": "YulTypedName",
														"src": "9264:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9272:6:12",
														"nodeType": "YulTypedName",
														"src": "9272:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9280:6:12",
														"nodeType": "YulTypedName",
														"src": "9280:6:12",
														"type": ""
													}
												],
												"src": "9188:617:12"
											},
											{
												"body": {
													"nativeSrc": "9894:391:12",
													"nodeType": "YulBlock",
													"src": "9894:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "9940:83:12",
																"nodeType": "YulBlock",
																"src": "9940:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "9942:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "9942:77:12"
																			},
																			"nativeSrc": "9942:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "9942:79:12"
																		},
																		"nativeSrc": "9942:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "9942:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "9915:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "9915:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "9924:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "9924:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "9911:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "9911:3:12"
																		},
																		"nativeSrc": "9911:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "9911:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9936:2:12",
																		"nodeType": "YulLiteral",
																		"src": "9936:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "9907:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "9907:3:12"
																},
																"nativeSrc": "9907:32:12",
																"nodeType": "YulFunctionCall",
																"src": "9907:32:12"
															},
															"nativeSrc": "9904:119:12",
															"nodeType": "YulIf",
															"src": "9904:119:12"
														},
														{
															"nativeSrc": "10033:117:12",
															"nodeType": "YulBlock",
															"src": "10033:117:12",
															"statements": [
																{
																	"nativeSrc": "10048:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10048:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10062:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10062:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10052:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10052:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10077:63:12",
																	"nodeType": "YulAssignment",
																	"src": "10077:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10112:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10112:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10123:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10123:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10108:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10108:3:12"
																				},
																				"nativeSrc": "10108:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10108:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10132:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10132:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "10087:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "10087:20:12"
																		},
																		"nativeSrc": "10087:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10087:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10077:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10077:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10160:118:12",
															"nodeType": "YulBlock",
															"src": "10160:118:12",
															"statements": [
																{
																	"nativeSrc": "10175:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10175:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10189:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10189:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10179:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10179:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10205:63:12",
																	"nodeType": "YulAssignment",
																	"src": "10205:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10240:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10240:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10251:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10251:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10236:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10236:3:12"
																				},
																				"nativeSrc": "10236:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10236:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10260:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10260:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10215:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "10215:20:12"
																		},
																		"nativeSrc": "10215:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10215:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10205:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10205:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "9811:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9856:9:12",
														"nodeType": "YulTypedName",
														"src": "9856:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "9867:7:12",
														"nodeType": "YulTypedName",
														"src": "9867:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "9879:6:12",
														"nodeType": "YulTypedName",
														"src": "9879:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9887:6:12",
														"nodeType": "YulTypedName",
														"src": "9887:6:12",
														"type": ""
													}
												],
												"src": "9811:474:12"
											},
											{
												"body": {
													"nativeSrc": "10333:78:12",
													"nodeType": "YulBlock",
													"src": "10333:78:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10389:16:12",
																"nodeType": "YulBlock",
																"src": "10389:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10398:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10398:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10401:1:12",
																					"nodeType": "YulLiteral",
																					"src": "10401:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10391:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "10391:6:12"
																			},
																			"nativeSrc": "10391:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10391:12:12"
																		},
																		"nativeSrc": "10391:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10391:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "10356:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "10356:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "10380:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "10380:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint16",
																					"nativeSrc": "10363:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "10363:16:12"
																				},
																				"nativeSrc": "10363:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10363:23:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "10353:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "10353:2:12"
																		},
																		"nativeSrc": "10353:34:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10353:34:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10346:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "10346:6:12"
																},
																"nativeSrc": "10346:42:12",
																"nodeType": "YulFunctionCall",
																"src": "10346:42:12"
															},
															"nativeSrc": "10343:62:12",
															"nodeType": "YulIf",
															"src": "10343:62:12"
														}
													]
												},
												"name": "validator_revert_t_uint16",
												"nativeSrc": "10291:120:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "10326:5:12",
														"nodeType": "YulTypedName",
														"src": "10326:5:12",
														"type": ""
													}
												],
												"src": "10291:120:12"
											},
											{
												"body": {
													"nativeSrc": "10468:86:12",
													"nodeType": "YulBlock",
													"src": "10468:86:12",
													"statements": [
														{
															"nativeSrc": "10478:29:12",
															"nodeType": "YulAssignment",
															"src": "10478:29:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "10500:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "10500:6:12"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "10487:12:12",
																	"nodeType": "YulIdentifier",
																	"src": "10487:12:12"
																},
																"nativeSrc": "10487:20:12",
																"nodeType": "YulFunctionCall",
																"src": "10487:20:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "10478:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "10478:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "10542:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "10542:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint16",
																	"nativeSrc": "10516:25:12",
																	"nodeType": "YulIdentifier",
																	"src": "10516:25:12"
																},
																"nativeSrc": "10516:32:12",
																"nodeType": "YulFunctionCall",
																"src": "10516:32:12"
															},
															"nativeSrc": "10516:32:12",
															"nodeType": "YulExpressionStatement",
															"src": "10516:32:12"
														}
													]
												},
												"name": "abi_decode_t_uint16",
												"nativeSrc": "10417:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "10446:6:12",
														"nodeType": "YulTypedName",
														"src": "10446:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "10454:3:12",
														"nodeType": "YulTypedName",
														"src": "10454:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "10462:5:12",
														"nodeType": "YulTypedName",
														"src": "10462:5:12",
														"type": ""
													}
												],
												"src": "10417:137:12"
											},
											{
												"body": {
													"nativeSrc": "10642:390:12",
													"nodeType": "YulBlock",
													"src": "10642:390:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "10688:83:12",
																"nodeType": "YulBlock",
																"src": "10688:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "10690:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "10690:77:12"
																			},
																			"nativeSrc": "10690:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "10690:79:12"
																		},
																		"nativeSrc": "10690:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "10690:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10663:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10663:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "10672:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "10672:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "10659:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "10659:3:12"
																		},
																		"nativeSrc": "10659:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10659:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10684:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10684:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "10655:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "10655:3:12"
																},
																"nativeSrc": "10655:32:12",
																"nodeType": "YulFunctionCall",
																"src": "10655:32:12"
															},
															"nativeSrc": "10652:119:12",
															"nodeType": "YulIf",
															"src": "10652:119:12"
														},
														{
															"nativeSrc": "10781:116:12",
															"nodeType": "YulBlock",
															"src": "10781:116:12",
															"statements": [
																{
																	"nativeSrc": "10796:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10796:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10810:1:12",
																		"nodeType": "YulLiteral",
																		"src": "10810:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10800:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10800:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10825:62:12",
																	"nodeType": "YulAssignment",
																	"src": "10825:62:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10859:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10859:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10870:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10870:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10855:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10855:3:12"
																				},
																				"nativeSrc": "10855:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10855:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "10879:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "10879:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint16",
																			"nativeSrc": "10835:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "10835:19:12"
																		},
																		"nativeSrc": "10835:52:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10835:52:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "10825:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10825:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "10907:118:12",
															"nodeType": "YulBlock",
															"src": "10907:118:12",
															"statements": [
																{
																	"nativeSrc": "10922:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "10922:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "10936:2:12",
																		"nodeType": "YulLiteral",
																		"src": "10936:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "10926:6:12",
																			"nodeType": "YulTypedName",
																			"src": "10926:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "10952:63:12",
																	"nodeType": "YulAssignment",
																	"src": "10952:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "10987:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "10987:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "10998:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "10998:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "10983:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "10983:3:12"
																				},
																				"nativeSrc": "10983:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "10983:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11007:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11007:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "10962:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "10962:20:12"
																		},
																		"nativeSrc": "10962:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "10962:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "10952:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "10952:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint16t_address",
												"nativeSrc": "10560:472:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10604:9:12",
														"nodeType": "YulTypedName",
														"src": "10604:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "10615:7:12",
														"nodeType": "YulTypedName",
														"src": "10615:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "10627:6:12",
														"nodeType": "YulTypedName",
														"src": "10627:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "10635:6:12",
														"nodeType": "YulTypedName",
														"src": "10635:6:12",
														"type": ""
													}
												],
												"src": "10560:472:12"
											},
											{
												"body": {
													"nativeSrc": "11121:391:12",
													"nodeType": "YulBlock",
													"src": "11121:391:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11167:83:12",
																"nodeType": "YulBlock",
																"src": "11167:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11169:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "11169:77:12"
																			},
																			"nativeSrc": "11169:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11169:79:12"
																		},
																		"nativeSrc": "11169:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11169:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11142:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11142:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11151:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11151:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11138:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11138:3:12"
																		},
																		"nativeSrc": "11138:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11138:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11163:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11163:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11134:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11134:3:12"
																},
																"nativeSrc": "11134:32:12",
																"nodeType": "YulFunctionCall",
																"src": "11134:32:12"
															},
															"nativeSrc": "11131:119:12",
															"nodeType": "YulIf",
															"src": "11131:119:12"
														},
														{
															"nativeSrc": "11260:117:12",
															"nodeType": "YulBlock",
															"src": "11260:117:12",
															"statements": [
																{
																	"nativeSrc": "11275:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11275:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11289:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11289:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11279:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11279:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11304:63:12",
																	"nodeType": "YulAssignment",
																	"src": "11304:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11339:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11339:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11350:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11350:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11335:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11335:3:12"
																				},
																				"nativeSrc": "11335:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11335:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11359:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11359:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes32",
																			"nativeSrc": "11314:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "11314:20:12"
																		},
																		"nativeSrc": "11314:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11314:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11304:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11304:6:12"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "11387:118:12",
															"nodeType": "YulBlock",
															"src": "11387:118:12",
															"statements": [
																{
																	"nativeSrc": "11402:16:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11402:16:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11416:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11416:2:12",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11406:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11406:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11432:63:12",
																	"nodeType": "YulAssignment",
																	"src": "11432:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11467:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11467:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11478:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11478:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11463:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11463:3:12"
																				},
																				"nativeSrc": "11463:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11463:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11487:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11487:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "11442:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "11442:20:12"
																		},
																		"nativeSrc": "11442:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11442:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "11432:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11432:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_uint256",
												"nativeSrc": "11038:474:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11083:9:12",
														"nodeType": "YulTypedName",
														"src": "11083:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11094:7:12",
														"nodeType": "YulTypedName",
														"src": "11094:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11106:6:12",
														"nodeType": "YulTypedName",
														"src": "11106:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "11114:6:12",
														"nodeType": "YulTypedName",
														"src": "11114:6:12",
														"type": ""
													}
												],
												"src": "11038:474:12"
											},
											{
												"body": {
													"nativeSrc": "11584:263:12",
													"nodeType": "YulBlock",
													"src": "11584:263:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "11630:83:12",
																"nodeType": "YulBlock",
																"src": "11630:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "11632:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "11632:77:12"
																			},
																			"nativeSrc": "11632:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "11632:79:12"
																		},
																		"nativeSrc": "11632:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "11632:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11605:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11605:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "11614:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "11614:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "11601:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "11601:3:12"
																		},
																		"nativeSrc": "11601:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11601:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11626:2:12",
																		"nodeType": "YulLiteral",
																		"src": "11626:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "11597:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "11597:3:12"
																},
																"nativeSrc": "11597:32:12",
																"nodeType": "YulFunctionCall",
																"src": "11597:32:12"
															},
															"nativeSrc": "11594:119:12",
															"nodeType": "YulIf",
															"src": "11594:119:12"
														},
														{
															"nativeSrc": "11723:117:12",
															"nodeType": "YulBlock",
															"src": "11723:117:12",
															"statements": [
																{
																	"nativeSrc": "11738:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "11738:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11752:1:12",
																		"nodeType": "YulLiteral",
																		"src": "11752:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "11742:6:12",
																			"nodeType": "YulTypedName",
																			"src": "11742:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "11767:63:12",
																	"nodeType": "YulAssignment",
																	"src": "11767:63:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "11802:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "11802:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "11813:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "11813:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "11798:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "11798:3:12"
																				},
																				"nativeSrc": "11798:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "11798:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "11822:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "11822:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "11777:20:12",
																			"nodeType": "YulIdentifier",
																			"src": "11777:20:12"
																		},
																		"nativeSrc": "11777:53:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11777:53:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "11767:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "11767:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "11518:329:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11554:9:12",
														"nodeType": "YulTypedName",
														"src": "11554:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "11565:7:12",
														"nodeType": "YulTypedName",
														"src": "11565:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "11577:6:12",
														"nodeType": "YulTypedName",
														"src": "11577:6:12",
														"type": ""
													}
												],
												"src": "11518:329:12"
											},
											{
												"body": {
													"nativeSrc": "11916:52:12",
													"nodeType": "YulBlock",
													"src": "11916:52:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "11933:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "11933:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "11955:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "11955:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint64",
																			"nativeSrc": "11938:16:12",
																			"nodeType": "YulIdentifier",
																			"src": "11938:16:12"
																		},
																		"nativeSrc": "11938:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "11938:23:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11926:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "11926:6:12"
																},
																"nativeSrc": "11926:36:12",
																"nodeType": "YulFunctionCall",
																"src": "11926:36:12"
															},
															"nativeSrc": "11926:36:12",
															"nodeType": "YulExpressionStatement",
															"src": "11926:36:12"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
												"nativeSrc": "11853:115:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "11904:5:12",
														"nodeType": "YulTypedName",
														"src": "11904:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "11911:3:12",
														"nodeType": "YulTypedName",
														"src": "11911:3:12",
														"type": ""
													}
												],
												"src": "11853:115:12"
											},
											{
												"body": {
													"nativeSrc": "12039:53:12",
													"nodeType": "YulBlock",
													"src": "12039:53:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "12056:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "12056:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "12079:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "12079:5:12"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "12061:17:12",
																			"nodeType": "YulIdentifier",
																			"src": "12061:17:12"
																		},
																		"nativeSrc": "12061:24:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12061:24:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12049:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "12049:6:12"
																},
																"nativeSrc": "12049:37:12",
																"nodeType": "YulFunctionCall",
																"src": "12049:37:12"
															},
															"nativeSrc": "12049:37:12",
															"nodeType": "YulExpressionStatement",
															"src": "12049:37:12"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "11974:118:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12027:5:12",
														"nodeType": "YulTypedName",
														"src": "12027:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "12034:3:12",
														"nodeType": "YulTypedName",
														"src": "12034:3:12",
														"type": ""
													}
												],
												"src": "11974:118:12"
											},
											{
												"body": {
													"nativeSrc": "12276:367:12",
													"nodeType": "YulBlock",
													"src": "12276:367:12",
													"statements": [
														{
															"nativeSrc": "12286:27:12",
															"nodeType": "YulAssignment",
															"src": "12286:27:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12298:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12298:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12309:3:12",
																		"nodeType": "YulLiteral",
																		"src": "12309:3:12",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12294:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12294:3:12"
																},
																"nativeSrc": "12294:19:12",
																"nodeType": "YulFunctionCall",
																"src": "12294:19:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12286:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12286:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12365:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12365:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12378:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12378:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12389:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12389:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12374:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12374:3:12"
																		},
																		"nativeSrc": "12374:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12374:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "12323:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "12323:41:12"
																},
																"nativeSrc": "12323:69:12",
																"nodeType": "YulFunctionCall",
																"src": "12323:69:12"
															},
															"nativeSrc": "12323:69:12",
															"nodeType": "YulExpressionStatement",
															"src": "12323:69:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "12444:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12444:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12457:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12457:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12468:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12468:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12453:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12453:3:12"
																		},
																		"nativeSrc": "12453:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12453:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_fromStack",
																	"nativeSrc": "12402:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "12402:41:12"
																},
																"nativeSrc": "12402:70:12",
																"nodeType": "YulFunctionCall",
																"src": "12402:70:12"
															},
															"nativeSrc": "12402:70:12",
															"nodeType": "YulExpressionStatement",
															"src": "12402:70:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "12526:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12526:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12539:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12539:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12550:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12550:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12535:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12535:3:12"
																		},
																		"nativeSrc": "12535:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12535:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "12482:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12482:43:12"
																},
																"nativeSrc": "12482:72:12",
																"nodeType": "YulFunctionCall",
																"src": "12482:72:12"
															},
															"nativeSrc": "12482:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "12482:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value3",
																		"nativeSrc": "12608:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12608:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12621:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12621:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12632:2:12",
																				"nodeType": "YulLiteral",
																				"src": "12632:2:12",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12617:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12617:3:12"
																		},
																		"nativeSrc": "12617:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12617:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12564:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12564:43:12"
																},
																"nativeSrc": "12564:72:12",
																"nodeType": "YulFunctionCall",
																"src": "12564:72:12"
															},
															"nativeSrc": "12564:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "12564:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64_t_uint64_t_address_t_uint256__to_t_uint64_t_uint64_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "12098:545:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12224:9:12",
														"nodeType": "YulTypedName",
														"src": "12224:9:12",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "12236:6:12",
														"nodeType": "YulTypedName",
														"src": "12236:6:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "12244:6:12",
														"nodeType": "YulTypedName",
														"src": "12244:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12252:6:12",
														"nodeType": "YulTypedName",
														"src": "12252:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12260:6:12",
														"nodeType": "YulTypedName",
														"src": "12260:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12271:4:12",
														"nodeType": "YulTypedName",
														"src": "12271:4:12",
														"type": ""
													}
												],
												"src": "12098:545:12"
											},
											{
												"body": {
													"nativeSrc": "12747:124:12",
													"nodeType": "YulBlock",
													"src": "12747:124:12",
													"statements": [
														{
															"nativeSrc": "12757:26:12",
															"nodeType": "YulAssignment",
															"src": "12757:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12769:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "12769:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12780:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12780:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12765:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12765:3:12"
																},
																"nativeSrc": "12765:18:12",
																"nodeType": "YulFunctionCall",
																"src": "12765:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12757:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "12757:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "12837:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "12837:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12850:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "12850:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12861:1:12",
																				"nodeType": "YulLiteral",
																				"src": "12861:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12846:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "12846:3:12"
																		},
																		"nativeSrc": "12846:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "12846:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "12793:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "12793:43:12"
																},
																"nativeSrc": "12793:71:12",
																"nodeType": "YulFunctionCall",
																"src": "12793:71:12"
															},
															"nativeSrc": "12793:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "12793:71:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "12649:222:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12719:9:12",
														"nodeType": "YulTypedName",
														"src": "12719:9:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12731:6:12",
														"nodeType": "YulTypedName",
														"src": "12731:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12742:4:12",
														"nodeType": "YulTypedName",
														"src": "12742:4:12",
														"type": ""
													}
												],
												"src": "12649:222:12"
											},
											{
												"body": {
													"nativeSrc": "12919:52:12",
													"nodeType": "YulBlock",
													"src": "12919:52:12",
													"statements": [
														{
															"nativeSrc": "12929:35:12",
															"nodeType": "YulAssignment",
															"src": "12929:35:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "12954:2:12",
																		"nodeType": "YulLiteral",
																		"src": "12954:2:12",
																		"type": "",
																		"value": "96"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "12958:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "12958:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "12950:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "12950:3:12"
																},
																"nativeSrc": "12950:14:12",
																"nodeType": "YulFunctionCall",
																"src": "12950:14:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "12929:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "12929:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_96",
												"nativeSrc": "12877:94:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "12900:5:12",
														"nodeType": "YulTypedName",
														"src": "12900:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "12910:8:12",
														"nodeType": "YulTypedName",
														"src": "12910:8:12",
														"type": ""
													}
												],
												"src": "12877:94:12"
											},
											{
												"body": {
													"nativeSrc": "13024:47:12",
													"nodeType": "YulBlock",
													"src": "13024:47:12",
													"statements": [
														{
															"nativeSrc": "13034:31:12",
															"nodeType": "YulAssignment",
															"src": "13034:31:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13059:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13059:5:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_96",
																	"nativeSrc": "13045:13:12",
																	"nodeType": "YulIdentifier",
																	"src": "13045:13:12"
																},
																"nativeSrc": "13045:20:12",
																"nodeType": "YulFunctionCall",
																"src": "13045:20:12"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "13034:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "13034:7:12"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint160",
												"nativeSrc": "12977:94:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13006:5:12",
														"nodeType": "YulTypedName",
														"src": "13006:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "13016:7:12",
														"nodeType": "YulTypedName",
														"src": "13016:7:12",
														"type": ""
													}
												],
												"src": "12977:94:12"
											},
											{
												"body": {
													"nativeSrc": "13124:53:12",
													"nodeType": "YulBlock",
													"src": "13124:53:12",
													"statements": [
														{
															"nativeSrc": "13134:37:12",
															"nodeType": "YulAssignment",
															"src": "13134:37:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13165:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13165:5:12"
																	}
																],
																"functionName": {
																	"name": "leftAlign_t_uint160",
																	"nativeSrc": "13145:19:12",
																	"nodeType": "YulIdentifier",
																	"src": "13145:19:12"
																},
																"nativeSrc": "13145:26:12",
																"nodeType": "YulFunctionCall",
																"src": "13145:26:12"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "13134:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "13134:7:12"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_address",
												"nativeSrc": "13077:100:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13106:5:12",
														"nodeType": "YulTypedName",
														"src": "13106:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "13116:7:12",
														"nodeType": "YulTypedName",
														"src": "13116:7:12",
														"type": ""
													}
												],
												"src": "13077:100:12"
											},
											{
												"body": {
													"nativeSrc": "13266:74:12",
													"nodeType": "YulBlock",
													"src": "13266:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13283:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13283:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13326:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "13326:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "13308:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "13308:17:12"
																				},
																				"nativeSrc": "13308:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13308:24:12"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_address",
																			"nativeSrc": "13288:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "13288:19:12"
																		},
																		"nativeSrc": "13288:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13288:45:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13276:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13276:6:12"
																},
																"nativeSrc": "13276:58:12",
																"nodeType": "YulFunctionCall",
																"src": "13276:58:12"
															},
															"nativeSrc": "13276:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "13276:58:12"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
												"nativeSrc": "13183:157:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13254:5:12",
														"nodeType": "YulTypedName",
														"src": "13254:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13261:3:12",
														"nodeType": "YulTypedName",
														"src": "13261:3:12",
														"type": ""
													}
												],
												"src": "13183:157:12"
											},
											{
												"body": {
													"nativeSrc": "13393:32:12",
													"nodeType": "YulBlock",
													"src": "13393:32:12",
													"statements": [
														{
															"nativeSrc": "13403:16:12",
															"nodeType": "YulAssignment",
															"src": "13403:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "13414:5:12",
																"nodeType": "YulIdentifier",
																"src": "13414:5:12"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "13403:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "13403:7:12"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_bytes32",
												"nativeSrc": "13346:79:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13375:5:12",
														"nodeType": "YulTypedName",
														"src": "13375:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "13385:7:12",
														"nodeType": "YulTypedName",
														"src": "13385:7:12",
														"type": ""
													}
												],
												"src": "13346:79:12"
											},
											{
												"body": {
													"nativeSrc": "13514:74:12",
													"nodeType": "YulBlock",
													"src": "13514:74:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13531:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13531:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13574:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "13574:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes32",
																					"nativeSrc": "13556:17:12",
																					"nodeType": "YulIdentifier",
																					"src": "13556:17:12"
																				},
																				"nativeSrc": "13556:24:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13556:24:12"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_bytes32",
																			"nativeSrc": "13536:19:12",
																			"nodeType": "YulIdentifier",
																			"src": "13536:19:12"
																		},
																		"nativeSrc": "13536:45:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13536:45:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13524:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13524:6:12"
																},
																"nativeSrc": "13524:58:12",
																"nodeType": "YulFunctionCall",
																"src": "13524:58:12"
															},
															"nativeSrc": "13524:58:12",
															"nodeType": "YulExpressionStatement",
															"src": "13524:58:12"
														}
													]
												},
												"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
												"nativeSrc": "13431:157:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13502:5:12",
														"nodeType": "YulTypedName",
														"src": "13502:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13509:3:12",
														"nodeType": "YulTypedName",
														"src": "13509:3:12",
														"type": ""
													}
												],
												"src": "13431:157:12"
											},
											{
												"body": {
													"nativeSrc": "13637:53:12",
													"nodeType": "YulBlock",
													"src": "13637:53:12",
													"statements": [
														{
															"nativeSrc": "13647:36:12",
															"nodeType": "YulAssignment",
															"src": "13647:36:12",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "13672:3:12",
																		"nodeType": "YulLiteral",
																		"src": "13672:3:12",
																		"type": "",
																		"value": "192"
																	},
																	{
																		"name": "value",
																		"nativeSrc": "13677:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13677:5:12"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "13668:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "13668:3:12"
																},
																"nativeSrc": "13668:15:12",
																"nodeType": "YulFunctionCall",
																"src": "13668:15:12"
															},
															"variableNames": [
																{
																	"name": "newValue",
																	"nativeSrc": "13647:8:12",
																	"nodeType": "YulIdentifier",
																	"src": "13647:8:12"
																}
															]
														}
													]
												},
												"name": "shift_left_192",
												"nativeSrc": "13594:96:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13618:5:12",
														"nodeType": "YulTypedName",
														"src": "13618:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "newValue",
														"nativeSrc": "13628:8:12",
														"nodeType": "YulTypedName",
														"src": "13628:8:12",
														"type": ""
													}
												],
												"src": "13594:96:12"
											},
											{
												"body": {
													"nativeSrc": "13742:48:12",
													"nodeType": "YulBlock",
													"src": "13742:48:12",
													"statements": [
														{
															"nativeSrc": "13752:32:12",
															"nodeType": "YulAssignment",
															"src": "13752:32:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "13778:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "13778:5:12"
																	}
																],
																"functionName": {
																	"name": "shift_left_192",
																	"nativeSrc": "13763:14:12",
																	"nodeType": "YulIdentifier",
																	"src": "13763:14:12"
																},
																"nativeSrc": "13763:21:12",
																"nodeType": "YulFunctionCall",
																"src": "13763:21:12"
															},
															"variableNames": [
																{
																	"name": "aligned",
																	"nativeSrc": "13752:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "13752:7:12"
																}
															]
														}
													]
												},
												"name": "leftAlign_t_uint64",
												"nativeSrc": "13696:94:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13724:5:12",
														"nodeType": "YulTypedName",
														"src": "13724:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "aligned",
														"nativeSrc": "13734:7:12",
														"nodeType": "YulTypedName",
														"src": "13734:7:12",
														"type": ""
													}
												],
												"src": "13696:94:12"
											},
											{
												"body": {
													"nativeSrc": "13877:72:12",
													"nodeType": "YulBlock",
													"src": "13877:72:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13894:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "13894:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "13935:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "13935:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint64",
																					"nativeSrc": "13918:16:12",
																					"nodeType": "YulIdentifier",
																					"src": "13918:16:12"
																				},
																				"nativeSrc": "13918:23:12",
																				"nodeType": "YulFunctionCall",
																				"src": "13918:23:12"
																			}
																		],
																		"functionName": {
																			"name": "leftAlign_t_uint64",
																			"nativeSrc": "13899:18:12",
																			"nodeType": "YulIdentifier",
																			"src": "13899:18:12"
																		},
																		"nativeSrc": "13899:43:12",
																		"nodeType": "YulFunctionCall",
																		"src": "13899:43:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13887:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "13887:6:12"
																},
																"nativeSrc": "13887:56:12",
																"nodeType": "YulFunctionCall",
																"src": "13887:56:12"
															},
															"nativeSrc": "13887:56:12",
															"nodeType": "YulExpressionStatement",
															"src": "13887:56:12"
														}
													]
												},
												"name": "abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack",
												"nativeSrc": "13796:153:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "13865:5:12",
														"nodeType": "YulTypedName",
														"src": "13865:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "13872:3:12",
														"nodeType": "YulTypedName",
														"src": "13872:3:12",
														"type": ""
													}
												],
												"src": "13796:153:12"
											},
											{
												"body": {
													"nativeSrc": "14125:363:12",
													"nodeType": "YulBlock",
													"src": "14125:363:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "14198:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14198:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14207:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14207:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack",
																	"nativeSrc": "14136:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "14136:61:12"
																},
																"nativeSrc": "14136:75:12",
																"nodeType": "YulFunctionCall",
																"src": "14136:75:12"
															},
															"nativeSrc": "14136:75:12",
															"nodeType": "YulExpressionStatement",
															"src": "14136:75:12"
														},
														{
															"nativeSrc": "14220:19:12",
															"nodeType": "YulAssignment",
															"src": "14220:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14231:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14231:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14236:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14236:2:12",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14227:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14227:3:12"
																},
																"nativeSrc": "14227:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14227:12:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14220:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14220:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14311:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14311:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14320:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14320:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack",
																	"nativeSrc": "14249:61:12",
																	"nodeType": "YulIdentifier",
																	"src": "14249:61:12"
																},
																"nativeSrc": "14249:75:12",
																"nodeType": "YulFunctionCall",
																"src": "14249:75:12"
															},
															"nativeSrc": "14249:75:12",
															"nodeType": "YulExpressionStatement",
															"src": "14249:75:12"
														},
														{
															"nativeSrc": "14333:19:12",
															"nodeType": "YulAssignment",
															"src": "14333:19:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14344:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14344:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14349:2:12",
																		"nodeType": "YulLiteral",
																		"src": "14349:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14340:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14340:3:12"
																},
																"nativeSrc": "14340:12:12",
																"nodeType": "YulFunctionCall",
																"src": "14340:12:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14333:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14333:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "14422:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "14422:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "14431:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14431:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack",
																	"nativeSrc": "14362:59:12",
																	"nodeType": "YulIdentifier",
																	"src": "14362:59:12"
																},
																"nativeSrc": "14362:73:12",
																"nodeType": "YulFunctionCall",
																"src": "14362:73:12"
															},
															"nativeSrc": "14362:73:12",
															"nodeType": "YulExpressionStatement",
															"src": "14362:73:12"
														},
														{
															"nativeSrc": "14444:18:12",
															"nodeType": "YulAssignment",
															"src": "14444:18:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "14455:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "14455:3:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14460:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14460:1:12",
																		"type": "",
																		"value": "8"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14451:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14451:3:12"
																},
																"nativeSrc": "14451:11:12",
																"nodeType": "YulFunctionCall",
																"src": "14451:11:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "14444:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14444:3:12"
																}
															]
														},
														{
															"nativeSrc": "14472:10:12",
															"nodeType": "YulAssignment",
															"src": "14472:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "14479:3:12",
																"nodeType": "YulIdentifier",
																"src": "14479:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "14472:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14472:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_address_t_bytes32_t_uint64__to_t_address_t_bytes32_t_uint64__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13955:533:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "14088:3:12",
														"nodeType": "YulTypedName",
														"src": "14088:3:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "14094:6:12",
														"nodeType": "YulTypedName",
														"src": "14094:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14102:6:12",
														"nodeType": "YulTypedName",
														"src": "14102:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14110:6:12",
														"nodeType": "YulTypedName",
														"src": "14110:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "14121:3:12",
														"nodeType": "YulTypedName",
														"src": "14121:3:12",
														"type": ""
													}
												],
												"src": "13955:533:12"
											},
											{
												"body": {
													"nativeSrc": "14522:152:12",
													"nodeType": "YulBlock",
													"src": "14522:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14539:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14539:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14542:77:12",
																		"nodeType": "YulLiteral",
																		"src": "14542:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14532:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14532:6:12"
																},
																"nativeSrc": "14532:88:12",
																"nodeType": "YulFunctionCall",
																"src": "14532:88:12"
															},
															"nativeSrc": "14532:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "14532:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14636:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14636:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14639:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14639:4:12",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14629:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14629:6:12"
																},
																"nativeSrc": "14629:15:12",
																"nodeType": "YulFunctionCall",
																"src": "14629:15:12"
															},
															"nativeSrc": "14629:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "14629:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "14660:1:12",
																		"nodeType": "YulLiteral",
																		"src": "14660:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14663:4:12",
																		"nodeType": "YulLiteral",
																		"src": "14663:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "14653:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "14653:6:12"
																},
																"nativeSrc": "14653:15:12",
																"nodeType": "YulFunctionCall",
																"src": "14653:15:12"
															},
															"nativeSrc": "14653:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "14653:15:12"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "14494:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "14494:180:12"
											},
											{
												"body": {
													"nativeSrc": "14725:149:12",
													"nodeType": "YulBlock",
													"src": "14725:149:12",
													"statements": [
														{
															"nativeSrc": "14735:25:12",
															"nodeType": "YulAssignment",
															"src": "14735:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14758:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14758:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14740:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "14740:17:12"
																},
																"nativeSrc": "14740:20:12",
																"nodeType": "YulFunctionCall",
																"src": "14740:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "14735:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "14735:1:12"
																}
															]
														},
														{
															"nativeSrc": "14769:25:12",
															"nodeType": "YulAssignment",
															"src": "14769:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "14792:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14792:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "14774:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "14774:17:12"
																},
																"nativeSrc": "14774:20:12",
																"nodeType": "YulFunctionCall",
																"src": "14774:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "14769:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "14769:1:12"
																}
															]
														},
														{
															"nativeSrc": "14803:17:12",
															"nodeType": "YulAssignment",
															"src": "14803:17:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "14815:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14815:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "14818:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14818:1:12"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "14811:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "14811:3:12"
																},
																"nativeSrc": "14811:9:12",
																"nodeType": "YulFunctionCall",
																"src": "14811:9:12"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "14803:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "14803:4:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "14845:22:12",
																"nodeType": "YulBlock",
																"src": "14845:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14847:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "14847:16:12"
																			},
																			"nativeSrc": "14847:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "14847:18:12"
																		},
																		"nativeSrc": "14847:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "14847:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "14836:4:12",
																		"nodeType": "YulIdentifier",
																		"src": "14836:4:12"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "14842:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "14842:1:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "14833:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "14833:2:12"
																},
																"nativeSrc": "14833:11:12",
																"nodeType": "YulFunctionCall",
																"src": "14833:11:12"
															},
															"nativeSrc": "14830:37:12",
															"nodeType": "YulIf",
															"src": "14830:37:12"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "14680:194:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "14711:1:12",
														"nodeType": "YulTypedName",
														"src": "14711:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "14714:1:12",
														"nodeType": "YulTypedName",
														"src": "14714:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "14720:4:12",
														"nodeType": "YulTypedName",
														"src": "14720:4:12",
														"type": ""
													}
												],
												"src": "14680:194:12"
											},
											{
												"body": {
													"nativeSrc": "15006:206:12",
													"nodeType": "YulBlock",
													"src": "15006:206:12",
													"statements": [
														{
															"nativeSrc": "15016:26:12",
															"nodeType": "YulAssignment",
															"src": "15016:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15028:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15028:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15039:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15039:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15024:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15024:3:12"
																},
																"nativeSrc": "15024:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15024:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15016:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15016:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15096:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15096:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15109:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15109:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15120:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15120:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15105:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15105:3:12"
																		},
																		"nativeSrc": "15105:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15105:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15052:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15052:43:12"
																},
																"nativeSrc": "15052:71:12",
																"nodeType": "YulFunctionCall",
																"src": "15052:71:12"
															},
															"nativeSrc": "15052:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "15052:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15177:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15177:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15190:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15190:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15201:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15201:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15186:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15186:3:12"
																		},
																		"nativeSrc": "15186:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15186:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "15133:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15133:43:12"
																},
																"nativeSrc": "15133:72:12",
																"nodeType": "YulFunctionCall",
																"src": "15133:72:12"
															},
															"nativeSrc": "15133:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "15133:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "14880:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14970:9:12",
														"nodeType": "YulTypedName",
														"src": "14970:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14982:6:12",
														"nodeType": "YulTypedName",
														"src": "14982:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14990:6:12",
														"nodeType": "YulTypedName",
														"src": "14990:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15001:4:12",
														"nodeType": "YulTypedName",
														"src": "15001:4:12",
														"type": ""
													}
												],
												"src": "14880:332:12"
											},
											{
												"body": {
													"nativeSrc": "15342:204:12",
													"nodeType": "YulBlock",
													"src": "15342:204:12",
													"statements": [
														{
															"nativeSrc": "15352:26:12",
															"nodeType": "YulAssignment",
															"src": "15352:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15364:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "15364:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15375:2:12",
																		"nodeType": "YulLiteral",
																		"src": "15375:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15360:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15360:3:12"
																},
																"nativeSrc": "15360:18:12",
																"nodeType": "YulFunctionCall",
																"src": "15360:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15352:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "15352:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15430:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15430:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15443:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15443:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15454:1:12",
																				"nodeType": "YulLiteral",
																				"src": "15454:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15439:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15439:3:12"
																		},
																		"nativeSrc": "15439:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15439:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint16_to_t_uint16_fromStack",
																	"nativeSrc": "15388:41:12",
																	"nodeType": "YulIdentifier",
																	"src": "15388:41:12"
																},
																"nativeSrc": "15388:69:12",
																"nodeType": "YulFunctionCall",
																"src": "15388:69:12"
															},
															"nativeSrc": "15388:69:12",
															"nodeType": "YulExpressionStatement",
															"src": "15388:69:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "15511:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "15511:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15524:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "15524:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15535:2:12",
																				"nodeType": "YulLiteral",
																				"src": "15535:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15520:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "15520:3:12"
																		},
																		"nativeSrc": "15520:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15520:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "15467:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "15467:43:12"
																},
																"nativeSrc": "15467:72:12",
																"nodeType": "YulFunctionCall",
																"src": "15467:72:12"
															},
															"nativeSrc": "15467:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "15467:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint16_t_address__to_t_uint16_t_address__fromStack_reversed",
												"nativeSrc": "15218:328:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15306:9:12",
														"nodeType": "YulTypedName",
														"src": "15306:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "15318:6:12",
														"nodeType": "YulTypedName",
														"src": "15318:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15326:6:12",
														"nodeType": "YulTypedName",
														"src": "15326:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15337:4:12",
														"nodeType": "YulTypedName",
														"src": "15337:4:12",
														"type": ""
													}
												],
												"src": "15218:328:12"
											},
											{
												"body": {
													"nativeSrc": "15596:147:12",
													"nodeType": "YulBlock",
													"src": "15596:147:12",
													"statements": [
														{
															"nativeSrc": "15606:25:12",
															"nodeType": "YulAssignment",
															"src": "15606:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15629:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15629:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15611:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15611:17:12"
																},
																"nativeSrc": "15611:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15611:20:12"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nativeSrc": "15606:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15606:1:12"
																}
															]
														},
														{
															"nativeSrc": "15640:25:12",
															"nodeType": "YulAssignment",
															"src": "15640:25:12",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "15663:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15663:1:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nativeSrc": "15645:17:12",
																	"nodeType": "YulIdentifier",
																	"src": "15645:17:12"
																},
																"nativeSrc": "15645:20:12",
																"nodeType": "YulFunctionCall",
																"src": "15645:20:12"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nativeSrc": "15640:1:12",
																	"nodeType": "YulIdentifier",
																	"src": "15640:1:12"
																}
															]
														},
														{
															"nativeSrc": "15674:16:12",
															"nodeType": "YulAssignment",
															"src": "15674:16:12",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15685:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15685:1:12"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15688:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15688:1:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15681:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15681:3:12"
																},
																"nativeSrc": "15681:9:12",
																"nodeType": "YulFunctionCall",
																"src": "15681:9:12"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "15674:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "15674:3:12"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15714:22:12",
																"nodeType": "YulBlock",
																"src": "15714:22:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15716:16:12",
																				"nodeType": "YulIdentifier",
																				"src": "15716:16:12"
																			},
																			"nativeSrc": "15716:18:12",
																			"nodeType": "YulFunctionCall",
																			"src": "15716:18:12"
																		},
																		"nativeSrc": "15716:18:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "15716:18:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15706:1:12",
																		"nodeType": "YulIdentifier",
																		"src": "15706:1:12"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "15709:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "15709:3:12"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15703:2:12",
																	"nodeType": "YulIdentifier",
																	"src": "15703:2:12"
																},
																"nativeSrc": "15703:10:12",
																"nodeType": "YulFunctionCall",
																"src": "15703:10:12"
															},
															"nativeSrc": "15700:36:12",
															"nodeType": "YulIf",
															"src": "15700:36:12"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "15552:191:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15583:1:12",
														"nodeType": "YulTypedName",
														"src": "15583:1:12",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15586:1:12",
														"nodeType": "YulTypedName",
														"src": "15586:1:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "15592:3:12",
														"nodeType": "YulTypedName",
														"src": "15592:3:12",
														"type": ""
													}
												],
												"src": "15552:191:12"
											},
											{
												"body": {
													"nativeSrc": "15803:32:12",
													"nodeType": "YulBlock",
													"src": "15803:32:12",
													"statements": [
														{
															"nativeSrc": "15813:16:12",
															"nodeType": "YulAssignment",
															"src": "15813:16:12",
															"value": {
																"name": "value",
																"nativeSrc": "15824:5:12",
																"nodeType": "YulIdentifier",
																"src": "15824:5:12"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "15813:7:12",
																	"nodeType": "YulIdentifier",
																	"src": "15813:7:12"
																}
															]
														}
													]
												},
												"name": "cleanup_t_rational_96_by_1",
												"nativeSrc": "15749:86:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15785:5:12",
														"nodeType": "YulTypedName",
														"src": "15785:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "15795:7:12",
														"nodeType": "YulTypedName",
														"src": "15795:7:12",
														"type": ""
													}
												],
												"src": "15749:86:12"
											},
											{
												"body": {
													"nativeSrc": "15908:89:12",
													"nodeType": "YulBlock",
													"src": "15908:89:12",
													"statements": [
														{
															"nativeSrc": "15918:73:12",
															"nodeType": "YulAssignment",
															"src": "15918:73:12",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "15983:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "15983:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_rational_96_by_1",
																					"nativeSrc": "15956:26:12",
																					"nodeType": "YulIdentifier",
																					"src": "15956:26:12"
																				},
																				"nativeSrc": "15956:33:12",
																				"nodeType": "YulFunctionCall",
																				"src": "15956:33:12"
																			}
																		],
																		"functionName": {
																			"name": "identity",
																			"nativeSrc": "15947:8:12",
																			"nodeType": "YulIdentifier",
																			"src": "15947:8:12"
																		},
																		"nativeSrc": "15947:43:12",
																		"nodeType": "YulFunctionCall",
																		"src": "15947:43:12"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint8",
																	"nativeSrc": "15931:15:12",
																	"nodeType": "YulIdentifier",
																	"src": "15931:15:12"
																},
																"nativeSrc": "15931:60:12",
																"nodeType": "YulFunctionCall",
																"src": "15931:60:12"
															},
															"variableNames": [
																{
																	"name": "converted",
																	"nativeSrc": "15918:9:12",
																	"nodeType": "YulIdentifier",
																	"src": "15918:9:12"
																}
															]
														}
													]
												},
												"name": "convert_t_rational_96_by_1_to_t_uint8",
												"nativeSrc": "15841:156:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "15888:5:12",
														"nodeType": "YulTypedName",
														"src": "15888:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "converted",
														"nativeSrc": "15898:9:12",
														"nodeType": "YulTypedName",
														"src": "15898:9:12",
														"type": ""
													}
												],
												"src": "15841:156:12"
											},
											{
												"body": {
													"nativeSrc": "16075:73:12",
													"nodeType": "YulBlock",
													"src": "16075:73:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "16092:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "16092:3:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "16135:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "16135:5:12"
																			}
																		],
																		"functionName": {
																			"name": "convert_t_rational_96_by_1_to_t_uint8",
																			"nativeSrc": "16097:37:12",
																			"nodeType": "YulIdentifier",
																			"src": "16097:37:12"
																		},
																		"nativeSrc": "16097:44:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16097:44:12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16085:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "16085:6:12"
																},
																"nativeSrc": "16085:57:12",
																"nodeType": "YulFunctionCall",
																"src": "16085:57:12"
															},
															"nativeSrc": "16085:57:12",
															"nodeType": "YulExpressionStatement",
															"src": "16085:57:12"
														}
													]
												},
												"name": "abi_encode_t_rational_96_by_1_to_t_uint8_fromStack",
												"nativeSrc": "16003:145:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "16063:5:12",
														"nodeType": "YulTypedName",
														"src": "16063:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "16070:3:12",
														"nodeType": "YulTypedName",
														"src": "16070:3:12",
														"type": ""
													}
												],
												"src": "16003:145:12"
											},
											{
												"body": {
													"nativeSrc": "16287:213:12",
													"nodeType": "YulBlock",
													"src": "16287:213:12",
													"statements": [
														{
															"nativeSrc": "16297:26:12",
															"nodeType": "YulAssignment",
															"src": "16297:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16309:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16309:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16320:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16320:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16305:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16305:3:12"
																},
																"nativeSrc": "16305:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16305:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16297:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16297:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16384:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16384:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16397:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16397:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16408:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16408:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16393:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16393:3:12"
																		},
																		"nativeSrc": "16393:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16393:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_rational_96_by_1_to_t_uint8_fromStack",
																	"nativeSrc": "16333:50:12",
																	"nodeType": "YulIdentifier",
																	"src": "16333:50:12"
																},
																"nativeSrc": "16333:78:12",
																"nodeType": "YulFunctionCall",
																"src": "16333:78:12"
															},
															"nativeSrc": "16333:78:12",
															"nodeType": "YulExpressionStatement",
															"src": "16333:78:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16465:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16465:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16478:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16478:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16489:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16489:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16474:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16474:3:12"
																		},
																		"nativeSrc": "16474:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16474:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16421:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16421:43:12"
																},
																"nativeSrc": "16421:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16421:72:12"
															},
															"nativeSrc": "16421:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16421:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_96_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed",
												"nativeSrc": "16154:346:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16251:9:12",
														"nodeType": "YulTypedName",
														"src": "16251:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16263:6:12",
														"nodeType": "YulTypedName",
														"src": "16263:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16271:6:12",
														"nodeType": "YulTypedName",
														"src": "16271:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16282:4:12",
														"nodeType": "YulTypedName",
														"src": "16282:4:12",
														"type": ""
													}
												],
												"src": "16154:346:12"
											},
											{
												"body": {
													"nativeSrc": "16660:288:12",
													"nodeType": "YulBlock",
													"src": "16660:288:12",
													"statements": [
														{
															"nativeSrc": "16670:26:12",
															"nodeType": "YulAssignment",
															"src": "16670:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16682:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "16682:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16693:2:12",
																		"nodeType": "YulLiteral",
																		"src": "16693:2:12",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16678:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "16678:3:12"
																},
																"nativeSrc": "16678:18:12",
																"nodeType": "YulFunctionCall",
																"src": "16678:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16670:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "16670:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "16750:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16750:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16763:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16763:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16774:1:12",
																				"nodeType": "YulLiteral",
																				"src": "16774:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16759:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16759:3:12"
																		},
																		"nativeSrc": "16759:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16759:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16706:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16706:43:12"
																},
																"nativeSrc": "16706:71:12",
																"nodeType": "YulFunctionCall",
																"src": "16706:71:12"
															},
															"nativeSrc": "16706:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "16706:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "16831:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16831:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16844:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16844:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16855:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16855:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16840:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16840:3:12"
																		},
																		"nativeSrc": "16840:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16840:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "16787:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16787:43:12"
																},
																"nativeSrc": "16787:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16787:72:12"
															},
															"nativeSrc": "16787:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16787:72:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "16913:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "16913:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16926:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "16926:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16937:2:12",
																				"nodeType": "YulLiteral",
																				"src": "16937:2:12",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16922:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "16922:3:12"
																		},
																		"nativeSrc": "16922:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "16922:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "16869:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "16869:43:12"
																},
																"nativeSrc": "16869:72:12",
																"nodeType": "YulFunctionCall",
																"src": "16869:72:12"
															},
															"nativeSrc": "16869:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "16869:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16506:442:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16616:9:12",
														"nodeType": "YulTypedName",
														"src": "16616:9:12",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "16628:6:12",
														"nodeType": "YulTypedName",
														"src": "16628:6:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16636:6:12",
														"nodeType": "YulTypedName",
														"src": "16636:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16644:6:12",
														"nodeType": "YulTypedName",
														"src": "16644:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16655:4:12",
														"nodeType": "YulTypedName",
														"src": "16655:4:12",
														"type": ""
													}
												],
												"src": "16506:442:12"
											},
											{
												"body": {
													"nativeSrc": "17080:206:12",
													"nodeType": "YulBlock",
													"src": "17080:206:12",
													"statements": [
														{
															"nativeSrc": "17090:26:12",
															"nodeType": "YulAssignment",
															"src": "17090:26:12",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17102:9:12",
																		"nodeType": "YulIdentifier",
																		"src": "17102:9:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17113:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17113:2:12",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17098:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17098:3:12"
																},
																"nativeSrc": "17098:18:12",
																"nodeType": "YulFunctionCall",
																"src": "17098:18:12"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17090:4:12",
																	"nodeType": "YulIdentifier",
																	"src": "17090:4:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "17170:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17170:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17183:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17183:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17194:1:12",
																				"nodeType": "YulLiteral",
																				"src": "17194:1:12",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17179:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17179:3:12"
																		},
																		"nativeSrc": "17179:17:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17179:17:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "17126:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17126:43:12"
																},
																"nativeSrc": "17126:71:12",
																"nodeType": "YulFunctionCall",
																"src": "17126:71:12"
															},
															"nativeSrc": "17126:71:12",
															"nodeType": "YulExpressionStatement",
															"src": "17126:71:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "17251:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17251:6:12"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17264:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17264:9:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17275:2:12",
																				"nodeType": "YulLiteral",
																				"src": "17275:2:12",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17260:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17260:3:12"
																		},
																		"nativeSrc": "17260:18:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17260:18:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "17207:43:12",
																	"nodeType": "YulIdentifier",
																	"src": "17207:43:12"
																},
																"nativeSrc": "17207:72:12",
																"nodeType": "YulFunctionCall",
																"src": "17207:72:12"
															},
															"nativeSrc": "17207:72:12",
															"nodeType": "YulExpressionStatement",
															"src": "17207:72:12"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "16954:332:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17044:9:12",
														"nodeType": "YulTypedName",
														"src": "17044:9:12",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17056:6:12",
														"nodeType": "YulTypedName",
														"src": "17056:6:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17064:6:12",
														"nodeType": "YulTypedName",
														"src": "17064:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17075:4:12",
														"nodeType": "YulTypedName",
														"src": "17075:4:12",
														"type": ""
													}
												],
												"src": "16954:332:12"
											},
											{
												"body": {
													"nativeSrc": "17320:152:12",
													"nodeType": "YulBlock",
													"src": "17320:152:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17337:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17337:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17340:77:12",
																		"nodeType": "YulLiteral",
																		"src": "17340:77:12",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17330:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17330:6:12"
																},
																"nativeSrc": "17330:88:12",
																"nodeType": "YulFunctionCall",
																"src": "17330:88:12"
															},
															"nativeSrc": "17330:88:12",
															"nodeType": "YulExpressionStatement",
															"src": "17330:88:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17434:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17434:1:12",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17437:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17437:4:12",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17427:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17427:6:12"
																},
																"nativeSrc": "17427:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17427:15:12"
															},
															"nativeSrc": "17427:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17427:15:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "17458:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17458:1:12",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17461:4:12",
																		"nodeType": "YulLiteral",
																		"src": "17461:4:12",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "17451:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17451:6:12"
																},
																"nativeSrc": "17451:15:12",
																"nodeType": "YulFunctionCall",
																"src": "17451:15:12"
															},
															"nativeSrc": "17451:15:12",
															"nodeType": "YulExpressionStatement",
															"src": "17451:15:12"
														}
													]
												},
												"name": "panic_error_0x12",
												"nativeSrc": "17292:180:12",
												"nodeType": "YulFunctionDefinition",
												"src": "17292:180:12"
											},
											{
												"body": {
													"nativeSrc": "17518:76:12",
													"nodeType": "YulBlock",
													"src": "17518:76:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "17572:16:12",
																"nodeType": "YulBlock",
																"src": "17572:16:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17581:1:12",
																					"nodeType": "YulLiteral",
																					"src": "17581:1:12",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17584:1:12",
																					"nodeType": "YulLiteral",
																					"src": "17584:1:12",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17574:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "17574:6:12"
																			},
																			"nativeSrc": "17574:12:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17574:12:12"
																		},
																		"nativeSrc": "17574:12:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17574:12:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "17541:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "17541:5:12"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "17563:5:12",
																						"nodeType": "YulIdentifier",
																						"src": "17563:5:12"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "17548:14:12",
																					"nodeType": "YulIdentifier",
																					"src": "17548:14:12"
																				},
																				"nativeSrc": "17548:21:12",
																				"nodeType": "YulFunctionCall",
																				"src": "17548:21:12"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "17538:2:12",
																			"nodeType": "YulIdentifier",
																			"src": "17538:2:12"
																		},
																		"nativeSrc": "17538:32:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17538:32:12"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "17531:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "17531:6:12"
																},
																"nativeSrc": "17531:40:12",
																"nodeType": "YulFunctionCall",
																"src": "17531:40:12"
															},
															"nativeSrc": "17528:60:12",
															"nodeType": "YulIf",
															"src": "17528:60:12"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "17478:116:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "17511:5:12",
														"nodeType": "YulTypedName",
														"src": "17511:5:12",
														"type": ""
													}
												],
												"src": "17478:116:12"
											},
											{
												"body": {
													"nativeSrc": "17660:77:12",
													"nodeType": "YulBlock",
													"src": "17660:77:12",
													"statements": [
														{
															"nativeSrc": "17670:22:12",
															"nodeType": "YulAssignment",
															"src": "17670:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "17685:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "17685:6:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17679:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "17679:5:12"
																},
																"nativeSrc": "17679:13:12",
																"nodeType": "YulFunctionCall",
																"src": "17679:13:12"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "17670:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "17670:5:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "17725:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "17725:5:12"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "17701:23:12",
																	"nodeType": "YulIdentifier",
																	"src": "17701:23:12"
																},
																"nativeSrc": "17701:30:12",
																"nodeType": "YulFunctionCall",
																"src": "17701:30:12"
															},
															"nativeSrc": "17701:30:12",
															"nodeType": "YulExpressionStatement",
															"src": "17701:30:12"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "17600:137:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "17638:6:12",
														"nodeType": "YulTypedName",
														"src": "17638:6:12",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "17646:3:12",
														"nodeType": "YulTypedName",
														"src": "17646:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "17654:5:12",
														"nodeType": "YulTypedName",
														"src": "17654:5:12",
														"type": ""
													}
												],
												"src": "17600:137:12"
											},
											{
												"body": {
													"nativeSrc": "17817:271:12",
													"nodeType": "YulBlock",
													"src": "17817:271:12",
													"statements": [
														{
															"body": {
																"nativeSrc": "17863:83:12",
																"nodeType": "YulBlock",
																"src": "17863:83:12",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "17865:77:12",
																				"nodeType": "YulIdentifier",
																				"src": "17865:77:12"
																			},
																			"nativeSrc": "17865:79:12",
																			"nodeType": "YulFunctionCall",
																			"src": "17865:79:12"
																		},
																		"nativeSrc": "17865:79:12",
																		"nodeType": "YulExpressionStatement",
																		"src": "17865:79:12"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17838:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "17838:7:12"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17847:9:12",
																				"nodeType": "YulIdentifier",
																				"src": "17847:9:12"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17834:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "17834:3:12"
																		},
																		"nativeSrc": "17834:23:12",
																		"nodeType": "YulFunctionCall",
																		"src": "17834:23:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17859:2:12",
																		"nodeType": "YulLiteral",
																		"src": "17859:2:12",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17830:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "17830:3:12"
																},
																"nativeSrc": "17830:32:12",
																"nodeType": "YulFunctionCall",
																"src": "17830:32:12"
															},
															"nativeSrc": "17827:119:12",
															"nodeType": "YulIf",
															"src": "17827:119:12"
														},
														{
															"nativeSrc": "17956:125:12",
															"nodeType": "YulBlock",
															"src": "17956:125:12",
															"statements": [
																{
																	"nativeSrc": "17971:15:12",
																	"nodeType": "YulVariableDeclaration",
																	"src": "17971:15:12",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "17985:1:12",
																		"nodeType": "YulLiteral",
																		"src": "17985:1:12",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "17975:6:12",
																			"nodeType": "YulTypedName",
																			"src": "17975:6:12",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "18000:71:12",
																	"nodeType": "YulAssignment",
																	"src": "18000:71:12",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "18043:9:12",
																						"nodeType": "YulIdentifier",
																						"src": "18043:9:12"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "18054:6:12",
																						"nodeType": "YulIdentifier",
																						"src": "18054:6:12"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "18039:3:12",
																					"nodeType": "YulIdentifier",
																					"src": "18039:3:12"
																				},
																				"nativeSrc": "18039:22:12",
																				"nodeType": "YulFunctionCall",
																				"src": "18039:22:12"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "18063:7:12",
																				"nodeType": "YulIdentifier",
																				"src": "18063:7:12"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "18010:28:12",
																			"nodeType": "YulIdentifier",
																			"src": "18010:28:12"
																		},
																		"nativeSrc": "18010:61:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18010:61:12"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "18000:6:12",
																			"nodeType": "YulIdentifier",
																			"src": "18000:6:12"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "17743:345:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17787:9:12",
														"nodeType": "YulTypedName",
														"src": "17787:9:12",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17798:7:12",
														"nodeType": "YulTypedName",
														"src": "17798:7:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17810:6:12",
														"nodeType": "YulTypedName",
														"src": "17810:6:12",
														"type": ""
													}
												],
												"src": "17743:345:12"
											},
											{
												"body": {
													"nativeSrc": "18152:40:12",
													"nodeType": "YulBlock",
													"src": "18152:40:12",
													"statements": [
														{
															"nativeSrc": "18163:22:12",
															"nodeType": "YulAssignment",
															"src": "18163:22:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18179:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "18179:5:12"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "18173:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "18173:5:12"
																},
																"nativeSrc": "18173:12:12",
																"nodeType": "YulFunctionCall",
																"src": "18173:12:12"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "18163:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18163:6:12"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "18094:98:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18135:5:12",
														"nodeType": "YulTypedName",
														"src": "18135:5:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "18145:6:12",
														"nodeType": "YulTypedName",
														"src": "18145:6:12",
														"type": ""
													}
												],
												"src": "18094:98:12"
											},
											{
												"body": {
													"nativeSrc": "18311:34:12",
													"nodeType": "YulBlock",
													"src": "18311:34:12",
													"statements": [
														{
															"nativeSrc": "18321:18:12",
															"nodeType": "YulAssignment",
															"src": "18321:18:12",
															"value": {
																"name": "pos",
																"nativeSrc": "18336:3:12",
																"nodeType": "YulIdentifier",
																"src": "18336:3:12"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "18321:11:12",
																	"nodeType": "YulIdentifier",
																	"src": "18321:11:12"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18198:147:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18283:3:12",
														"nodeType": "YulTypedName",
														"src": "18283:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18288:6:12",
														"nodeType": "YulTypedName",
														"src": "18288:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "18299:11:12",
														"nodeType": "YulTypedName",
														"src": "18299:11:12",
														"type": ""
													}
												],
												"src": "18198:147:12"
											},
											{
												"body": {
													"nativeSrc": "18413:77:12",
													"nodeType": "YulBlock",
													"src": "18413:77:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "18430:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18430:3:12"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "18435:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18435:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18440:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18440:6:12"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "18424:5:12",
																	"nodeType": "YulIdentifier",
																	"src": "18424:5:12"
																},
																"nativeSrc": "18424:23:12",
																"nodeType": "YulFunctionCall",
																"src": "18424:23:12"
															},
															"nativeSrc": "18424:23:12",
															"nodeType": "YulExpressionStatement",
															"src": "18424:23:12"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "18467:3:12",
																				"nodeType": "YulIdentifier",
																				"src": "18467:3:12"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "18472:6:12",
																				"nodeType": "YulIdentifier",
																				"src": "18472:6:12"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18463:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18463:3:12"
																		},
																		"nativeSrc": "18463:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18463:16:12"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "18481:1:12",
																		"nodeType": "YulLiteral",
																		"src": "18481:1:12",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "18456:6:12",
																	"nodeType": "YulIdentifier",
																	"src": "18456:6:12"
																},
																"nativeSrc": "18456:27:12",
																"nodeType": "YulFunctionCall",
																"src": "18456:27:12"
															},
															"nativeSrc": "18456:27:12",
															"nodeType": "YulExpressionStatement",
															"src": "18456:27:12"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "18351:139:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "18395:3:12",
														"nodeType": "YulTypedName",
														"src": "18395:3:12",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "18400:3:12",
														"nodeType": "YulTypedName",
														"src": "18400:3:12",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "18405:6:12",
														"nodeType": "YulTypedName",
														"src": "18405:6:12",
														"type": ""
													}
												],
												"src": "18351:139:12"
											},
											{
												"body": {
													"nativeSrc": "18604:278:12",
													"nodeType": "YulBlock",
													"src": "18604:278:12",
													"statements": [
														{
															"nativeSrc": "18614:52:12",
															"nodeType": "YulVariableDeclaration",
															"src": "18614:52:12",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "18660:5:12",
																		"nodeType": "YulIdentifier",
																		"src": "18660:5:12"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "18628:31:12",
																	"nodeType": "YulIdentifier",
																	"src": "18628:31:12"
																},
																"nativeSrc": "18628:38:12",
																"nodeType": "YulFunctionCall",
																"src": "18628:38:12"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "18618:6:12",
																	"nodeType": "YulTypedName",
																	"src": "18618:6:12",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "18675:95:12",
															"nodeType": "YulAssignment",
															"src": "18675:95:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18758:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18758:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18763:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18763:6:12"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "18682:75:12",
																	"nodeType": "YulIdentifier",
																	"src": "18682:75:12"
																},
																"nativeSrc": "18682:88:12",
																"nodeType": "YulFunctionCall",
																"src": "18682:88:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "18675:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18675:3:12"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "18818:5:12",
																				"nodeType": "YulIdentifier",
																				"src": "18818:5:12"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "18825:4:12",
																				"nodeType": "YulLiteral",
																				"src": "18825:4:12",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "18814:3:12",
																			"nodeType": "YulIdentifier",
																			"src": "18814:3:12"
																		},
																		"nativeSrc": "18814:16:12",
																		"nodeType": "YulFunctionCall",
																		"src": "18814:16:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18832:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18832:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18837:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18837:6:12"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "18779:34:12",
																	"nodeType": "YulIdentifier",
																	"src": "18779:34:12"
																},
																"nativeSrc": "18779:65:12",
																"nodeType": "YulFunctionCall",
																"src": "18779:65:12"
															},
															"nativeSrc": "18779:65:12",
															"nodeType": "YulExpressionStatement",
															"src": "18779:65:12"
														},
														{
															"nativeSrc": "18853:23:12",
															"nodeType": "YulAssignment",
															"src": "18853:23:12",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "18864:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "18864:3:12"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "18869:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "18869:6:12"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "18860:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18860:3:12"
																},
																"nativeSrc": "18860:16:12",
																"nodeType": "YulFunctionCall",
																"src": "18860:16:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18853:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "18853:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "18496:386:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "18585:5:12",
														"nodeType": "YulTypedName",
														"src": "18585:5:12",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "18592:3:12",
														"nodeType": "YulTypedName",
														"src": "18592:3:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18600:3:12",
														"nodeType": "YulTypedName",
														"src": "18600:3:12",
														"type": ""
													}
												],
												"src": "18496:386:12"
											},
											{
												"body": {
													"nativeSrc": "19022:137:12",
													"nodeType": "YulBlock",
													"src": "19022:137:12",
													"statements": [
														{
															"nativeSrc": "19033:100:12",
															"nodeType": "YulAssignment",
															"src": "19033:100:12",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "19120:6:12",
																		"nodeType": "YulIdentifier",
																		"src": "19120:6:12"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "19129:3:12",
																		"nodeType": "YulIdentifier",
																		"src": "19129:3:12"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "19040:79:12",
																	"nodeType": "YulIdentifier",
																	"src": "19040:79:12"
																},
																"nativeSrc": "19040:93:12",
																"nodeType": "YulFunctionCall",
																"src": "19040:93:12"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "19033:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19033:3:12"
																}
															]
														},
														{
															"nativeSrc": "19143:10:12",
															"nodeType": "YulAssignment",
															"src": "19143:10:12",
															"value": {
																"name": "pos",
																"nativeSrc": "19150:3:12",
																"nodeType": "YulIdentifier",
																"src": "19150:3:12"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "19143:3:12",
																	"nodeType": "YulIdentifier",
																	"src": "19143:3:12"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "18888:271:12",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "19001:3:12",
														"nodeType": "YulTypedName",
														"src": "19001:3:12",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "19007:6:12",
														"nodeType": "YulTypedName",
														"src": "19007:6:12",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "19018:3:12",
														"nodeType": "YulTypedName",
														"src": "19018:3:12",
														"type": ""
													}
												],
												"src": "18888:271:12"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes32(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_bytes32(value) {\n        if iszero(eq(value, cleanup_t_bytes32(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes32(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes32(value)\n    }\n\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function cleanup_t_uint96(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffff)\n    }\n\n    function abi_encode_t_uint96_to_t_uint96(value, pos) {\n        mstore(pos, cleanup_t_uint96(value))\n    }\n\n    function cleanup_t_uint64(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffff)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function panic_error_0x21() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x21)\n        revert(0, 0x24)\n    }\n\n    function validator_assert_t_enum$_Status_$3902(value) {\n        if iszero(lt(value, 5)) { panic_error_0x21() }\n    }\n\n    function cleanup_t_enum$_Status_$3902(value) -> cleaned {\n        cleaned := value validator_assert_t_enum$_Status_$3902(value)\n    }\n\n    function convert_t_enum$_Status_$3902_to_t_uint8(value) -> converted {\n        converted := cleanup_t_enum$_Status_$3902(value)\n    }\n\n    function abi_encode_t_enum$_Status_$3902_to_t_uint8(value, pos) {\n        mstore(pos, convert_t_enum$_Status_$3902_to_t_uint8(value))\n    }\n\n    // struct BountyEscrow.Bounty -> struct BountyEscrow.Bounty\n    function abi_encode_t_struct$_Bounty_$3919_memory_ptr_to_t_struct$_Bounty_$3919_memory_ptr_fromStack(value, pos)  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // repoIdHash\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_bytes32_to_t_bytes32(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // sponsor\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // resolver\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint96_to_t_uint96(memberValue0, add(pos, 0x60))\n        }\n\n        {\n            // deadline\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // issueNumber\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_uint64_to_t_uint64(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // status\n\n            let memberValue0 := mload(add(value, 0xc0))\n            abi_encode_t_enum$_Status_$3902_to_t_uint8(memberValue0, add(pos, 0xc0))\n        }\n\n    }\n\n    function abi_encode_tuple_t_struct$_Bounty_$3919_memory_ptr__to_t_struct$_Bounty_$3919_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 224)\n\n        abi_encode_t_struct$_Bounty_$3919_memory_ptr_to_t_struct$_Bounty_$3919_memory_ptr_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint16(value) -> cleaned {\n        cleaned := and(value, 0xffff)\n    }\n\n    function abi_encode_t_uint16_to_t_uint16_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint16(value))\n    }\n\n    function abi_encode_tuple_t_uint16__to_t_uint16__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_IERC20_$225_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_IERC20_$225_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_IERC20_$225__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_IERC20_$225_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function validator_revert_t_uint64(value) {\n        if iszero(eq(value, cleanup_t_uint64(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint64(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint64(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32t_uint64t_uint64t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4 {\n        if slt(sub(dataEnd, headStart), 160) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 128\n\n            value4 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bytes32(value))\n    }\n\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bytes32_to_t_bytes32_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_addresst_bytes32t_uint64(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint64(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_uint16(value) {\n        if iszero(eq(value, cleanup_t_uint16(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint16(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint16(value)\n    }\n\n    function abi_decode_tuple_t_uint16t_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint16(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_bytes32t_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes32(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint64(value))\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint64_t_uint64_t_address_t_uint256__to_t_uint64_t_uint64_t_address_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint64_to_t_uint64_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_address_to_t_address_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function shift_left_96(value) -> newValue {\n        newValue :=\n\n        shl(96, value)\n\n    }\n\n    function leftAlign_t_uint160(value) -> aligned {\n        aligned := shift_left_96(value)\n    }\n\n    function leftAlign_t_address(value) -> aligned {\n        aligned := leftAlign_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_address(cleanup_t_address(value)))\n    }\n\n    function leftAlign_t_bytes32(value) -> aligned {\n        aligned := value\n    }\n\n    function abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_bytes32(cleanup_t_bytes32(value)))\n    }\n\n    function shift_left_192(value) -> newValue {\n        newValue :=\n\n        shl(192, value)\n\n    }\n\n    function leftAlign_t_uint64(value) -> aligned {\n        aligned := shift_left_192(value)\n    }\n\n    function abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack(value, pos) {\n        mstore(pos, leftAlign_t_uint64(cleanup_t_uint64(value)))\n    }\n\n    function abi_encode_tuple_packed_t_address_t_bytes32_t_uint64__to_t_address_t_bytes32_t_uint64__nonPadded_inplace_fromStack_reversed(pos , value2, value1, value0) -> end {\n\n        abi_encode_t_address_to_t_address_nonPadded_inplace_fromStack(value0,  pos)\n        pos := add(pos, 20)\n\n        abi_encode_t_bytes32_to_t_bytes32_nonPadded_inplace_fromStack(value1,  pos)\n        pos := add(pos, 32)\n\n        abi_encode_t_uint64_to_t_uint64_nonPadded_inplace_fromStack(value2,  pos)\n        pos := add(pos, 8)\n\n        end := pos\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_uint16_t_address__to_t_uint16_t_address__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_uint16_to_t_uint16_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function cleanup_t_rational_96_by_1(value) -> cleaned {\n        cleaned := value\n    }\n\n    function convert_t_rational_96_by_1_to_t_uint8(value) -> converted {\n        converted := cleanup_t_uint8(identity(cleanup_t_rational_96_by_1(value)))\n    }\n\n    function abi_encode_t_rational_96_by_1_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, convert_t_rational_96_by_1_to_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_rational_96_by_1_t_uint256__to_t_uint8_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_rational_96_by_1_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 96)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_address_to_t_address_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 12,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"3923": [
									{
										"length": 32,
										"start": 1307
									},
									{
										"length": 32,
										"start": 2353
									},
									{
										"length": 32,
										"start": 3001
									},
									{
										"length": 32,
										"start": 3763
									},
									{
										"length": 32,
										"start": 4603
									},
									{
										"length": 32,
										"start": 4721
									},
									{
										"length": 32,
										"start": 5760
									}
								],
								"3926": [
									{
										"length": 32,
										"start": 1442
									}
								]
							},
							"linkReferences": {},
							"object": "608060405234801561000f575f5ffd5b506004361061011f575f3560e01c80638da5cb5b116100ab578063d16866041161006f578063d1686604146102bd578063d55be8c6146102d9578063e0120cf8146102f7578063e46bbc9e14610313578063f2fde38b1461032f5761011f565b80638da5cb5b14610207578063c23945ac14610225578063c4d252f514610255578063cc3e049b14610271578063cd2025c31461028d5761011f565b8063478222c2116100f2578063478222c2146101995780635c975abb146101b7578063715018a6146101d55780637bf42165146101df5780638456cb59146101fd5761011f565b80632417395c1461012357806324a9d853146101535780633e413bee146101715780633f4ba83a1461018f575b5f5ffd5b61013d60048036038101906101389190611fdf565b61034b565b60405161014a919061219f565b60405180910390f35b61015b610505565b60405161016891906121d4565b60405180910390f35b610179610518565b6040516101869190612248565b60405180910390f35b61019761053f565b005b6101a1610551565b6040516101ae9190612270565b60405180910390f35b6101bf610577565b6040516101cc91906122a3565b60405180910390f35b6101dd61058c565b005b6101e761059f565b6040516101f491906122d7565b60405180910390f35b6102056105c6565b005b61020f6105d8565b60405161021c9190612270565b60405180910390f35b61023f600480360381019061023a9190612377565b6105ff565b60405161024c91906123fd565b60405180910390f35b61026f600480360381019061026a9190611fdf565b6109de565b005b61028b60048036038101906102869190611fdf565b610c7d565b005b6102a760048036038101906102a29190612416565b610f77565b6040516102b491906123fd565b60405180910390f35b6102d760048036038101906102d29190612466565b610fac565b005b6102e1611317565b6040516102ee91906121d4565b60405180910390f35b610311600480360381019061030c91906124ce565b61131d565b005b61032d6004803603810190610328919061250c565b611468565b005b6103496004803603810190610344919061254a565b61170b565b005b610353611f12565b60025f8381526020019081526020015f206040518060e00160405290815f8201548152602001600182015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600282015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166bffffffffffffffffffffffff168152602001600382015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016003820160089054906101000a900467ffffffffffffffff1667ffffffffffffffff1667ffffffffffffffff1681526020016003820160109054906101000a900460ff1660048111156104e8576104e76120a0565b5b60048111156104fa576104f96120a0565b5b815250509050919050565b60035f9054906101000a900461ffff1681565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b61054761178f565b61054f611816565b565b600360029054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b5f60015f9054906101000a900460ff16905090565b61059461178f565b61059d5f611877565b565b5f7f0000000000000000000000000000000000000000000000000000000000000000905090565b6105ce61178f565b6105d6611939565b565b5f60018054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b5f61060861199a565b6106106119de565b5f73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff1603610675576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f5f1b85148061068e57505f8467ffffffffffffffff16145b156106c5576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b428367ffffffffffffffff1611610708576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8203610741576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61074c338686610f77565b90505f6004811115610761576107606120a0565b5b60025f8381526020019081526020015f2060030160109054906101000a900460ff166004811115610795576107946120a0565b5b146107cc576040517f23369fa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f8381526020019081526020015f20905085815f018190555033816001015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555086816002015f6101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061087583611a1f565b8160020160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff16021790555083816003015f6101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550848160030160086101000a81548167ffffffffffffffff021916908367ffffffffffffffff16021790555060018160030160106101000a81548160ff02191690836004811115610924576109236120a0565b5b02179055506109763330857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611a7e909392919063ffffffff16565b853373ffffffffffffffffffffffffffffffffffffffff16837fb9f72851bf0c89db77e8b273bf29aef517207f92830df76851a309f1a6c5c80e88888c896040516109c49493929190612593565b60405180910390a4506109d5611b00565b95945050505050565b6109e661199a565b6109ee6119de565b5f60025f8381526020019081526020015f20905060016004811115610a1657610a156120a0565b5b8160030160109054906101000a900460ff166004811115610a3a57610a396120a0565b5b14610a71576040517fddafad9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610af9576040517fdf4795c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60048160030160106101000a81548160ff02191690836004811115610b2157610b206120a0565b5b02179055505f8160020160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1690505f8260020160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505f811115610bfe57610bfd826001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b099092919063ffffffff16565b5b816001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837f13ca42b383dddac8a499886c122185485535c8144d34355991f87265cfbee4cc83604051610c6891906125d6565b60405180910390a35050610c7a611b00565b50565b610c8561199a565b610c8d6119de565b5f60025f8381526020019081526020015f20905060016004811115610cb557610cb46120a0565b5b8160030160109054906101000a900460ff166004811115610cd957610cd86120a0565b5b14610d10576040517fddafad9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806003015f9054906101000a900467ffffffffffffffff1667ffffffffffffffff16421015610d6b576040517f66ec4ee600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610df3576040517fdf4795c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60038160030160106101000a81548160ff02191690836004811115610e1b57610e1a6120a0565b5b02179055505f8160020160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1690505f8260020160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505f811115610ef857610ef7826001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff16827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b099092919063ffffffff16565b5b816001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16837ff552ca82e113ac3c539c3d617f29fcd19c172a0c75dad017555c9e109f7fe18383604051610f6291906125d6565b60405180910390a35050610f74611b00565b50565b5f838383604051602001610f8d93929190612688565b6040516020818303038152906040528051906020012090509392505050565b610fb461199a565b610fbc6119de565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611021576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f60025f8481526020019081526020015f20905060016004811115611049576110486120a0565b5b8160030160109054906101000a900460ff16600481111561106d5761106c6120a0565b5b146110a4576040517fddafad9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806002015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461112c576040517fba2a9fc200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60028160030160106101000a81548160ff02191690836004811115611154576111536120a0565b5b02179055505f8160020160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff1690505f8260020160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055505f6111db8260035f9054906101000a900461ffff1661ffff16612710611b88565b90505f81836111ea91906126f1565b90505f8111156112405761123f85827f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b099092919063ffffffff16565b5b5f8211156112b6576112b5600360029054906101000a900473ffffffffffffffffffffffffffffffffffffffff16837f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611b099092919063ffffffff16565b5b8473ffffffffffffffffffffffffffffffffffffffff16867f461dc02513380b552c1c7e42377606be7a1c06610e50589fc4664dd29bf47fc083856040516112ff929190612724565b60405180910390a350505050611313611b00565b5050565b6103e881565b61132561178f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff160361138a576040517fd92e233d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6103e861ffff168261ffff1611156113ce576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160035f6101000a81548161ffff021916908361ffff16021790555080600360026101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507f553bd03bb9146c7a9c7ad0a260aed36e8d47650815df076dfb60f9d47e6cf727828260405161145c92919061274b565b60405180910390a15050565b61147061199a565b6114786119de565b5f60025f8481526020019081526020015f209050600160048111156114a05761149f6120a0565b5b8160030160109054906101000a900460ff1660048111156114c4576114c36120a0565b5b146114fb576040517fddafad9800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b806001015f9054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611583576040517fdf4795c700000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f82036115bc576040517f1f2a200500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f828260020160149054906101000a90046bffffffffffffffffffffffff166bffffffffffffffffffffffff166115f39190612772565b90506bffffffffffffffffffffffff801681111561163d576040517fa86b651200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b61164681611a1f565b8260020160146101000a8154816bffffffffffffffffffffffff02191690836bffffffffffffffffffffffff1602179055506116c53330857f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff16611a7e909392919063ffffffff16565b837f9f4592c3bd42bd33860ee93dc92d07f06e3f4fb6e19a9ca214982fe7c1bdb037826040516116f591906125d6565b60405180910390a25050611707611b00565b5050565b61171361178f565b5f73ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1603611783575f6040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161177a9190612270565b60405180910390fd5b61178c81611877565b50565b611797611c87565b73ffffffffffffffffffffffffffffffffffffffff166117b56105d8565b73ffffffffffffffffffffffffffffffffffffffff1614611814576117d8611c87565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161180b9190612270565b60405180910390fd5b565b61181e611c8e565b5f60015f6101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa611860611c87565b60405161186d9190612270565b60405180910390a1565b5f60018054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816001806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6119416119de565b6001805f6101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258611983611c87565b6040516119909190612270565b60405180910390a1565b60025f54036119d5576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60025f81905550565b6119e6610577565b15611a1d576040517fd93c066500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f6bffffffffffffffffffffffff8016821115611a76576060826040517f6dfcc650000000000000000000000000000000000000000000000000000000008152600401611a6d9291906127de565b60405180910390fd5b819050919050565b611afa848573ffffffffffffffffffffffffffffffffffffffff166323b872dd868686604051602401611ab393929190612805565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611cce565b50505050565b60015f81905550565b611b83838473ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8585604051602401611b3c92919061283a565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050611cce565b505050565b5f5f83850290505f5f19858709828110838203039150505f8103611bc057838281611bb657611bb5612861565b5b0492505050611c80565b808411611bf9576040517f227bc15300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5f8486880990508281118203915080830392505f855f038616905080860495508084049350600181825f0304019050808302841793505f600287600302189050808702600203810290508087026002038102905080870260020381029050808702600203810290508087026002038102905080870260020381029050808502955050505050505b9392505050565b5f33905090565b611c96610577565b611ccc576040517f8dfc202b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b565b5f611cf8828473ffffffffffffffffffffffffffffffffffffffff16611d6390919063ffffffff16565b90505f815114158015611d1c575080806020019051810190611d1a91906128b8565b155b15611d5e57826040517f5274afe7000000000000000000000000000000000000000000000000000000008152600401611d559190612270565b60405180910390fd5b505050565b6060611d7083835f611d78565b905092915050565b606081471015611dbf57306040517fcd786059000000000000000000000000000000000000000000000000000000008152600401611db69190612270565b60405180910390fd5b5f5f8573ffffffffffffffffffffffffffffffffffffffff168486604051611de79190612935565b5f6040518083038185875af1925050503d805f8114611e21576040519150601f19603f3d011682016040523d82523d5f602084013e611e26565b606091505b5091509150611e36868383611e41565b925050509392505050565b606082611e5657611e5182611ece565b611ec6565b5f8251148015611e7c57505f8473ffffffffffffffffffffffffffffffffffffffff163b145b15611ebe57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401611eb59190612270565b60405180910390fd5b819050611ec7565b5b9392505050565b5f81511115611ee05780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518060e001604052805f81526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f73ffffffffffffffffffffffffffffffffffffffff1681526020015f6bffffffffffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f67ffffffffffffffff1681526020015f6004811115611fa257611fa16120a0565b5b81525090565b5f5ffd5b5f819050919050565b611fbe81611fac565b8114611fc8575f5ffd5b50565b5f81359050611fd981611fb5565b92915050565b5f60208284031215611ff457611ff3611fa8565b5b5f61200184828501611fcb565b91505092915050565b61201381611fac565b82525050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f61204282612019565b9050919050565b61205281612038565b82525050565b5f6bffffffffffffffffffffffff82169050919050565b61207881612058565b82525050565b5f67ffffffffffffffff82169050919050565b61209a8161207e565b82525050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52602160045260245ffd5b600581106120de576120dd6120a0565b5b50565b5f8190506120ee826120cd565b919050565b5f6120fd826120e1565b9050919050565b61210d816120f3565b82525050565b60e082015f8201516121275f85018261200a565b50602082015161213a6020850182612049565b50604082015161214d6040850182612049565b506060820151612160606085018261206f565b5060808201516121736080850182612091565b5060a082015161218660a0850182612091565b5060c082015161219960c0850182612104565b50505050565b5f60e0820190506121b25f830184612113565b92915050565b5f61ffff82169050919050565b6121ce816121b8565b82525050565b5f6020820190506121e75f8301846121c5565b92915050565b5f819050919050565b5f61221061220b61220684612019565b6121ed565b612019565b9050919050565b5f612221826121f6565b9050919050565b5f61223282612217565b9050919050565b61224281612228565b82525050565b5f60208201905061225b5f830184612239565b92915050565b61226a81612038565b82525050565b5f6020820190506122835f830184612261565b92915050565b5f8115159050919050565b61229d81612289565b82525050565b5f6020820190506122b65f830184612294565b92915050565b5f60ff82169050919050565b6122d1816122bc565b82525050565b5f6020820190506122ea5f8301846122c8565b92915050565b6122f981612038565b8114612303575f5ffd5b50565b5f81359050612314816122f0565b92915050565b6123238161207e565b811461232d575f5ffd5b50565b5f8135905061233e8161231a565b92915050565b5f819050919050565b61235681612344565b8114612360575f5ffd5b50565b5f813590506123718161234d565b92915050565b5f5f5f5f5f60a086880312156123905761238f611fa8565b5b5f61239d88828901612306565b95505060206123ae88828901611fcb565b94505060406123bf88828901612330565b93505060606123d088828901612330565b92505060806123e188828901612363565b9150509295509295909350565b6123f781611fac565b82525050565b5f6020820190506124105f8301846123ee565b92915050565b5f5f5f6060848603121561242d5761242c611fa8565b5b5f61243a86828701612306565b935050602061244b86828701611fcb565b925050604061245c86828701612330565b9150509250925092565b5f5f6040838503121561247c5761247b611fa8565b5b5f61248985828601611fcb565b925050602061249a85828601612306565b9150509250929050565b6124ad816121b8565b81146124b7575f5ffd5b50565b5f813590506124c8816124a4565b92915050565b5f5f604083850312156124e4576124e3611fa8565b5b5f6124f1858286016124ba565b925050602061250285828601612306565b9150509250929050565b5f5f6040838503121561252257612521611fa8565b5b5f61252f85828601611fcb565b925050602061254085828601612363565b9150509250929050565b5f6020828403121561255f5761255e611fa8565b5b5f61256c84828501612306565b91505092915050565b61257e8161207e565b82525050565b61258d81612344565b82525050565b5f6080820190506125a65f830187612575565b6125b36020830186612575565b6125c06040830185612261565b6125cd6060830184612584565b95945050505050565b5f6020820190506125e95f830184612584565b92915050565b5f8160601b9050919050565b5f612605826125ef565b9050919050565b5f612616826125fb565b9050919050565b61262e61262982612038565b61260c565b82525050565b5f819050919050565b61264e61264982611fac565b612634565b82525050565b5f8160c01b9050919050565b5f61266a82612654565b9050919050565b61268261267d8261207e565b612660565b82525050565b5f612693828661261d565b6014820191506126a3828561263d565b6020820191506126b38284612671565b600882019150819050949350505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601160045260245ffd5b5f6126fb82612344565b915061270683612344565b925082820390508181111561271e5761271d6126c4565b5b92915050565b5f6040820190506127375f830185612584565b6127446020830184612584565b9392505050565b5f60408201905061275e5f8301856121c5565b61276b6020830184612261565b9392505050565b5f61277c82612344565b915061278783612344565b925082820190508082111561279f5761279e6126c4565b5b92915050565b5f819050919050565b5f6127c86127c36127be846127a5565b6121ed565b6122bc565b9050919050565b6127d8816127ae565b82525050565b5f6040820190506127f15f8301856127cf565b6127fe6020830184612584565b9392505050565b5f6060820190506128185f830186612261565b6128256020830185612261565b6128326040830184612584565b949350505050565b5f60408201905061284d5f830185612261565b61285a6020830184612584565b9392505050565b7f4e487b71000000000000000000000000000000000000000000000000000000005f52601260045260245ffd5b61289781612289565b81146128a1575f5ffd5b50565b5f815190506128b28161288e565b92915050565b5f602082840312156128cd576128cc611fa8565b5b5f6128da848285016128a4565b91505092915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61290f826128e3565b61291981856128ed565b93506129298185602086016128f7565b80840191505092915050565b5f6129408284612905565b91508190509291505056fea2646970667358221220fa2c85e239d774b1506cae5c4c4677b92d45b9017bc2f801c3633f437f28254b64736f6c634300081e0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x11F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8DA5CB5B GT PUSH2 0xAB JUMPI DUP1 PUSH4 0xD1686604 GT PUSH2 0x6F JUMPI DUP1 PUSH4 0xD1686604 EQ PUSH2 0x2BD JUMPI DUP1 PUSH4 0xD55BE8C6 EQ PUSH2 0x2D9 JUMPI DUP1 PUSH4 0xE0120CF8 EQ PUSH2 0x2F7 JUMPI DUP1 PUSH4 0xE46BBC9E EQ PUSH2 0x313 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x32F JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x207 JUMPI DUP1 PUSH4 0xC23945AC EQ PUSH2 0x225 JUMPI DUP1 PUSH4 0xC4D252F5 EQ PUSH2 0x255 JUMPI DUP1 PUSH4 0xCC3E049B EQ PUSH2 0x271 JUMPI DUP1 PUSH4 0xCD2025C3 EQ PUSH2 0x28D JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x478222C2 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0x478222C2 EQ PUSH2 0x199 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x1B7 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1D5 JUMPI DUP1 PUSH4 0x7BF42165 EQ PUSH2 0x1DF JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x1FD JUMPI PUSH2 0x11F JUMP JUMPDEST DUP1 PUSH4 0x2417395C EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x24A9D853 EQ PUSH2 0x153 JUMPI DUP1 PUSH4 0x3E413BEE EQ PUSH2 0x171 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x18F JUMPI JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH2 0x13D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x138 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x34B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x14A SWAP2 SWAP1 PUSH2 0x219F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x15B PUSH2 0x505 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x168 SWAP2 SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x179 PUSH2 0x518 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186 SWAP2 SWAP1 PUSH2 0x2248 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x197 PUSH2 0x53F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A1 PUSH2 0x551 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1BF PUSH2 0x577 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1CC SWAP2 SWAP1 PUSH2 0x22A3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1DD PUSH2 0x58C JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1E7 PUSH2 0x59F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x22D7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x205 PUSH2 0x5C6 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x20F PUSH2 0x5D8 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x21C SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x23A SWAP2 SWAP1 PUSH2 0x2377 JUMP JUMPDEST PUSH2 0x5FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24C SWAP2 SWAP1 PUSH2 0x23FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26F PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x26A SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0x9DE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x28B PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x1FDF JUMP JUMPDEST PUSH2 0xC7D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2A2 SWAP2 SWAP1 PUSH2 0x2416 JUMP JUMPDEST PUSH2 0xF77 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2B4 SWAP2 SWAP1 PUSH2 0x23FD JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2D7 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2D2 SWAP2 SWAP1 PUSH2 0x2466 JUMP JUMPDEST PUSH2 0xFAC JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2E1 PUSH2 0x1317 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2EE SWAP2 SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x311 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x30C SWAP2 SWAP1 PUSH2 0x24CE JUMP JUMPDEST PUSH2 0x131D JUMP JUMPDEST STOP JUMPDEST PUSH2 0x32D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x328 SWAP2 SWAP1 PUSH2 0x250C JUMP JUMPDEST PUSH2 0x1468 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x349 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x344 SWAP2 SWAP1 PUSH2 0x254A JUMP JUMPDEST PUSH2 0x170B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x353 PUSH2 0x1F12 JUMP JUMPDEST PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x8 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x4E8 JUMPI PUSH2 0x4E7 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x4FA JUMPI PUSH2 0x4F9 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x547 PUSH2 0x178F JUMP JUMPDEST PUSH2 0x54F PUSH2 0x1816 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x594 PUSH2 0x178F JUMP JUMPDEST PUSH2 0x59D PUSH0 PUSH2 0x1877 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH32 0x0 SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x5CE PUSH2 0x178F JUMP JUMPDEST PUSH2 0x5D6 PUSH2 0x1939 JUMP JUMPDEST JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0x608 PUSH2 0x199A JUMP JUMPDEST PUSH2 0x610 PUSH2 0x19DE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x675 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 SHL DUP6 EQ DUP1 PUSH2 0x68E JUMPI POP PUSH0 DUP5 PUSH8 0xFFFFFFFFFFFFFFFF AND EQ JUMPDEST ISZERO PUSH2 0x6C5 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA86B651200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST TIMESTAMP DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND GT PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH32 0xA86B651200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0x741 JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x74C CALLER DUP7 DUP7 PUSH2 0xF77 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x761 JUMPI PUSH2 0x760 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x795 JUMPI PUSH2 0x794 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x7CC JUMPI PUSH1 0x40 MLOAD PUSH32 0x23369FA600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP DUP6 DUP2 PUSH0 ADD DUP2 SWAP1 SSTORE POP CALLER DUP2 PUSH1 0x1 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP7 DUP2 PUSH1 0x2 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x875 DUP4 PUSH2 0x1A1F JUMP JUMPDEST DUP2 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x3 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP5 DUP2 PUSH1 0x3 ADD PUSH1 0x8 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH8 0xFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH8 0xFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x1 DUP2 PUSH1 0x3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x924 JUMPI PUSH2 0x923 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH2 0x976 CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A7E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP6 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xB9F72851BF0C89DB77E8B273BF29AEF517207F92830DF76851A309F1A6C5C80E DUP9 DUP9 DUP13 DUP10 PUSH1 0x40 MLOAD PUSH2 0x9C4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2593 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP PUSH2 0x9D5 PUSH2 0x1B00 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x9E6 PUSH2 0x199A JUMP JUMPDEST PUSH2 0x9EE PUSH2 0x19DE JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA16 JUMPI PUSH2 0xA15 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA3A JUMPI PUSH2 0xA39 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xA71 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDDAFAD9800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDF4795C700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x4 DUP2 PUSH1 0x3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xB21 JUMPI PUSH2 0xB20 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP2 GT ISZERO PUSH2 0xBFE JUMPI PUSH2 0xBFD DUP3 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B09 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x13CA42B383DDDAC8A499886C122185485535C8144D34355991F87265CFBEE4CC DUP4 PUSH1 0x40 MLOAD PUSH2 0xC68 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xC7A PUSH2 0x1B00 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xC85 PUSH2 0x199A JUMP JUMPDEST PUSH2 0xC8D PUSH2 0x19DE JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xCB5 JUMPI PUSH2 0xCB4 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xCD9 JUMPI PUSH2 0xCD8 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST EQ PUSH2 0xD10 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDDAFAD9800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH8 0xFFFFFFFFFFFFFFFF AND TIMESTAMP LT ISZERO PUSH2 0xD6B JUMPI PUSH1 0x40 MLOAD PUSH32 0x66EC4EE600000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xDF3 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDF4795C700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP2 PUSH1 0x3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xE1B JUMPI PUSH2 0xE1A PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 DUP2 GT ISZERO PUSH2 0xEF8 JUMPI PUSH2 0xEF7 DUP3 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B09 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0xF552CA82E113AC3C539C3D617F29FCD19C172A0C75DAD017555C9E109F7FE183 DUP4 PUSH1 0x40 MLOAD PUSH2 0xF62 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP PUSH2 0xF74 PUSH2 0x1B00 JUMP JUMPDEST POP JUMP JUMPDEST PUSH0 DUP4 DUP4 DUP4 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0xF8D SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2688 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0xFB4 PUSH2 0x199A JUMP JUMPDEST PUSH2 0xFBC PUSH2 0x19DE JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1021 JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1049 JUMPI PUSH2 0x1048 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x106D JUMPI PUSH2 0x106C PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x10A4 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDDAFAD9800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x112C JUMPI PUSH1 0x40 MLOAD PUSH32 0xBA2A9FC200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 DUP2 PUSH1 0x3 ADD PUSH1 0x10 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1154 JUMPI PUSH2 0x1153 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST MUL OR SWAP1 SSTORE POP PUSH0 DUP2 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP PUSH0 DUP3 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH0 PUSH2 0x11DB DUP3 PUSH1 0x3 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH2 0xFFFF AND PUSH2 0xFFFF AND PUSH2 0x2710 PUSH2 0x1B88 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 DUP4 PUSH2 0x11EA SWAP2 SWAP1 PUSH2 0x26F1 JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 GT ISZERO PUSH2 0x1240 JUMPI PUSH2 0x123F DUP6 DUP3 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B09 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST PUSH0 DUP3 GT ISZERO PUSH2 0x12B6 JUMPI PUSH2 0x12B5 PUSH1 0x3 PUSH1 0x2 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP4 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1B09 SWAP1 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST JUMPDEST DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP7 PUSH32 0x461DC02513380B552C1C7E42377606BE7A1C06610E50589FC4664DD29BF47FC0 DUP4 DUP6 PUSH1 0x40 MLOAD PUSH2 0x12FF SWAP3 SWAP2 SWAP1 PUSH2 0x2724 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP PUSH2 0x1313 PUSH2 0x1B00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x3E8 DUP2 JUMP JUMPDEST PUSH2 0x1325 PUSH2 0x178F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x138A JUMPI PUSH1 0x40 MLOAD PUSH32 0xD92E233D00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x3E8 PUSH2 0xFFFF AND DUP3 PUSH2 0xFFFF AND GT ISZERO PUSH2 0x13CE JUMPI PUSH1 0x40 MLOAD PUSH32 0xA86B651200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 PUSH1 0x3 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH2 0xFFFF MUL NOT AND SWAP1 DUP4 PUSH2 0xFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x3 PUSH1 0x2 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH32 0x553BD03BB9146C7A9C7AD0A260AED36E8D47650815DF076DFB60F9D47E6CF727 DUP3 DUP3 PUSH1 0x40 MLOAD PUSH2 0x145C SWAP3 SWAP2 SWAP1 PUSH2 0x274B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP JUMP JUMPDEST PUSH2 0x1470 PUSH2 0x199A JUMP JUMPDEST PUSH2 0x1478 PUSH2 0x19DE JUMP JUMPDEST PUSH0 PUSH1 0x2 PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 SWAP1 POP PUSH1 0x1 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14A0 JUMPI PUSH2 0x149F PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST DUP2 PUSH1 0x3 ADD PUSH1 0x10 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x14C4 JUMPI PUSH2 0x14C3 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST EQ PUSH2 0x14FB JUMPI PUSH1 0x40 MLOAD PUSH32 0xDDAFAD9800000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x1 ADD PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1583 JUMPI PUSH1 0x40 MLOAD PUSH32 0xDF4795C700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 SUB PUSH2 0x15BC JUMPI PUSH1 0x40 MLOAD PUSH32 0x1F2A200500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP3 DUP3 PUSH1 0x2 ADD PUSH1 0x14 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x15F3 SWAP2 SWAP1 PUSH2 0x2772 JUMP JUMPDEST SWAP1 POP PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP2 GT ISZERO PUSH2 0x163D JUMPI PUSH1 0x40 MLOAD PUSH32 0xA86B651200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1646 DUP2 PUSH2 0x1A1F JUMP JUMPDEST DUP3 PUSH1 0x2 ADD PUSH1 0x14 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH2 0x16C5 CALLER ADDRESS DUP6 PUSH32 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1A7E SWAP1 SWAP4 SWAP3 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST DUP4 PUSH32 0x9F4592C3BD42BD33860EE93DC92D07F06E3F4FB6E19A9CA214982FE7C1BDB037 DUP3 PUSH1 0x40 MLOAD PUSH2 0x16F5 SWAP2 SWAP1 PUSH2 0x25D6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP PUSH2 0x1707 PUSH2 0x1B00 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x1713 PUSH2 0x178F JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x1783 JUMPI PUSH0 PUSH1 0x40 MLOAD PUSH32 0x1E4FBDF700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x177A SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x178C DUP2 PUSH2 0x1877 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x1797 PUSH2 0x1C87 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x17B5 PUSH2 0x5D8 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1814 JUMPI PUSH2 0x17D8 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x118CDAA700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x180B SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH2 0x181E PUSH2 0x1C8E JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA PUSH2 0x1860 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x186D SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x1 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x1941 PUSH2 0x19DE JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1983 PUSH2 0x1C87 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1990 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST PUSH1 0x2 PUSH0 SLOAD SUB PUSH2 0x19D5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x3EE5AEB500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x19E6 PUSH2 0x577 JUMP JUMPDEST ISZERO PUSH2 0x1A1D JUMPI PUSH1 0x40 MLOAD PUSH32 0xD93C066500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP1 AND DUP3 GT ISZERO PUSH2 0x1A76 JUMPI PUSH1 0x60 DUP3 PUSH1 0x40 MLOAD PUSH32 0x6DFCC65000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1A6D SWAP3 SWAP2 SWAP1 PUSH2 0x27DE JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1AFA DUP5 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x23B872DD DUP7 DUP7 DUP7 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1AB3 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x2805 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1CCE JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE POP JUMP JUMPDEST PUSH2 0x1B83 DUP4 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xA9059CBB DUP6 DUP6 PUSH1 0x40 MLOAD PUSH1 0x24 ADD PUSH2 0x1B3C SWAP3 SWAP2 SWAP1 PUSH2 0x283A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE SWAP2 POP PUSH1 0xE0 SHL PUSH1 0x20 DUP3 ADD DUP1 MLOAD PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP4 DUP2 DUP4 AND OR DUP4 MSTORE POP POP POP POP PUSH2 0x1CCE JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH0 DUP4 DUP6 MUL SWAP1 POP PUSH0 PUSH0 NOT DUP6 DUP8 MULMOD DUP3 DUP2 LT DUP4 DUP3 SUB SUB SWAP2 POP POP PUSH0 DUP2 SUB PUSH2 0x1BC0 JUMPI DUP4 DUP3 DUP2 PUSH2 0x1BB6 JUMPI PUSH2 0x1BB5 PUSH2 0x2861 JUMP JUMPDEST JUMPDEST DIV SWAP3 POP POP POP PUSH2 0x1C80 JUMP JUMPDEST DUP1 DUP5 GT PUSH2 0x1BF9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x227BC15300000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 DUP5 DUP7 DUP9 MULMOD SWAP1 POP DUP3 DUP2 GT DUP3 SUB SWAP2 POP DUP1 DUP4 SUB SWAP3 POP PUSH0 DUP6 PUSH0 SUB DUP7 AND SWAP1 POP DUP1 DUP7 DIV SWAP6 POP DUP1 DUP5 DIV SWAP4 POP PUSH1 0x1 DUP2 DUP3 PUSH0 SUB DIV ADD SWAP1 POP DUP1 DUP4 MUL DUP5 OR SWAP4 POP PUSH0 PUSH1 0x2 DUP8 PUSH1 0x3 MUL XOR SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP8 MUL PUSH1 0x2 SUB DUP2 MUL SWAP1 POP DUP1 DUP6 MUL SWAP6 POP POP POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x1C96 PUSH2 0x577 JUMP JUMPDEST PUSH2 0x1CCC JUMPI PUSH1 0x40 MLOAD PUSH32 0x8DFC202B00000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 PUSH2 0x1CF8 DUP3 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x1D63 SWAP1 SWAP2 SWAP1 PUSH4 0xFFFFFFFF AND JUMP JUMPDEST SWAP1 POP PUSH0 DUP2 MLOAD EQ ISZERO DUP1 ISZERO PUSH2 0x1D1C JUMPI POP DUP1 DUP1 PUSH1 0x20 ADD SWAP1 MLOAD DUP2 ADD SWAP1 PUSH2 0x1D1A SWAP2 SWAP1 PUSH2 0x28B8 JUMP JUMPDEST ISZERO JUMPDEST ISZERO PUSH2 0x1D5E JUMPI DUP3 PUSH1 0x40 MLOAD PUSH32 0x5274AFE700000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D55 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D70 DUP4 DUP4 PUSH0 PUSH2 0x1D78 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 SELFBALANCE LT ISZERO PUSH2 0x1DBF JUMPI ADDRESS PUSH1 0x40 MLOAD PUSH32 0xCD78605900000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1DB6 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP5 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1DE7 SWAP2 SWAP1 PUSH2 0x2935 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1E21 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1E26 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1E36 DUP7 DUP4 DUP4 PUSH2 0x1E41 JUMP JUMPDEST SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1E56 JUMPI PUSH2 0x1E51 DUP3 PUSH2 0x1ECE JUMP JUMPDEST PUSH2 0x1EC6 JUMP JUMPDEST PUSH0 DUP3 MLOAD EQ DUP1 ISZERO PUSH2 0x1E7C JUMPI POP PUSH0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EXTCODESIZE EQ JUMPDEST ISZERO PUSH2 0x1EBE JUMPI DUP4 PUSH1 0x40 MLOAD PUSH32 0x9996B31500000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1EB5 SWAP2 SWAP1 PUSH2 0x2270 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP2 SWAP1 POP PUSH2 0x1EC7 JUMP JUMPDEST JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD GT ISZERO PUSH2 0x1EE0 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH32 0x1425EA4200000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1FA2 JUMPI PUSH2 0x1FA1 PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH0 PUSH0 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1FBE DUP2 PUSH2 0x1FAC JUMP JUMPDEST DUP2 EQ PUSH2 0x1FC8 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1FD9 DUP2 PUSH2 0x1FB5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FF4 JUMPI PUSH2 0x1FF3 PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2001 DUP5 DUP3 DUP6 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2013 DUP2 PUSH2 0x1FAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2042 DUP3 PUSH2 0x2019 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2052 DUP2 PUSH2 0x2038 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH12 0xFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2078 DUP2 PUSH2 0x2058 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x209A DUP2 PUSH2 0x207E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x5 DUP2 LT PUSH2 0x20DE JUMPI PUSH2 0x20DD PUSH2 0x20A0 JUMP JUMPDEST JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP PUSH2 0x20EE DUP3 PUSH2 0x20CD JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x20FD DUP3 PUSH2 0x20E1 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x210D DUP2 PUSH2 0x20F3 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0xE0 DUP3 ADD PUSH0 DUP3 ADD MLOAD PUSH2 0x2127 PUSH0 DUP6 ADD DUP3 PUSH2 0x200A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x213A PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2049 JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x214D PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2049 JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH2 0x2160 PUSH1 0x60 DUP6 ADD DUP3 PUSH2 0x206F JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD PUSH2 0x2173 PUSH1 0x80 DUP6 ADD DUP3 PUSH2 0x2091 JUMP JUMPDEST POP PUSH1 0xA0 DUP3 ADD MLOAD PUSH2 0x2186 PUSH1 0xA0 DUP6 ADD DUP3 PUSH2 0x2091 JUMP JUMPDEST POP PUSH1 0xC0 DUP3 ADD MLOAD PUSH2 0x2199 PUSH1 0xC0 DUP6 ADD DUP3 PUSH2 0x2104 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0xE0 DUP3 ADD SWAP1 POP PUSH2 0x21B2 PUSH0 DUP4 ADD DUP5 PUSH2 0x2113 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0xFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x21CE DUP2 PUSH2 0x21B8 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x21E7 PUSH0 DUP4 ADD DUP5 PUSH2 0x21C5 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2210 PUSH2 0x220B PUSH2 0x2206 DUP5 PUSH2 0x2019 JUMP JUMPDEST PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x2019 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2221 DUP3 PUSH2 0x21F6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2232 DUP3 PUSH2 0x2217 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2242 DUP2 PUSH2 0x2228 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x225B PUSH0 DUP4 ADD DUP5 PUSH2 0x2239 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x226A DUP2 PUSH2 0x2038 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2283 PUSH0 DUP4 ADD DUP5 PUSH2 0x2261 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x229D DUP2 PUSH2 0x2289 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22B6 PUSH0 DUP4 ADD DUP5 PUSH2 0x2294 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x22D1 DUP2 PUSH2 0x22BC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x22EA PUSH0 DUP4 ADD DUP5 PUSH2 0x22C8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x22F9 DUP2 PUSH2 0x2038 JUMP JUMPDEST DUP2 EQ PUSH2 0x2303 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2314 DUP2 PUSH2 0x22F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2323 DUP2 PUSH2 0x207E JUMP JUMPDEST DUP2 EQ PUSH2 0x232D JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x233E DUP2 PUSH2 0x231A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2356 DUP2 PUSH2 0x2344 JUMP JUMPDEST DUP2 EQ PUSH2 0x2360 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2371 DUP2 PUSH2 0x234D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH0 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2390 JUMPI PUSH2 0x238F PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x239D DUP9 DUP3 DUP10 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP6 POP POP PUSH1 0x20 PUSH2 0x23AE DUP9 DUP3 DUP10 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP5 POP POP PUSH1 0x40 PUSH2 0x23BF DUP9 DUP3 DUP10 ADD PUSH2 0x2330 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x60 PUSH2 0x23D0 DUP9 DUP3 DUP10 ADD PUSH2 0x2330 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x80 PUSH2 0x23E1 DUP9 DUP3 DUP10 ADD PUSH2 0x2363 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 SWAP1 SWAP4 POP JUMP JUMPDEST PUSH2 0x23F7 DUP2 PUSH2 0x1FAC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x2410 PUSH0 DUP4 ADD DUP5 PUSH2 0x23EE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x242D JUMPI PUSH2 0x242C PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x243A DUP7 DUP3 DUP8 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x244B DUP7 DUP3 DUP8 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x245C DUP7 DUP3 DUP8 ADD PUSH2 0x2330 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x247C JUMPI PUSH2 0x247B PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2489 DUP6 DUP3 DUP7 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x249A DUP6 DUP3 DUP7 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x24AD DUP2 PUSH2 0x21B8 JUMP JUMPDEST DUP2 EQ PUSH2 0x24B7 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x24C8 DUP2 PUSH2 0x24A4 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x24E4 JUMPI PUSH2 0x24E3 PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x24F1 DUP6 DUP3 DUP7 ADD PUSH2 0x24BA JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2502 DUP6 DUP3 DUP7 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH0 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2522 JUMPI PUSH2 0x2521 PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x252F DUP6 DUP3 DUP7 ADD PUSH2 0x1FCB JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2540 DUP6 DUP3 DUP7 ADD PUSH2 0x2363 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x255F JUMPI PUSH2 0x255E PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x256C DUP5 DUP3 DUP6 ADD PUSH2 0x2306 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x257E DUP2 PUSH2 0x207E JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x258D DUP2 PUSH2 0x2344 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x25A6 PUSH0 DUP4 ADD DUP8 PUSH2 0x2575 JUMP JUMPDEST PUSH2 0x25B3 PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x2575 JUMP JUMPDEST PUSH2 0x25C0 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x25CD PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x25E9 PUSH0 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x60 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2605 DUP3 PUSH2 0x25EF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x2616 DUP3 PUSH2 0x25FB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x262E PUSH2 0x2629 DUP3 PUSH2 0x2038 JUMP JUMPDEST PUSH2 0x260C JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x264E PUSH2 0x2649 DUP3 PUSH2 0x1FAC JUMP JUMPDEST PUSH2 0x2634 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 DUP2 PUSH1 0xC0 SHL SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x266A DUP3 PUSH2 0x2654 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2682 PUSH2 0x267D DUP3 PUSH2 0x207E JUMP JUMPDEST PUSH2 0x2660 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2693 DUP3 DUP7 PUSH2 0x261D JUMP JUMPDEST PUSH1 0x14 DUP3 ADD SWAP2 POP PUSH2 0x26A3 DUP3 DUP6 PUSH2 0x263D JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP2 POP PUSH2 0x26B3 DUP3 DUP5 PUSH2 0x2671 JUMP JUMPDEST PUSH1 0x8 DUP3 ADD SWAP2 POP DUP2 SWAP1 POP SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH2 0x26FB DUP3 PUSH2 0x2344 JUMP JUMPDEST SWAP2 POP PUSH2 0x2706 DUP4 PUSH2 0x2344 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 SUB SWAP1 POP DUP2 DUP2 GT ISZERO PUSH2 0x271E JUMPI PUSH2 0x271D PUSH2 0x26C4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x2737 PUSH0 DUP4 ADD DUP6 PUSH2 0x2584 JUMP JUMPDEST PUSH2 0x2744 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x275E PUSH0 DUP4 ADD DUP6 PUSH2 0x21C5 JUMP JUMPDEST PUSH2 0x276B PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2261 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x277C DUP3 PUSH2 0x2344 JUMP JUMPDEST SWAP2 POP PUSH2 0x2787 DUP4 PUSH2 0x2344 JUMP JUMPDEST SWAP3 POP DUP3 DUP3 ADD SWAP1 POP DUP1 DUP3 GT ISZERO PUSH2 0x279F JUMPI PUSH2 0x279E PUSH2 0x26C4 JUMP JUMPDEST JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x27C8 PUSH2 0x27C3 PUSH2 0x27BE DUP5 PUSH2 0x27A5 JUMP JUMPDEST PUSH2 0x21ED JUMP JUMPDEST PUSH2 0x22BC JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x27D8 DUP2 PUSH2 0x27AE JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x27F1 PUSH0 DUP4 ADD DUP6 PUSH2 0x27CF JUMP JUMPDEST PUSH2 0x27FE PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x60 DUP3 ADD SWAP1 POP PUSH2 0x2818 PUSH0 DUP4 ADD DUP7 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x2825 PUSH1 0x20 DUP4 ADD DUP6 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x2832 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x284D PUSH0 DUP4 ADD DUP6 PUSH2 0x2261 JUMP JUMPDEST PUSH2 0x285A PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x2584 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH2 0x2897 DUP2 PUSH2 0x2289 JUMP JUMPDEST DUP2 EQ PUSH2 0x28A1 JUMPI PUSH0 PUSH0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28B2 DUP2 PUSH2 0x288E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x28CD JUMPI PUSH2 0x28CC PUSH2 0x1FA8 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x28DA DUP5 DUP3 DUP6 ADD PUSH2 0x28A4 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x290F DUP3 PUSH2 0x28E3 JUMP JUMPDEST PUSH2 0x2919 DUP2 DUP6 PUSH2 0x28ED JUMP JUMPDEST SWAP4 POP PUSH2 0x2929 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x28F7 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x2940 DUP3 DUP5 PUSH2 0x2905 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 STATICCALL 0x2C DUP6 0xE2 CODECOPY 0xD7 PUSH21 0xB1506CAE5C4C4677B92D45B9017BC2F801C3633F43 PUSH32 0x28254B64736F6C634300081E0033000000000000000000000000000000000000 ",
							"sourceMap": "1963:14673:11:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16516:118;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4084:20;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;16059:76;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9587:65;;;:::i;:::-;;4180:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1850:84:7;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:0;;;:::i;:::-;;16234:91:11;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9399:61;;;:::i;:::-;;1638:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;11096:1249:11;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;13510:444;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;15397:536;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9006:236;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;14377:759;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2162:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;9908:330;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;12648:631;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2543:215:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;16516:118:11;16576:13;;:::i;:::-;16608:9;:19;16618:8;16608:19;;;;;;;;;;;16601:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;:::i;:::-;;;;;;;;16516:118;;;:::o;4084:20::-;;;;;;;;;;;;;:::o;16059:76::-;16098:6;16123:5;16116:12;;16059:76;:::o;9587:65::-;1531:13:0;:11;:13::i;:::-;9635:10:11::1;:8;:10::i;:::-;9587:65::o:0;4180:23::-;;;;;;;;;;;;;:::o;1850:84:7:-;1897:4;1920:7;;;;;;;;;;;1913:14;;1850:84;:::o;2293:101:0:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;16234:91:11:-;16281:5;16305:13;16298:20;;16234:91;:::o;9399:61::-;1531:13:0;:11;:13::i;:::-;9445:8:11::1;:6;:8::i;:::-;9399:61::o:0;1638:85:0:-;1684:7;1710:6;;;;;;;;;;1703:13;;1638:85;:::o;11096:1249:11:-;11300:16;2356:21:8;:19;:21::i;:::-;1474:19:7::1;:17;:19::i;:::-;11352:1:11::2;11332:22;;:8;:22;;::::0;11328:48:::2;;11363:13;;;;;;;;;;;;;;11328:48;11412:1;11404:10;;11390;:24;:44;;;;11433:1;11418:11;:16;;;11390:44;11386:84;;;11455:15;;;;;;;;;;;;;;11386:84;11496:15;11484:8;:27;;;11480:55;;11520:15;;;;;;;;;;;;;;11480:55;11559:1;11549:6;:11:::0;11545:36:::2;;11569:12;;;;;;;;;;;;;;11545:36;11603:52;11619:10;11631;11643:11;11603:15;:52::i;:::-;11592:63;;11699:11;11669:41;;;;;;;;:::i;:::-;;:9;:19;11679:8;11669:19;;;;;;;;;;;:26;;;;;;;;;;;;:41;;;;;;;;:::i;:::-;;;11665:69;;11719:15;;;;;;;;;;;;;;11665:69;11745:16;11764:9;:19;11774:8;11764:19;;;;;;;;;;;11745:38;;11808:10;11793:1;:12;;:25;;;;11840:10;11828:1;:9;;;:22;;;;;;;;;;;;;;;;;;11873:8;11860:1;:10;;;:21;;;;;;;;;;;;;;;;;;11902:17;:6;:15;:17::i;:::-;11891:1;:8;;;:28;;;;;;;;;;;;;;;;;;11995:8;11982:1;:10;;;:21;;;;;;;;;;;;;;;;;;12029:11;12013:1;:13;;;:27;;;;;;;;;;;;;;;;;;12061:11;12050:1;:8;;;:22;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;12083:57;12106:10;12126:4;12133:6;12083:5;:22;;;;:57;;;;;;:::i;:::-;12229:10;12205;12156:182;;12183:8;12156:182;12253:11;12278:8;12300;12322:6;12156:182;;;;;;;;;:::i;:::-;;;;;;;;11318:1027;2398:20:8::0;:18;:20::i;:::-;11096:1249:11;;;;;;;:::o;13510:444::-;2356:21:8;:19;:21::i;:::-;1474:19:7::1;:17;:19::i;:::-;13590:16:11::2;13609:9;:19;13619:8;13609:19;;;;;;;;;;;13590:38;;13654:11;13642:23;;;;;;;;:::i;:::-;;:1;:8;;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;13638:45;;13674:9;;;;;;;;;;;;;;13638:45;13711:1;:9;;;;;;;;;;;;13697:23;;:10;:23;;;13693:48;;13729:12;;;;;;;;;;;;;;13693:48;13763:15;13752:1;:8;;;:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;13788:13;13804:1;:8;;;;;;;;;;;;13788:24;;;;13833:1;13822;:8;;;:12;;;;;;;;;;;;;;;;;;13857:1;13849:5;:9;13845:51;;;13860:36;13879:1;:9;;;;;;;;;;;;13890:5;13860;:18;;;;:36;;;;;:::i;:::-;13845:51;13930:1;:9;;;;;;;;;;;;13911:36;;13920:8;13911:36;13941:5;13911:36;;;;;;:::i;:::-;;;;;;;;13580:374;;2398:20:8::0;:18;:20::i;:::-;13510:444:11;:::o;15397:536::-;2356:21:8;:19;:21::i;:::-;1474:19:7::1;:17;:19::i;:::-;15498:16:11::2;15517:9;:19;15527:8;15517:19;;;;;;;;;;;15498:38;;15562:11;15550:23;;;;;;;;:::i;:::-;;:1;:8;;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;15546:45;;15582:9;;;;;;;;;;;;;;15546:45;15623:1;:10;;;;;;;;;;;;15605:28;;:15;:28;15601:61;;;15642:20;;;;;;;;;;;;;;15601:61;15690:1;:9;;;;;;;;;;;;15676:23;;:10;:23;;;15672:48;;15708:12;;;;;;;;;;;;;;15672:48;15742:15;15731:1;:8;;;:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;15767:13;15783:1;:8;;;;;;;;;;;;15767:24;;;;15812:1;15801;:8;;;:12;;;;;;;;;;;;;;;;;;15836:1;15828:5;:9;15824:51;;;15839:36;15858:1;:9;;;;;;;;;;;;15869:5;15839;:18;;;;:36;;;;;:::i;:::-;15824:51;15909:1;:9;;;;;;;;;;;;15890:36;;15899:8;15890:36;15920:5;15890:36;;;;;;:::i;:::-;;;;;;;;15488:445;;2398:20:8::0;:18;:20::i;:::-;15397:536:11;:::o;9006:236::-;9139:16;9201:7;9210:10;9222:11;9184:50;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;9174:61;;;;;;9167:68;;9006:236;;;;;:::o;14377:759::-;2356:21:8;:19;:21::i;:::-;1474:19:7::1;:17;:19::i;:::-;14524:1:11::2;14503:23;;:9;:23;;::::0;14499:49:::2;;14535:13;;;;;;;;;;;;;;14499:49;14559:16;14578:9;:19;14588:8;14578:19;;;;;;;;;;;14559:38;;14623:11;14611:23;;;;;;;;:::i;:::-;;:1;:8;;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;14607:45;;14643:9;;;;;;;;;;;;;;14607:45;14680:1;:10;;;;;;;;;;;;14666:24;;:10;:24;;;14662:50;;14699:13;;;;;;;;;;;;;;14662:50;14734:15;14723:1;:8;;;:26;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;14759:13;14775:1;:8;;;;;;;;;;;;14759:24;;;;14804:1;14793;:8;;;:12;;;;;;;;;;;;;;;;;;14874:11;14888:37;14900:5;14907:6;;;;;;;;;;;14888:37;;2302:6;14888:11;:37::i;:::-;14874:51;;14935:11;14957:3;14949:5;:11;;;;:::i;:::-;14935:25;;14981:1;14975:3;:7;14971:47;;;14984:34;15003:9;15014:3;14984:5;:18;;;;:34;;;;;:::i;:::-;14971:47;15038:1;15032:3;:7;15028:46;;;15041:33;15060:8;;;;;;;;;;;15070:3;15041:5;:18;;;;:33;;;;;:::i;:::-;15028:46;15109:9;15090:39;;15099:8;15090:39;15120:3;15125;15090:39;;;;;;;:::i;:::-;;;;;;;;14489:647;;;;2398:20:8::0;:18;:20::i;:::-;14377:759:11;;:::o;2162:42::-;2199:5;2162:42;:::o;9908:330::-;1531:13:0;:11;:13::i;:::-;10041:1:11::1;10020:23;;:9;:23;;::::0;10016:49:::1;;10052:13;;;;;;;;;;;;;;10016:49;2199:5;10079:21;;:7;:21;;;10075:49;;;10109:15;;;;;;;;;;;;;;10075:49;10143:7;10134:6;;:16;;;;;;;;;;;;;;;;;;10171:9;10160:8;;:20;;;;;;;;;;;;;;;;;;10195:36;10212:7;10221:9;10195:36;;;;;;;:::i;:::-;;;;;;;;9908:330:::0;;:::o;12648:631::-;2356:21:8;:19;:21::i;:::-;1474:19:7::1;:17;:19::i;:::-;12764:16:11::2;12783:9;:19;12793:8;12783:19;;;;;;;;;;;12764:38;;12828:11;12816:23;;;;;;;;:::i;:::-;;:1;:8;;;;;;;;;;;;:23;;;;;;;;:::i;:::-;;;12812:45;;12848:9;;;;;;;;;;;;;;12812:45;12885:1;:9;;;;;;;;;;;;12871:23;;:10;:23;;;12867:48;;12903:12;;;;;;;;;;;;;;12867:48;12939:1;12929:6;:11:::0;12925:36:::2;;12949:12;;;;;;;;;;;;;;12925:36;13020:14;13057:6;13045:1;:8;;;;;;;;;;;;13037:17;;:26;;;;:::i;:::-;13020:43;;13086:16;13077:25:::0;::::2;:6;:25;13073:53;;;13111:15;;;;;;;;;;;;;;13073:53;13147:17;:6;:15;:17::i;:::-;13136:1;:8;;;:28;;;;;;;;;;;;;;;;;;13175:57;13198:10;13218:4;13225:6;13175:5;:22;;;;:57;;;;;;:::i;:::-;13255:8;13248:24;13265:6;13248:24;;;;;;:::i;:::-;;;;;;;;12754:525;;2398:20:8::0;:18;:20::i;:::-;12648:631:11;;:::o;2543:215:0:-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;1796:162::-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2710:117:7:-;1721:16;:14;:16::i;:::-;2778:5:::1;2768:7;;:15;;;;;;;;;;;;;;;;;;2798:22;2807:12;:10;:12::i;:::-;2798:22;;;;;;:::i;:::-;;;;;;;;2710:117::o:0;2912:187:0:-;2985:16;3004:6;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;2463:115:7:-;1474:19;:17;:19::i;:::-;2532:4:::1;2522:7:::0;::::1;:14;;;;;;;;;;;;;;;;;;2551:20;2558:12;:10;:12::i;:::-;2551:20;;;;;;:::i;:::-;;;;;;;;2463:115::o:0;2431:307:8:-;1755:1;2558:7;;:18;2554:86;;2599:30;;;;;;;;;;;;;;2554:86;1755:1;2714:7;:17;;;;2431:307::o;2002:128:7:-;2067:8;:6;:8::i;:::-;2063:61;;;2098:15;;;;;;;;;;;;;;2063:61;2002:128::o;11291:213:10:-;11347:6;11377:16;11369:24;;:5;:24;11365:103;;;11447:2;11451:5;11416:41;;;;;;;;;;;;:::i;:::-;;;;;;;;11365:103;11491:5;11477:20;;11291:213;;;:::o;1702:188:4:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;2744:208:8:-;1713:1;2924:7;:21;;;;2744:208::o;1303:160:4:-;1385:71;1405:5;1427;:14;;;1444:2;1448:5;1412:43;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1385:19;:71::i;:::-;1303:160;;;:::o;3803:4116:9:-;3885:14;4232:13;4252:1;4248;:5;4232:21;;4312:13;4437:1;4433:6;4430:1;4427;4420:20;4493:5;4489:2;4486:13;4478:5;4474:2;4470:14;4466:34;4457:43;;4392:122;4604:1;4595:5;:10;4591:368;;4933:11;4925:5;:19;;;;;:::i;:::-;;;4918:26;;;;;;4591:368;5080:5;5065:11;:20;5061:88;;5112:22;;;;;;;;;;;;;;5061:88;5404:17;5539:11;5536:1;5533;5526:25;5513:38;;5667:5;5656:9;5653:20;5646:5;5642:32;5633:41;;5711:9;5704:5;5700:21;5691:30;;5939:12;5973:11;5969:1;:15;5954:11;:31;5939:46;;6105:4;6092:11;6088:22;6073:37;;6197:4;6190:5;6186:16;6177:25;;6354:1;6347:4;6340;6337:1;6333:12;6329:23;6325:31;6317:39;;6453:4;6445:5;:12;6436:21;;;;6775:15;6813:1;6798:11;6794:1;:15;6793:21;6775:39;;7060:7;7046:11;:21;7042:1;:25;7031:36;;;;7129:7;7115:11;:21;7111:1;:25;7100:36;;;;7199:7;7185:11;:21;7181:1;:25;7170:36;;;;7269:7;7255:11;:21;7251:1;:25;7240:36;;;;7339:7;7325:11;:21;7321:1;:25;7310:36;;;;7410:7;7396:11;:21;7392:1;:25;7381:36;;;;7868:7;7860:5;:15;7851:24;;7889:13;;;;;3803:4116;;;;;;:::o;656:96:6:-;709:7;735:10;728:17;;656:96;:::o;2202:126:7:-;2265:8;:6;:8::i;:::-;2260:62;;2296:15;;;;;;;;;;;;;;2260:62;2202:126::o;4059:629:4:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:5:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;:::o;88:117:12:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:139::-;591:5;629:6;616:20;607:29;;645:33;672:5;645:33;:::i;:::-;545:139;;;;:::o;690:329::-;749:6;798:2;786:9;777:7;773:23;769:32;766:119;;;804:79;;:::i;:::-;766:119;924:1;949:53;994:7;985:6;974:9;970:22;949:53;:::i;:::-;939:63;;895:117;690:329;;;;:::o;1025:108::-;1102:24;1120:5;1102:24;:::i;:::-;1097:3;1090:37;1025:108;;:::o;1139:126::-;1176:7;1216:42;1209:5;1205:54;1194:65;;1139:126;;;:::o;1271:96::-;1308:7;1337:24;1355:5;1337:24;:::i;:::-;1326:35;;1271:96;;;:::o;1373:108::-;1450:24;1468:5;1450:24;:::i;:::-;1445:3;1438:37;1373:108;;:::o;1487:109::-;1523:7;1563:26;1556:5;1552:38;1541:49;;1487:109;;;:::o;1602:105::-;1677:23;1694:5;1677:23;:::i;:::-;1672:3;1665:36;1602:105;;:::o;1713:101::-;1749:7;1789:18;1782:5;1778:30;1767:41;;1713:101;;;:::o;1820:105::-;1895:23;1912:5;1895:23;:::i;:::-;1890:3;1883:36;1820:105;;:::o;1931:180::-;1979:77;1976:1;1969:88;2076:4;2073:1;2066:15;2100:4;2097:1;2090:15;2117:116;2201:1;2194:5;2191:12;2181:46;;2207:18;;:::i;:::-;2181:46;2117:116;:::o;2239:133::-;2287:7;2316:5;2305:16;;2322:44;2360:5;2322:44;:::i;:::-;2239:133;;;:::o;2378:::-;2437:9;2470:35;2499:5;2470:35;:::i;:::-;2457:48;;2378:133;;;:::o;2517:139::-;2603:46;2643:5;2603:46;:::i;:::-;2598:3;2591:59;2517:139;;:::o;2726:1406::-;2871:4;2866:3;2862:14;2964:4;2957:5;2953:16;2947:23;2983:63;3040:4;3035:3;3031:14;3017:12;2983:63;:::i;:::-;2886:170;3141:4;3134:5;3130:16;3124:23;3160:63;3217:4;3212:3;3208:14;3194:12;3160:63;:::i;:::-;3066:167;3319:4;3312:5;3308:16;3302:23;3338:63;3395:4;3390:3;3386:14;3372:12;3338:63;:::i;:::-;3243:168;3495:4;3488:5;3484:16;3478:23;3514:61;3569:4;3564:3;3560:14;3546:12;3514:61;:::i;:::-;3421:164;3671:4;3664:5;3660:16;3654:23;3690:61;3745:4;3740:3;3736:14;3722:12;3690:61;:::i;:::-;3595:166;3850:4;3843:5;3839:16;3833:23;3869:61;3924:4;3919:3;3915:14;3901:12;3869:61;:::i;:::-;3771:169;4024:4;4017:5;4013:16;4007:23;4043:72;4109:4;4104:3;4100:14;4086:12;4043:72;:::i;:::-;3950:175;2840:1292;2726:1406;;:::o;4138:319::-;4279:4;4317:3;4306:9;4302:19;4294:27;;4331:119;4447:1;4436:9;4432:17;4423:6;4331:119;:::i;:::-;4138:319;;;;:::o;4463:89::-;4499:7;4539:6;4532:5;4528:18;4517:29;;4463:89;;;:::o;4558:115::-;4643:23;4660:5;4643:23;:::i;:::-;4638:3;4631:36;4558:115;;:::o;4679:218::-;4770:4;4808:2;4797:9;4793:18;4785:26;;4821:69;4887:1;4876:9;4872:17;4863:6;4821:69;:::i;:::-;4679:218;;;;:::o;4903:60::-;4931:3;4952:5;4945:12;;4903:60;;;:::o;4969:142::-;5019:9;5052:53;5070:34;5079:24;5097:5;5079:24;:::i;:::-;5070:34;:::i;:::-;5052:53;:::i;:::-;5039:66;;4969:142;;;:::o;5117:126::-;5167:9;5200:37;5231:5;5200:37;:::i;:::-;5187:50;;5117:126;;;:::o;5249:140::-;5313:9;5346:37;5377:5;5346:37;:::i;:::-;5333:50;;5249:140;;;:::o;5395:159::-;5496:51;5541:5;5496:51;:::i;:::-;5491:3;5484:64;5395:159;;:::o;5560:250::-;5667:4;5705:2;5694:9;5690:18;5682:26;;5718:85;5800:1;5789:9;5785:17;5776:6;5718:85;:::i;:::-;5560:250;;;;:::o;5816:118::-;5903:24;5921:5;5903:24;:::i;:::-;5898:3;5891:37;5816:118;;:::o;5940:222::-;6033:4;6071:2;6060:9;6056:18;6048:26;;6084:71;6152:1;6141:9;6137:17;6128:6;6084:71;:::i;:::-;5940:222;;;;:::o;6168:90::-;6202:7;6245:5;6238:13;6231:21;6220:32;;6168:90;;;:::o;6264:109::-;6345:21;6360:5;6345:21;:::i;:::-;6340:3;6333:34;6264:109;;:::o;6379:210::-;6466:4;6504:2;6493:9;6489:18;6481:26;;6517:65;6579:1;6568:9;6564:17;6555:6;6517:65;:::i;:::-;6379:210;;;;:::o;6595:86::-;6630:7;6670:4;6663:5;6659:16;6648:27;;6595:86;;;:::o;6687:112::-;6770:22;6786:5;6770:22;:::i;:::-;6765:3;6758:35;6687:112;;:::o;6805:214::-;6894:4;6932:2;6921:9;6917:18;6909:26;;6945:67;7009:1;6998:9;6994:17;6985:6;6945:67;:::i;:::-;6805:214;;;;:::o;7025:122::-;7098:24;7116:5;7098:24;:::i;:::-;7091:5;7088:35;7078:63;;7137:1;7134;7127:12;7078:63;7025:122;:::o;7153:139::-;7199:5;7237:6;7224:20;7215:29;;7253:33;7280:5;7253:33;:::i;:::-;7153:139;;;;:::o;7298:120::-;7370:23;7387:5;7370:23;:::i;:::-;7363:5;7360:34;7350:62;;7408:1;7405;7398:12;7350:62;7298:120;:::o;7424:137::-;7469:5;7507:6;7494:20;7485:29;;7523:32;7549:5;7523:32;:::i;:::-;7424:137;;;;:::o;7567:77::-;7604:7;7633:5;7622:16;;7567:77;;;:::o;7650:122::-;7723:24;7741:5;7723:24;:::i;:::-;7716:5;7713:35;7703:63;;7762:1;7759;7752:12;7703:63;7650:122;:::o;7778:139::-;7824:5;7862:6;7849:20;7840:29;;7878:33;7905:5;7878:33;:::i;:::-;7778:139;;;;:::o;7923:907::-;8016:6;8024;8032;8040;8048;8097:3;8085:9;8076:7;8072:23;8068:33;8065:120;;;8104:79;;:::i;:::-;8065:120;8224:1;8249:53;8294:7;8285:6;8274:9;8270:22;8249:53;:::i;:::-;8239:63;;8195:117;8351:2;8377:53;8422:7;8413:6;8402:9;8398:22;8377:53;:::i;:::-;8367:63;;8322:118;8479:2;8505:52;8549:7;8540:6;8529:9;8525:22;8505:52;:::i;:::-;8495:62;;8450:117;8606:2;8632:52;8676:7;8667:6;8656:9;8652:22;8632:52;:::i;:::-;8622:62;;8577:117;8733:3;8760:53;8805:7;8796:6;8785:9;8781:22;8760:53;:::i;:::-;8750:63;;8704:119;7923:907;;;;;;;;:::o;8836:118::-;8923:24;8941:5;8923:24;:::i;:::-;8918:3;8911:37;8836:118;;:::o;8960:222::-;9053:4;9091:2;9080:9;9076:18;9068:26;;9104:71;9172:1;9161:9;9157:17;9148:6;9104:71;:::i;:::-;8960:222;;;;:::o;9188:617::-;9264:6;9272;9280;9329:2;9317:9;9308:7;9304:23;9300:32;9297:119;;;9335:79;;:::i;:::-;9297:119;9455:1;9480:53;9525:7;9516:6;9505:9;9501:22;9480:53;:::i;:::-;9470:63;;9426:117;9582:2;9608:53;9653:7;9644:6;9633:9;9629:22;9608:53;:::i;:::-;9598:63;;9553:118;9710:2;9736:52;9780:7;9771:6;9760:9;9756:22;9736:52;:::i;:::-;9726:62;;9681:117;9188:617;;;;;:::o;9811:474::-;9879:6;9887;9936:2;9924:9;9915:7;9911:23;9907:32;9904:119;;;9942:79;;:::i;:::-;9904:119;10062:1;10087:53;10132:7;10123:6;10112:9;10108:22;10087:53;:::i;:::-;10077:63;;10033:117;10189:2;10215:53;10260:7;10251:6;10240:9;10236:22;10215:53;:::i;:::-;10205:63;;10160:118;9811:474;;;;;:::o;10291:120::-;10363:23;10380:5;10363:23;:::i;:::-;10356:5;10353:34;10343:62;;10401:1;10398;10391:12;10343:62;10291:120;:::o;10417:137::-;10462:5;10500:6;10487:20;10478:29;;10516:32;10542:5;10516:32;:::i;:::-;10417:137;;;;:::o;10560:472::-;10627:6;10635;10684:2;10672:9;10663:7;10659:23;10655:32;10652:119;;;10690:79;;:::i;:::-;10652:119;10810:1;10835:52;10879:7;10870:6;10859:9;10855:22;10835:52;:::i;:::-;10825:62;;10781:116;10936:2;10962:53;11007:7;10998:6;10987:9;10983:22;10962:53;:::i;:::-;10952:63;;10907:118;10560:472;;;;;:::o;11038:474::-;11106:6;11114;11163:2;11151:9;11142:7;11138:23;11134:32;11131:119;;;11169:79;;:::i;:::-;11131:119;11289:1;11314:53;11359:7;11350:6;11339:9;11335:22;11314:53;:::i;:::-;11304:63;;11260:117;11416:2;11442:53;11487:7;11478:6;11467:9;11463:22;11442:53;:::i;:::-;11432:63;;11387:118;11038:474;;;;;:::o;11518:329::-;11577:6;11626:2;11614:9;11605:7;11601:23;11597:32;11594:119;;;11632:79;;:::i;:::-;11594:119;11752:1;11777:53;11822:7;11813:6;11802:9;11798:22;11777:53;:::i;:::-;11767:63;;11723:117;11518:329;;;;:::o;11853:115::-;11938:23;11955:5;11938:23;:::i;:::-;11933:3;11926:36;11853:115;;:::o;11974:118::-;12061:24;12079:5;12061:24;:::i;:::-;12056:3;12049:37;11974:118;;:::o;12098:545::-;12271:4;12309:3;12298:9;12294:19;12286:27;;12323:69;12389:1;12378:9;12374:17;12365:6;12323:69;:::i;:::-;12402:70;12468:2;12457:9;12453:18;12444:6;12402:70;:::i;:::-;12482:72;12550:2;12539:9;12535:18;12526:6;12482:72;:::i;:::-;12564;12632:2;12621:9;12617:18;12608:6;12564:72;:::i;:::-;12098:545;;;;;;;:::o;12649:222::-;12742:4;12780:2;12769:9;12765:18;12757:26;;12793:71;12861:1;12850:9;12846:17;12837:6;12793:71;:::i;:::-;12649:222;;;;:::o;12877:94::-;12910:8;12958:5;12954:2;12950:14;12929:35;;12877:94;;;:::o;12977:::-;13016:7;13045:20;13059:5;13045:20;:::i;:::-;13034:31;;12977:94;;;:::o;13077:100::-;13116:7;13145:26;13165:5;13145:26;:::i;:::-;13134:37;;13077:100;;;:::o;13183:157::-;13288:45;13308:24;13326:5;13308:24;:::i;:::-;13288:45;:::i;:::-;13283:3;13276:58;13183:157;;:::o;13346:79::-;13385:7;13414:5;13403:16;;13346:79;;;:::o;13431:157::-;13536:45;13556:24;13574:5;13556:24;:::i;:::-;13536:45;:::i;:::-;13531:3;13524:58;13431:157;;:::o;13594:96::-;13628:8;13677:5;13672:3;13668:15;13647:36;;13594:96;;;:::o;13696:94::-;13734:7;13763:21;13778:5;13763:21;:::i;:::-;13752:32;;13696:94;;;:::o;13796:153::-;13899:43;13918:23;13935:5;13918:23;:::i;:::-;13899:43;:::i;:::-;13894:3;13887:56;13796:153;;:::o;13955:533::-;14121:3;14136:75;14207:3;14198:6;14136:75;:::i;:::-;14236:2;14231:3;14227:12;14220:19;;14249:75;14320:3;14311:6;14249:75;:::i;:::-;14349:2;14344:3;14340:12;14333:19;;14362:73;14431:3;14422:6;14362:73;:::i;:::-;14460:1;14455:3;14451:11;14444:18;;14479:3;14472:10;;13955:533;;;;;;:::o;14494:180::-;14542:77;14539:1;14532:88;14639:4;14636:1;14629:15;14663:4;14660:1;14653:15;14680:194;14720:4;14740:20;14758:1;14740:20;:::i;:::-;14735:25;;14774:20;14792:1;14774:20;:::i;:::-;14769:25;;14818:1;14815;14811:9;14803:17;;14842:1;14836:4;14833:11;14830:37;;;14847:18;;:::i;:::-;14830:37;14680:194;;;;:::o;14880:332::-;15001:4;15039:2;15028:9;15024:18;15016:26;;15052:71;15120:1;15109:9;15105:17;15096:6;15052:71;:::i;:::-;15133:72;15201:2;15190:9;15186:18;15177:6;15133:72;:::i;:::-;14880:332;;;;;:::o;15218:328::-;15337:4;15375:2;15364:9;15360:18;15352:26;;15388:69;15454:1;15443:9;15439:17;15430:6;15388:69;:::i;:::-;15467:72;15535:2;15524:9;15520:18;15511:6;15467:72;:::i;:::-;15218:328;;;;;:::o;15552:191::-;15592:3;15611:20;15629:1;15611:20;:::i;:::-;15606:25;;15645:20;15663:1;15645:20;:::i;:::-;15640:25;;15688:1;15685;15681:9;15674:16;;15709:3;15706:1;15703:10;15700:36;;;15716:18;;:::i;:::-;15700:36;15552:191;;;;:::o;15749:86::-;15795:7;15824:5;15813:16;;15749:86;;;:::o;15841:156::-;15898:9;15931:60;15947:43;15956:33;15983:5;15956:33;:::i;:::-;15947:43;:::i;:::-;15931:60;:::i;:::-;15918:73;;15841:156;;;:::o;16003:145::-;16097:44;16135:5;16097:44;:::i;:::-;16092:3;16085:57;16003:145;;:::o;16154:346::-;16282:4;16320:2;16309:9;16305:18;16297:26;;16333:78;16408:1;16397:9;16393:17;16384:6;16333:78;:::i;:::-;16421:72;16489:2;16478:9;16474:18;16465:6;16421:72;:::i;:::-;16154:346;;;;;:::o;16506:442::-;16655:4;16693:2;16682:9;16678:18;16670:26;;16706:71;16774:1;16763:9;16759:17;16750:6;16706:71;:::i;:::-;16787:72;16855:2;16844:9;16840:18;16831:6;16787:72;:::i;:::-;16869;16937:2;16926:9;16922:18;16913:6;16869:72;:::i;:::-;16506:442;;;;;;:::o;16954:332::-;17075:4;17113:2;17102:9;17098:18;17090:26;;17126:71;17194:1;17183:9;17179:17;17170:6;17126:71;:::i;:::-;17207:72;17275:2;17264:9;17260:18;17251:6;17207:72;:::i;:::-;16954:332;;;;;:::o;17292:180::-;17340:77;17337:1;17330:88;17437:4;17434:1;17427:15;17461:4;17458:1;17451:15;17478:116;17548:21;17563:5;17548:21;:::i;:::-;17541:5;17538:32;17528:60;;17584:1;17581;17574:12;17528:60;17478:116;:::o;17600:137::-;17654:5;17685:6;17679:13;17670:22;;17701:30;17725:5;17701:30;:::i;:::-;17600:137;;;;:::o;17743:345::-;17810:6;17859:2;17847:9;17838:7;17834:23;17830:32;17827:119;;;17865:79;;:::i;:::-;17827:119;17985:1;18010:61;18063:7;18054:6;18043:9;18039:22;18010:61;:::i;:::-;18000:71;;17956:125;17743:345;;;;:::o;18094:98::-;18145:6;18179:5;18173:12;18163:22;;18094:98;;;:::o;18198:147::-;18299:11;18336:3;18321:18;;18198:147;;;;:::o;18351:139::-;18440:6;18435:3;18430;18424:23;18481:1;18472:6;18467:3;18463:16;18456:27;18351:139;;;:::o;18496:386::-;18600:3;18628:38;18660:5;18628:38;:::i;:::-;18682:88;18763:6;18758:3;18682:88;:::i;:::-;18675:95;;18779:65;18837:6;18832:3;18825:4;18818:5;18814:16;18779:65;:::i;:::-;18869:6;18864:3;18860:16;18853:23;;18604:278;18496:386;;;;:::o;18888:271::-;19018:3;19040:93;19129:3;19120:6;19040:93;:::i;:::-;19033:100;;19150:3;19143:10;;18888:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2125000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"MAX_FEE_BPS()": "375",
								"cancel(bytes32)": "infinite",
								"computeBountyId(address,bytes32,uint64)": "infinite",
								"createBounty(address,bytes32,uint64,uint64,uint256)": "infinite",
								"feeBps()": "2512",
								"feeVault()": "2582",
								"fund(bytes32,uint256)": "infinite",
								"getBounty(bytes32)": "infinite",
								"owner()": "2586",
								"pause()": "infinite",
								"paused()": "2518",
								"refundExpired(bytes32)": "infinite",
								"renounceOwnership()": "infinite",
								"resolve(bytes32,address)": "infinite",
								"setFeeParams(uint16,address)": "infinite",
								"transferOwnership(address)": "infinite",
								"unpause()": "infinite",
								"usdc()": "infinite",
								"usdcDecimals()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1963,
									"end": 16636,
									"name": "PUSH",
									"source": 11,
									"value": "C0"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "CALLVALUE",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "CODESIZE",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "PUSHSIZE",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 7815,
									"end": 8562,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "tag",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7945,
									"end": 7957,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1713,
									"end": 1714,
									"name": "PUSH",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 1917,
									"end": 1924,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SWAP1",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "SSTORE",
									"source": 8
								},
								{
									"begin": 1917,
									"end": 1938,
									"name": "POP",
									"source": 8
								},
								{
									"begin": 1241,
									"end": 1246,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 7,
									"value": "1"
								},
								{
									"begin": 1231,
									"end": 1238,
									"name": "PUSH",
									"source": 7,
									"value": "0"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 7,
									"value": "100"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "EXP",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SLOAD",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP2",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "PUSH",
									"source": 7,
									"value": "FF"
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "NOT",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "AND",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "DUP4",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "ISZERO",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "MUL",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "OR",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SWAP1",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "SSTORE",
									"source": 7
								},
								{
									"begin": 1231,
									"end": 1246,
									"name": "POP",
									"source": 7
								},
								{
									"begin": 1297,
									"end": 1298,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1285,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 1273,
									"end": 1299,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 1350,
									"end": 1351,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "13"
								},
								{
									"begin": 1322,
									"end": 1353,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "tag",
									"source": 0,
									"value": "12"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 1322,
									"end": 1353,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "tag",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 1269,
									"end": 1364,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1392,
									"end": 1404,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1391,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "tag",
									"source": 0,
									"value": "14"
								},
								{
									"begin": 1373,
									"end": 1405,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1225,
									"end": 1412,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 8003,
									"end": 8004,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 7986,
									"end": 8005,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7986,
									"end": 8005,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 7986,
									"end": 7991,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 7986,
									"end": 8005,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 7986,
									"end": 8005,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 7986,
									"end": 8005,
									"modifierDepth": 1,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 7986,
									"end": 8044,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 7986,
									"end": 8044,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 7986,
									"end": 8044,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7986,
									"end": 8044,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8042,
									"end": 8043,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8021,
									"end": 8044,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8021,
									"end": 8044,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8021,
									"end": 8030,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8021,
									"end": 8044,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8021,
									"end": 8044,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8021,
									"end": 8044,
									"modifierDepth": 1,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 7986,
									"end": 8044,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "17"
								},
								{
									"begin": 7986,
									"end": 8044,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7986,
									"end": 8086,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 7986,
									"end": 8086,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 7986,
									"end": 8086,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 7986,
									"end": 8086,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8084,
									"end": 8085,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8060,
									"end": 8086,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8060,
									"end": 8086,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8060,
									"end": 8072,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8060,
									"end": 8086,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8060,
									"end": 8086,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8060,
									"end": 8086,
									"modifierDepth": 1,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 7986,
									"end": 8086,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "18"
								},
								{
									"begin": 7986,
									"end": 8086,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 7969,
									"end": 8117,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 7969,
									"end": 8117,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 7969,
									"end": 8117,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8104,
									"end": 8117,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 7969,
									"end": 8117,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "19"
								},
								{
									"begin": 7969,
									"end": 8117,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 2199,
									"end": 2204,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "3E8"
								},
								{
									"begin": 8131,
									"end": 8152,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFF"
								},
								{
									"begin": 8131,
									"end": 8152,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8131,
									"end": 8138,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8131,
									"end": 8152,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFF"
								},
								{
									"begin": 8131,
									"end": 8152,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8131,
									"end": 8152,
									"modifierDepth": 1,
									"name": "GT",
									"source": 11
								},
								{
									"begin": 8127,
									"end": 8176,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8127,
									"end": 8176,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8127,
									"end": 8176,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "A86B651200000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8161,
									"end": 8176,
									"modifierDepth": 1,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 8127,
									"end": 8176,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8127,
									"end": 8176,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8202,
									"end": 8207,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8187,
									"end": 8208,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8187,
									"end": 8208,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8187,
									"end": 8208,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 8187,
									"end": 8208,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8187,
									"end": 8208,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8187,
									"end": 8208,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8187,
									"end": 8208,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8187,
									"end": 8208,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 8187,
									"end": 8208,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8187,
									"end": 8208,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8325,
									"end": 8334,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8363,
									"end": 8368,
									"modifierDepth": 1,
									"name": "DUP5",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8378,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8348,
									"end": 8378,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8378,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "313CE567"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFF"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "E0"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "SHL",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "20"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "SUB",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "DUP7",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "GAS",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "STATICCALL",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "SWAP3",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "ISZERO",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "RETURNDATASIZE",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "1F"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "40"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "ADD",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "23"
								},
								{
									"begin": 8348,
									"end": 8380,
									"jumpType": "[in]",
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "22"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "21"
								},
								{
									"begin": 8348,
									"end": 8380,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8344,
									"end": 8470,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 8344,
									"end": 8470,
									"modifierDepth": 1,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": 8458,
									"end": 8459,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "6"
								},
								{
									"begin": 8452,
									"end": 8459,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8452,
									"end": 8459,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8344,
									"end": 8470,
									"modifierDepth": 1,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 8344,
									"end": 8470,
									"modifierDepth": 1,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 8344,
									"end": 8470,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 8344,
									"end": 8470,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8419,
									"end": 8420,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 8413,
									"end": 8420,
									"modifierDepth": 1,
									"name": "SWAP2",
									"source": 11
								},
								{
									"begin": 8413,
									"end": 8420,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8381,
									"end": 8431,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8344,
									"end": 8470,
									"modifierDepth": 1,
									"name": "tag",
									"source": 11,
									"value": "28"
								},
								{
									"begin": 8344,
									"end": 8470,
									"modifierDepth": 1,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 8495,
									"end": 8498,
									"modifierDepth": 1,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 8479,
									"end": 8498,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 8479,
									"end": 8498,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8479,
									"end": 8498,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 8479,
									"end": 8498,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8479,
									"end": 8498,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FF"
								},
								{
									"begin": 8479,
									"end": 8498,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8479,
									"end": 8498,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8479,
									"end": 8498,
									"modifierDepth": 1,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 8479,
									"end": 8498,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8479,
									"end": 8498,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8518,
									"end": 8525,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8515,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 8509,
									"end": 8515,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFF"
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFF"
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8509,
									"end": 8525,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 8546,
									"end": 8555,
									"modifierDepth": 1,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8543,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "3"
								},
								{
									"begin": 8535,
									"end": 8543,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "2"
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "100"
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "EXP",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "SLOAD",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "NOT",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "DUP4",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "PUSH",
									"source": 11,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "AND",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "MUL",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "OR",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "SWAP1",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "SSTORE",
									"source": 11
								},
								{
									"begin": 8535,
									"end": 8555,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7959,
									"end": 8562,
									"modifierDepth": 1,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 7815,
									"end": 8562,
									"name": "POP",
									"source": 11
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "JUMP",
									"source": 11
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "tag",
									"source": 0,
									"value": "15"
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3001,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3004,
									"end": 3010,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2985,
									"end": 3010,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3029,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 3020,
									"end": 3026,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 3020,
									"end": 3037,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 3083,
									"end": 3091,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3073,
									"end": 3081,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 3052,
									"end": 3092,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2975,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2912,
									"end": 3099,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 88,
									"end": 205,
									"name": "tag",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 88,
									"end": 205,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 197,
									"end": 198,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 194,
									"end": 195,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 187,
									"end": 199,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "tag",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 334,
									"end": 460,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 371,
									"end": 378,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 453,
									"name": "PUSH",
									"source": 12,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 404,
									"end": 409,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 400,
									"end": 454,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 389,
									"end": 454,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 334,
									"end": 460,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "tag",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 466,
									"end": 562,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 503,
									"end": 510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 550,
									"end": 555,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "34"
								},
								{
									"begin": 532,
									"end": 556,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 532,
									"end": 556,
									"name": "tag",
									"source": 12,
									"value": "51"
								},
								{
									"begin": 532,
									"end": 556,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 521,
									"end": 556,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 466,
									"end": 562,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "tag",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 568,
									"end": 690,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 659,
									"end": 664,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 641,
									"end": 665,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 641,
									"end": 665,
									"name": "tag",
									"source": 12,
									"value": "53"
								},
								{
									"begin": 641,
									"end": 665,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 634,
									"end": 639,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 631,
									"end": 666,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 680,
									"end": 681,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 677,
									"end": 678,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 670,
									"end": 682,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 621,
									"end": 684,
									"name": "tag",
									"source": 12,
									"value": "54"
								},
								{
									"begin": 621,
									"end": 684,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 568,
									"end": 690,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "tag",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 696,
									"end": 839,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 753,
									"end": 758,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 784,
									"end": 790,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 778,
									"end": 791,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 769,
									"end": 791,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 827,
									"end": 832,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "36"
								},
								{
									"begin": 800,
									"end": 833,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 800,
									"end": 833,
									"name": "tag",
									"source": 12,
									"value": "56"
								},
								{
									"begin": 800,
									"end": 833,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 696,
									"end": 839,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 934,
									"name": "tag",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 845,
									"end": 934,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 881,
									"end": 888,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 921,
									"end": 927,
									"name": "PUSH",
									"source": 12,
									"value": "FFFF"
								},
								{
									"begin": 914,
									"end": 919,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 910,
									"end": 928,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 899,
									"end": 928,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 899,
									"end": 928,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 934,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 845,
									"end": 934,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 845,
									"end": 934,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 845,
									"end": 934,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 940,
									"end": 1060,
									"name": "tag",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 940,
									"end": 1060,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1012,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1029,
									"end": 1034,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1012,
									"end": 1035,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "38"
								},
								{
									"begin": 1012,
									"end": 1035,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1012,
									"end": 1035,
									"name": "tag",
									"source": 12,
									"value": "59"
								},
								{
									"begin": 1012,
									"end": 1035,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1005,
									"end": 1010,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1002,
									"end": 1036,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 992,
									"end": 1054,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 992,
									"end": 1054,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1050,
									"end": 1051,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1047,
									"end": 1048,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1040,
									"end": 1052,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 992,
									"end": 1054,
									"name": "tag",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 992,
									"end": 1054,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 940,
									"end": 1060,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 940,
									"end": 1060,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "tag",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1122,
									"end": 1127,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1153,
									"end": 1159,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1147,
									"end": 1160,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1160,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 1138,
									"end": 1160,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1195,
									"end": 1200,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1201,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "39"
								},
								{
									"begin": 1169,
									"end": 1201,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1169,
									"end": 1201,
									"name": "tag",
									"source": 12,
									"value": "62"
								},
								{
									"begin": 1169,
									"end": 1201,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1066,
									"end": 1207,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1066,
									"end": 1207,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 2031,
									"name": "tag",
									"source": 12,
									"value": "3"
								},
								{
									"begin": 1213,
									"end": 2031,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1309,
									"end": 1315,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1317,
									"end": 1323,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1325,
									"end": 1331,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1333,
									"end": 1339,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1382,
									"end": 1385,
									"name": "PUSH",
									"source": 12,
									"value": "80"
								},
								{
									"begin": 1370,
									"end": 1379,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 1361,
									"end": 1368,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1357,
									"end": 1380,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 1353,
									"end": 1386,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 1350,
									"end": 1470,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 1350,
									"end": 1470,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1350,
									"end": 1470,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 1389,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1389,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 1389,
									"end": 1468,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1389,
									"end": 1468,
									"name": "tag",
									"source": 12,
									"value": "65"
								},
								{
									"begin": 1389,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1350,
									"end": 1470,
									"name": "tag",
									"source": 12,
									"value": "64"
								},
								{
									"begin": 1350,
									"end": 1470,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1509,
									"end": 1510,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 1534,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1590,
									"end": 1597,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1581,
									"end": 1587,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1570,
									"end": 1579,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1566,
									"end": 1588,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1534,
									"end": 1598,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1534,
									"end": 1598,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1534,
									"end": 1598,
									"name": "tag",
									"source": 12,
									"value": "66"
								},
								{
									"begin": 1534,
									"end": 1598,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1524,
									"end": 1598,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 1524,
									"end": 1598,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1480,
									"end": 1608,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1647,
									"end": 1649,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 1673,
									"end": 1736,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1728,
									"end": 1735,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1719,
									"end": 1725,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1708,
									"end": 1717,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1704,
									"end": 1726,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1673,
									"end": 1736,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1673,
									"end": 1736,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1673,
									"end": 1736,
									"name": "tag",
									"source": 12,
									"value": "67"
								},
								{
									"begin": 1673,
									"end": 1736,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1663,
									"end": 1736,
									"name": "SWAP4",
									"source": 12
								},
								{
									"begin": 1663,
									"end": 1736,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1618,
									"end": 1746,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1785,
									"end": 1787,
									"name": "PUSH",
									"source": 12,
									"value": "40"
								},
								{
									"begin": 1811,
									"end": 1875,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1867,
									"end": 1874,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1858,
									"end": 1864,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1847,
									"end": 1856,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1843,
									"end": 1865,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1811,
									"end": 1875,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1811,
									"end": 1875,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1811,
									"end": 1875,
									"name": "tag",
									"source": 12,
									"value": "68"
								},
								{
									"begin": 1811,
									"end": 1875,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1801,
									"end": 1875,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1801,
									"end": 1875,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1756,
									"end": 1885,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1924,
									"end": 1926,
									"name": "PUSH",
									"source": 12,
									"value": "60"
								},
								{
									"begin": 1950,
									"end": 2014,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 2006,
									"end": 2013,
									"name": "DUP8",
									"source": 12
								},
								{
									"begin": 1997,
									"end": 2003,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 1986,
									"end": 1995,
									"name": "DUP9",
									"source": 12
								},
								{
									"begin": 1982,
									"end": 2004,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 1950,
									"end": 2014,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "37"
								},
								{
									"begin": 1950,
									"end": 2014,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1950,
									"end": 2014,
									"name": "tag",
									"source": 12,
									"value": "69"
								},
								{
									"begin": 1950,
									"end": 2014,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 1940,
									"end": 2014,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1940,
									"end": 2014,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1895,
									"end": 2024,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 2031,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 2031,
									"name": "SWAP6",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 2031,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 2031,
									"name": "SWAP5",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 2031,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 2031,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 2031,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 1213,
									"end": 2031,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2037,
									"end": 2155,
									"name": "tag",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2037,
									"end": 2155,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2124,
									"end": 2148,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2142,
									"end": 2147,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2124,
									"end": 2148,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "35"
								},
								{
									"begin": 2124,
									"end": 2148,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2124,
									"end": 2148,
									"name": "tag",
									"source": 12,
									"value": "71"
								},
								{
									"begin": 2124,
									"end": 2148,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2119,
									"end": 2122,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2112,
									"end": 2149,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 2037,
									"end": 2155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2037,
									"end": 2155,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2037,
									"end": 2155,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2383,
									"name": "tag",
									"source": 12,
									"value": "13"
								},
								{
									"begin": 2161,
									"end": 2383,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2254,
									"end": 2258,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2292,
									"end": 2294,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2281,
									"end": 2290,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2277,
									"end": 2295,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2269,
									"end": 2295,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2305,
									"end": 2376,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2373,
									"end": 2374,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2362,
									"end": 2371,
									"name": "DUP4",
									"source": 12
								},
								{
									"begin": 2358,
									"end": 2375,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 2349,
									"end": 2355,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2305,
									"end": 2376,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "41"
								},
								{
									"begin": 2305,
									"end": 2376,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2305,
									"end": 2376,
									"name": "tag",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 2305,
									"end": 2376,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2383,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2383,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2383,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2383,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2161,
									"end": 2383,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2389,
									"end": 2475,
									"name": "tag",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 2389,
									"end": 2475,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2424,
									"end": 2431,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2464,
									"end": 2468,
									"name": "PUSH",
									"source": 12,
									"value": "FF"
								},
								{
									"begin": 2457,
									"end": 2462,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2453,
									"end": 2469,
									"name": "AND",
									"source": 12
								},
								{
									"begin": 2442,
									"end": 2469,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2442,
									"end": 2469,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2389,
									"end": 2475,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2389,
									"end": 2475,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2389,
									"end": 2475,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2389,
									"end": 2475,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2481,
									"end": 2599,
									"name": "tag",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2481,
									"end": 2599,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2552,
									"end": 2574,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2568,
									"end": 2573,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2552,
									"end": 2574,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "42"
								},
								{
									"begin": 2552,
									"end": 2574,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2552,
									"end": 2574,
									"name": "tag",
									"source": 12,
									"value": "76"
								},
								{
									"begin": 2552,
									"end": 2574,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2545,
									"end": 2550,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2542,
									"end": 2575,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 2532,
									"end": 2593,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2532,
									"end": 2593,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2589,
									"end": 2590,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2586,
									"end": 2587,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2579,
									"end": 2591,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 2532,
									"end": 2593,
									"name": "tag",
									"source": 12,
									"value": "77"
								},
								{
									"begin": 2532,
									"end": 2593,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2481,
									"end": 2599,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2481,
									"end": 2599,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2605,
									"end": 2744,
									"name": "tag",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 2605,
									"end": 2744,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2660,
									"end": 2665,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2691,
									"end": 2697,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2685,
									"end": 2698,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 2676,
									"end": 2698,
									"name": "SWAP1",
									"source": 12
								},
								{
									"begin": 2676,
									"end": 2698,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2707,
									"end": 2738,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2732,
									"end": 2737,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 2707,
									"end": 2738,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "43"
								},
								{
									"begin": 2707,
									"end": 2738,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2707,
									"end": 2738,
									"name": "tag",
									"source": 12,
									"value": "79"
								},
								{
									"begin": 2707,
									"end": 2738,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2605,
									"end": 2744,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2605,
									"end": 2744,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2605,
									"end": 2744,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2605,
									"end": 2744,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2605,
									"end": 2744,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2750,
									"end": 3097,
									"name": "tag",
									"source": 12,
									"value": "23"
								},
								{
									"begin": 2750,
									"end": 3097,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2818,
									"end": 2824,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 2867,
									"end": 2869,
									"name": "PUSH",
									"source": 12,
									"value": "20"
								},
								{
									"begin": 2855,
									"end": 2864,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 2846,
									"end": 2853,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 2842,
									"end": 2865,
									"name": "SUB",
									"source": 12
								},
								{
									"begin": 2838,
									"end": 2870,
									"name": "SLT",
									"source": 12
								},
								{
									"begin": 2835,
									"end": 2954,
									"name": "ISZERO",
									"source": 12
								},
								{
									"begin": 2835,
									"end": 2954,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 2835,
									"end": 2954,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": 2873,
									"end": 2952,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2873,
									"end": 2952,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "32"
								},
								{
									"begin": 2873,
									"end": 2952,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 2873,
									"end": 2952,
									"name": "tag",
									"source": 12,
									"value": "82"
								},
								{
									"begin": 2873,
									"end": 2952,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2835,
									"end": 2954,
									"name": "tag",
									"source": 12,
									"value": "81"
								},
								{
									"begin": 2835,
									"end": 2954,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 2993,
									"end": 2994,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 3018,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3072,
									"end": 3079,
									"name": "DUP5",
									"source": 12
								},
								{
									"begin": 3063,
									"end": 3069,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 3052,
									"end": 3061,
									"name": "DUP6",
									"source": 12
								},
								{
									"begin": 3048,
									"end": 3070,
									"name": "ADD",
									"source": 12
								},
								{
									"begin": 3018,
									"end": 3080,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "44"
								},
								{
									"begin": 3018,
									"end": 3080,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 3018,
									"end": 3080,
									"name": "tag",
									"source": 12,
									"value": "83"
								},
								{
									"begin": 3018,
									"end": 3080,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 3008,
									"end": 3080,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 3008,
									"end": 3080,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2964,
									"end": 3090,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2750,
									"end": 3097,
									"name": "SWAP3",
									"source": 12
								},
								{
									"begin": 2750,
									"end": 3097,
									"name": "SWAP2",
									"source": 12
								},
								{
									"begin": 2750,
									"end": 3097,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2750,
									"end": 3097,
									"name": "POP",
									"source": 12
								},
								{
									"begin": 2750,
									"end": 3097,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 12
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "tag",
									"source": 11,
									"value": "29"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "PUSH",
									"source": 11,
									"value": "80"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "PUSH",
									"source": 11,
									"value": "A0"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "3926"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "ASSIGNIMMUTABLE",
									"source": 11,
									"value": "3923"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1963,
									"end": 16636,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fa2c85e239d774b1506cae5c4c4677b92d45b9017bc2f801c3633f437f28254b64736f6c634300081e0033",
									".code": [
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "tag",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "CALLDATALOAD",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "SHR",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "D1686604"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "D1686604"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "D55BE8C6"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "E0120CF8"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "E46BBC9E"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "F2FDE38B"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "21"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "tag",
											"source": 11,
											"value": "23"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "12"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "C23945AC"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "C4D252F5"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "CC3E049B"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "CD2025C3"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "tag",
											"source": 11,
											"value": "22"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "478222C2"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "478222C2"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "5C975ABB"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "715018A6"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "9"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "7BF42165"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "8456CB59"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "tag",
											"source": 11,
											"value": "24"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "2417395C"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "24A9D853"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "3E413BEE"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "3F4BA83A"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "tag",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1963,
											"end": 16636,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "tag",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 16516,
											"end": 16634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "tag",
											"source": 11,
											"value": "26"
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 16516,
											"end": 16634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "tag",
											"source": 11,
											"value": "25"
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "30"
										},
										{
											"begin": 16516,
											"end": 16634,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "tag",
											"source": 11,
											"value": "29"
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "tag",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 4084,
											"end": 4104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "tag",
											"source": 11,
											"value": "31"
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 4084,
											"end": 4104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "tag",
											"source": 11,
											"value": "33"
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "tag",
											"source": 11,
											"value": "5"
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 16059,
											"end": 16135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "tag",
											"source": 11,
											"value": "35"
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "38"
										},
										{
											"begin": 16059,
											"end": 16135,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "tag",
											"source": 11,
											"value": "37"
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 9587,
											"end": 9652,
											"name": "tag",
											"source": 11,
											"value": "6"
										},
										{
											"begin": 9587,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9587,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 9587,
											"end": 9652,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9587,
											"end": 9652,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9587,
											"end": 9652,
											"name": "tag",
											"source": 11,
											"value": "39"
										},
										{
											"begin": 9587,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9587,
											"end": 9652,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "tag",
											"source": 11,
											"value": "7"
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 4180,
											"end": 4203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "tag",
											"source": 11,
											"value": "41"
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "44"
										},
										{
											"begin": 4180,
											"end": 4203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "tag",
											"source": 11,
											"value": "43"
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 7,
											"value": "8"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 7,
											"value": "45"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "48"
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 7,
											"value": "47"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "RETURN",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "tag",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 16234,
											"end": 16325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "tag",
											"source": 11,
											"value": "51"
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "54"
										},
										{
											"begin": 16234,
											"end": 16325,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "tag",
											"source": 11,
											"value": "53"
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 9399,
											"end": 9460,
											"name": "tag",
											"source": 11,
											"value": "11"
										},
										{
											"begin": 9399,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9399,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 9399,
											"end": 9460,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 9399,
											"end": 9460,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9399,
											"end": 9460,
											"name": "tag",
											"source": 11,
											"value": "55"
										},
										{
											"begin": 9399,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9399,
											"end": 9460,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "tag",
											"source": 11,
											"value": "13"
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "62"
										},
										{
											"begin": 11096,
											"end": 12345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "tag",
											"source": 11,
											"value": "61"
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 11096,
											"end": 12345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "tag",
											"source": 11,
											"value": "60"
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 11096,
											"end": 12345,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "tag",
											"source": 11,
											"value": "64"
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "tag",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 13510,
											"end": 13954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "tag",
											"source": 11,
											"value": "67"
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 13510,
											"end": 13954,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "tag",
											"source": 11,
											"value": "66"
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "tag",
											"source": 11,
											"value": "15"
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "27"
										},
										{
											"begin": 15397,
											"end": 15933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "tag",
											"source": 11,
											"value": "70"
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 15397,
											"end": 15933,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "tag",
											"source": 11,
											"value": "69"
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "tag",
											"source": 11,
											"value": "16"
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "74"
										},
										{
											"begin": 9006,
											"end": 9242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "tag",
											"source": 11,
											"value": "73"
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 9006,
											"end": 9242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "tag",
											"source": 11,
											"value": "72"
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "65"
										},
										{
											"begin": 9006,
											"end": 9242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "tag",
											"source": 11,
											"value": "76"
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "tag",
											"source": 11,
											"value": "17"
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "79"
										},
										{
											"begin": 14377,
											"end": 15136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "tag",
											"source": 11,
											"value": "78"
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 14377,
											"end": 15136,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "tag",
											"source": 11,
											"value": "77"
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "tag",
											"source": 11,
											"value": "18"
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 2162,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "tag",
											"source": 11,
											"value": "81"
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "34"
										},
										{
											"begin": 2162,
											"end": 2204,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "tag",
											"source": 11,
											"value": "83"
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "RETURN",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "tag",
											"source": 11,
											"value": "19"
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "86"
										},
										{
											"begin": 9908,
											"end": 10238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "tag",
											"source": 11,
											"value": "85"
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 9908,
											"end": 10238,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "tag",
											"source": 11,
											"value": "84"
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "tag",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "CALLDATASIZE",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "90"
										},
										{
											"begin": 12648,
											"end": 13279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "tag",
											"source": 11,
											"value": "89"
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 12648,
											"end": 13279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "tag",
											"source": 11,
											"value": "88"
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "STOP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "tag",
											"source": 11,
											"value": "28"
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16576,
											"end": 16589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 16576,
											"end": 16589,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "97"
										},
										{
											"begin": 16576,
											"end": 16589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16576,
											"end": 16589,
											"name": "tag",
											"source": 11,
											"value": "96"
										},
										{
											"begin": 16576,
											"end": 16589,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16608,
											"end": 16617,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 16608,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16618,
											"end": 16626,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 16608,
											"end": 16627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16608,
											"end": 16627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16608,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16608,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16608,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16608,
											"end": 16627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16608,
											"end": 16627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16608,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16608,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16608,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16608,
											"end": 16627,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "E0"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 16601,
											"end": 16627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "tag",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "tag",
											"source": 11,
											"value": "99"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 16601,
											"end": 16627,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "tag",
											"source": 11,
											"value": "103"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "tag",
											"source": 11,
											"value": "102"
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16601,
											"end": 16627,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16516,
											"end": 16634,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "tag",
											"source": 11,
											"value": "32"
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4084,
											"end": 4104,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "tag",
											"source": 11,
											"value": "36"
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16098,
											"end": 16104,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16123,
											"end": 16128,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3923"
										},
										{
											"begin": 16116,
											"end": 16128,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16116,
											"end": 16128,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16059,
											"end": 16135,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9587,
											"end": 9652,
											"name": "tag",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9587,
											"end": 9652,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "106"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9635,
											"end": 9645,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 9635,
											"end": 9643,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "110"
										},
										{
											"begin": 9635,
											"end": 9645,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9635,
											"end": 9645,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "109"
										},
										{
											"begin": 9635,
											"end": 9645,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9587,
											"end": 9652,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "tag",
											"source": 11,
											"value": "42"
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 4180,
											"end": 4203,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "tag",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1897,
											"end": 1901,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "DIV",
											"source": 7
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 1920,
											"end": 1927,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1913,
											"end": 1927,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 1850,
											"end": 1934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 2293,
											"end": 2394,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2384,
											"end": 2385,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2357,
											"end": 2375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2357,
											"end": 2387,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 2357,
											"end": 2387,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2293,
											"end": 2394,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "tag",
											"source": 11,
											"value": "52"
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 16281,
											"end": 16286,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 16305,
											"end": 16318,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3926"
										},
										{
											"begin": 16298,
											"end": 16318,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16298,
											"end": 16318,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 16234,
											"end": 16325,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9399,
											"end": 9460,
											"name": "tag",
											"source": 11,
											"value": "56"
										},
										{
											"begin": 9399,
											"end": 9460,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 9445,
											"end": 9453,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 9445,
											"end": 9451,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "122"
										},
										{
											"begin": 9445,
											"end": 9453,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9445,
											"end": 9453,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "121"
										},
										{
											"begin": 9445,
											"end": 9453,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9399,
											"end": 9460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1684,
											"end": 1691,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1710,
											"end": 1716,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1703,
											"end": 1716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1638,
											"end": 1723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "tag",
											"source": 11,
											"value": "63"
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11300,
											"end": 11316,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 8,
											"value": "125"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1474,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "128"
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 11352,
											"end": 11353,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11332,
											"end": 11354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11332,
											"end": 11354,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11332,
											"end": 11340,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11332,
											"end": 11354,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11332,
											"end": 11354,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11332,
											"end": 11354,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11328,
											"end": 11376,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 11328,
											"end": 11376,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11363,
											"end": 11376,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11328,
											"end": 11376,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "131"
										},
										{
											"begin": 11328,
											"end": 11376,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11412,
											"end": 11413,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11414,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11404,
											"end": 11414,
											"modifierDepth": 2,
											"name": "SHL",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11400,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11414,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11434,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11434,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 11390,
											"end": 11434,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11434,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11433,
											"end": 11434,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11418,
											"end": 11429,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 11418,
											"end": 11434,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11418,
											"end": 11434,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11418,
											"end": 11434,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 11390,
											"end": 11434,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "132"
										},
										{
											"begin": 11390,
											"end": 11434,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11386,
											"end": 11470,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11386,
											"end": 11470,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 11386,
											"end": 11470,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "A86B651200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11455,
											"end": 11470,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11386,
											"end": 11470,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "133"
										},
										{
											"begin": 11386,
											"end": 11470,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11496,
											"end": 11511,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 11484,
											"end": 11492,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11484,
											"end": 11511,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11484,
											"end": 11511,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11484,
											"end": 11511,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11480,
											"end": 11535,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 11480,
											"end": 11535,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "A86B651200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11520,
											"end": 11535,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11480,
											"end": 11535,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "134"
										},
										{
											"begin": 11480,
											"end": 11535,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11559,
											"end": 11560,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11549,
											"end": 11555,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 11549,
											"end": 11560,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11545,
											"end": 11581,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 11545,
											"end": 11581,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1F2A200500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11569,
											"end": 11581,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11545,
											"end": 11581,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "135"
										},
										{
											"begin": 11545,
											"end": 11581,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11603,
											"end": 11655,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 11619,
											"end": 11629,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 11631,
											"end": 11641,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11643,
											"end": 11654,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11603,
											"end": 11618,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 11603,
											"end": 11655,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11603,
											"end": 11655,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "136"
										},
										{
											"begin": 11603,
											"end": 11655,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11592,
											"end": 11655,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11592,
											"end": 11655,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11699,
											"end": 11710,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 11669,
											"end": 11710,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "138"
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "137"
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11678,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 11669,
											"end": 11688,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11679,
											"end": 11687,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11688,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11688,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11688,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11669,
											"end": 11688,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11688,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11688,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11688,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11688,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11669,
											"end": 11688,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11688,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11669,
											"end": 11688,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11695,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 11669,
											"end": 11695,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11695,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 11669,
											"end": 11695,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11695,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11695,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11695,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 11669,
											"end": 11695,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11695,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11695,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11695,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 11669,
											"end": 11695,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 11669,
											"end": 11710,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "140"
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "139"
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11669,
											"end": 11710,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 11665,
											"end": 11734,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 11665,
											"end": 11734,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "23369FA600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11719,
											"end": 11734,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 11665,
											"end": 11734,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "141"
										},
										{
											"begin": 11665,
											"end": 11734,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11745,
											"end": 11761,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11764,
											"end": 11773,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 11764,
											"end": 11783,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11774,
											"end": 11782,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11764,
											"end": 11783,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11764,
											"end": 11783,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11764,
											"end": 11783,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11764,
											"end": 11783,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11764,
											"end": 11783,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11764,
											"end": 11783,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11764,
											"end": 11783,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 11764,
											"end": 11783,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 11764,
											"end": 11783,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11764,
											"end": 11783,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11764,
											"end": 11783,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 11745,
											"end": 11783,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11745,
											"end": 11783,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11808,
											"end": 11818,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 11793,
											"end": 11794,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11793,
											"end": 11805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11793,
											"end": 11805,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11793,
											"end": 11818,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11793,
											"end": 11818,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11793,
											"end": 11818,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11793,
											"end": 11818,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11840,
											"end": 11850,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11829,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11837,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 11828,
											"end": 11837,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11837,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11828,
											"end": 11850,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11873,
											"end": 11881,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11861,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 11860,
											"end": 11870,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11870,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11860,
											"end": 11881,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11902,
											"end": 11919,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 11902,
											"end": 11908,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11902,
											"end": 11917,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 11902,
											"end": 11919,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 11902,
											"end": 11919,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "142"
										},
										{
											"begin": 11902,
											"end": 11919,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11892,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11899,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 11891,
											"end": 11899,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11899,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11891,
											"end": 11919,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11995,
											"end": 12003,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 11983,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 11992,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 11982,
											"end": 11992,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 11992,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 11982,
											"end": 12003,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12029,
											"end": 12040,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12014,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12026,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 12013,
											"end": 12026,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12026,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "8"
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 12013,
											"end": 12040,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12061,
											"end": 12072,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 12050,
											"end": 12051,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12058,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 12050,
											"end": 12058,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12058,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 12050,
											"end": 12072,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "145"
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "144"
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 12050,
											"end": 12072,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12083,
											"end": 12140,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 12106,
											"end": 12116,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 12126,
											"end": 12130,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 12133,
											"end": 12139,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12083,
											"end": 12088,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3923"
										},
										{
											"begin": 12083,
											"end": 12105,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12083,
											"end": 12105,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12083,
											"end": 12105,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 12083,
											"end": 12105,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12083,
											"end": 12140,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 12083,
											"end": 12140,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12083,
											"end": 12140,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12083,
											"end": 12140,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12083,
											"end": 12140,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 12083,
											"end": 12140,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12083,
											"end": 12140,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12083,
											"end": 12140,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "146"
										},
										{
											"begin": 12083,
											"end": 12140,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12229,
											"end": 12239,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 12205,
											"end": 12215,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12183,
											"end": 12191,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "B9F72851BF0C89DB77E8B273BF29AEF517207F92830DF76851A309F1A6C5C80E"
										},
										{
											"begin": 12253,
											"end": 12264,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 12278,
											"end": 12286,
											"modifierDepth": 2,
											"name": "DUP9",
											"source": 11
										},
										{
											"begin": 12300,
											"end": 12308,
											"modifierDepth": 2,
											"name": "DUP13",
											"source": 11
										},
										{
											"begin": 12322,
											"end": 12328,
											"modifierDepth": 2,
											"name": "DUP10",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "149"
										},
										{
											"begin": 12156,
											"end": 12338,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "148"
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12156,
											"end": 12338,
											"modifierDepth": 2,
											"name": "LOG4",
											"source": 11
										},
										{
											"begin": 11318,
											"end": 12345,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 8,
											"value": "150"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "SWAP6",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "SWAP5",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 11096,
											"end": 12345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "tag",
											"source": 11,
											"value": "68"
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 8,
											"value": "153"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1474,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "155"
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 13590,
											"end": 13606,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13609,
											"end": 13618,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 13609,
											"end": 13628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13619,
											"end": 13627,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13609,
											"end": 13628,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13609,
											"end": 13628,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13609,
											"end": 13628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13609,
											"end": 13628,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13609,
											"end": 13628,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13609,
											"end": 13628,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13609,
											"end": 13628,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13609,
											"end": 13628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 13609,
											"end": 13628,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13609,
											"end": 13628,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13609,
											"end": 13628,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 13590,
											"end": 13628,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13590,
											"end": 13628,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13654,
											"end": 13665,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 13642,
											"end": 13665,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "158"
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "157"
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13643,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 13642,
											"end": 13650,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 13642,
											"end": 13650,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13650,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13650,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13642,
											"end": 13650,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13650,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13650,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13650,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 13642,
											"end": 13650,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 13642,
											"end": 13665,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "160"
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "159"
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13642,
											"end": 13665,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 13638,
											"end": 13683,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 13638,
											"end": 13683,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "DDAFAD9800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13674,
											"end": 13683,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13638,
											"end": 13683,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "161"
										},
										{
											"begin": 13638,
											"end": 13683,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13711,
											"end": 13712,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13711,
											"end": 13720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13711,
											"end": 13720,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13711,
											"end": 13720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13711,
											"end": 13720,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13711,
											"end": 13720,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13711,
											"end": 13720,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13711,
											"end": 13720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13711,
											"end": 13720,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 13711,
											"end": 13720,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13711,
											"end": 13720,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13711,
											"end": 13720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13711,
											"end": 13720,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13697,
											"end": 13720,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13707,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13697,
											"end": 13720,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13697,
											"end": 13720,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 13693,
											"end": 13741,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 13693,
											"end": 13741,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "DF4795C700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13729,
											"end": 13741,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13693,
											"end": 13741,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "162"
										},
										{
											"begin": 13693,
											"end": 13741,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13763,
											"end": 13778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13752,
											"end": 13753,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13760,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 13752,
											"end": 13760,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13760,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 13752,
											"end": 13778,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "164"
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "163"
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 13752,
											"end": 13778,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13788,
											"end": 13801,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13804,
											"end": 13805,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13804,
											"end": 13812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 13804,
											"end": 13812,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13804,
											"end": 13812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 13804,
											"end": 13812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13804,
											"end": 13812,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13804,
											"end": 13812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13804,
											"end": 13812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13804,
											"end": 13812,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 13804,
											"end": 13812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13804,
											"end": 13812,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13804,
											"end": 13812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13804,
											"end": 13812,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13788,
											"end": 13812,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13788,
											"end": 13812,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13788,
											"end": 13812,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13788,
											"end": 13812,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13833,
											"end": 13834,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13822,
											"end": 13823,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 13822,
											"end": 13830,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13830,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 13822,
											"end": 13834,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13857,
											"end": 13858,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13849,
											"end": 13854,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13849,
											"end": 13858,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13845,
											"end": 13896,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13845,
											"end": 13896,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 13845,
											"end": 13896,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13860,
											"end": 13896,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 13879,
											"end": 13880,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13879,
											"end": 13888,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13879,
											"end": 13888,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13879,
											"end": 13888,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13879,
											"end": 13888,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13879,
											"end": 13888,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13879,
											"end": 13888,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13879,
											"end": 13888,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13879,
											"end": 13888,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 13879,
											"end": 13888,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13879,
											"end": 13888,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13879,
											"end": 13888,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13879,
											"end": 13888,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13890,
											"end": 13895,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13860,
											"end": 13865,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3923"
										},
										{
											"begin": 13860,
											"end": 13878,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13860,
											"end": 13878,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13860,
											"end": 13878,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 13860,
											"end": 13878,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13860,
											"end": 13896,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13860,
											"end": 13896,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13860,
											"end": 13896,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13860,
											"end": 13896,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13860,
											"end": 13896,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13860,
											"end": 13896,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13860,
											"end": 13896,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "166"
										},
										{
											"begin": 13860,
											"end": 13896,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13845,
											"end": 13896,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "165"
										},
										{
											"begin": 13845,
											"end": 13896,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13930,
											"end": 13931,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13930,
											"end": 13939,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 13930,
											"end": 13939,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13930,
											"end": 13939,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13930,
											"end": 13939,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13930,
											"end": 13939,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13930,
											"end": 13939,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13930,
											"end": 13939,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13930,
											"end": 13939,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 13930,
											"end": 13939,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13930,
											"end": 13939,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13930,
											"end": 13939,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13930,
											"end": 13939,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13920,
											"end": 13928,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "13CA42B383DDDAC8A499886C122185485535C8144D34355991F87265CFBEE4CC"
										},
										{
											"begin": 13941,
											"end": 13946,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 13911,
											"end": 13947,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "168"
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13911,
											"end": 13947,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 13580,
											"end": 13954,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13580,
											"end": 13954,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 8,
											"value": "170"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 13510,
											"end": 13954,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13510,
											"end": 13954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "tag",
											"source": 11,
											"value": "71"
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 8,
											"value": "172"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1474,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "174"
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 15498,
											"end": 15514,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15517,
											"end": 15526,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 15517,
											"end": 15536,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15527,
											"end": 15535,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15517,
											"end": 15536,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15517,
											"end": 15536,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15517,
											"end": 15536,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15517,
											"end": 15536,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15517,
											"end": 15536,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15517,
											"end": 15536,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15517,
											"end": 15536,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15517,
											"end": 15536,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 15517,
											"end": 15536,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15517,
											"end": 15536,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15517,
											"end": 15536,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 15498,
											"end": 15536,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15498,
											"end": 15536,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15562,
											"end": 15573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 15550,
											"end": 15573,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "177"
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "176"
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15551,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15558,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 15550,
											"end": 15558,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15558,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 15550,
											"end": 15558,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15558,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15558,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15558,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 15550,
											"end": 15558,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15558,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15558,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15558,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 15550,
											"end": 15558,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 15550,
											"end": 15573,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "179"
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "178"
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15550,
											"end": 15573,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 15546,
											"end": 15591,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 15546,
											"end": 15591,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "DDAFAD9800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15582,
											"end": 15591,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 15546,
											"end": 15591,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "180"
										},
										{
											"begin": 15546,
											"end": 15591,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15623,
											"end": 15624,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15623,
											"end": 15633,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 15623,
											"end": 15633,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15623,
											"end": 15633,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15623,
											"end": 15633,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15623,
											"end": 15633,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15623,
											"end": 15633,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15623,
											"end": 15633,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 15623,
											"end": 15633,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 15623,
											"end": 15633,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15623,
											"end": 15633,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 15623,
											"end": 15633,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15623,
											"end": 15633,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15605,
											"end": 15633,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15605,
											"end": 15633,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15605,
											"end": 15620,
											"modifierDepth": 2,
											"name": "TIMESTAMP",
											"source": 11
										},
										{
											"begin": 15605,
											"end": 15633,
											"modifierDepth": 2,
											"name": "LT",
											"source": 11
										},
										{
											"begin": 15601,
											"end": 15662,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15601,
											"end": 15662,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 15601,
											"end": 15662,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "66EC4EE600000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15642,
											"end": 15662,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 15601,
											"end": 15662,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "181"
										},
										{
											"begin": 15601,
											"end": 15662,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 15691,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 15699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15690,
											"end": 15699,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 15699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15690,
											"end": 15699,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 15699,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 15699,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 15699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 15690,
											"end": 15699,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 15699,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 15699,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 15690,
											"end": 15699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15690,
											"end": 15699,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15676,
											"end": 15699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15676,
											"end": 15699,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15676,
											"end": 15686,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 15676,
											"end": 15699,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15676,
											"end": 15699,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15676,
											"end": 15699,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 15672,
											"end": 15720,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 15672,
											"end": 15720,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "DF4795C700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15708,
											"end": 15720,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 15672,
											"end": 15720,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "182"
										},
										{
											"begin": 15672,
											"end": 15720,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15742,
											"end": 15757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 15731,
											"end": 15732,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15739,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 15731,
											"end": 15739,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15739,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 15731,
											"end": 15757,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "184"
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "183"
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15731,
											"end": 15757,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15767,
											"end": 15780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15783,
											"end": 15784,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15783,
											"end": 15791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 15783,
											"end": 15791,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15783,
											"end": 15791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 15783,
											"end": 15791,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15783,
											"end": 15791,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15783,
											"end": 15791,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15783,
											"end": 15791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 15783,
											"end": 15791,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 15783,
											"end": 15791,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15783,
											"end": 15791,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 15783,
											"end": 15791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15783,
											"end": 15791,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15767,
											"end": 15791,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15767,
											"end": 15791,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15767,
											"end": 15791,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15767,
											"end": 15791,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15812,
											"end": 15813,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15801,
											"end": 15802,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15809,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 15801,
											"end": 15809,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15809,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 15801,
											"end": 15813,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15836,
											"end": 15837,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15828,
											"end": 15833,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15828,
											"end": 15837,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 15824,
											"end": 15875,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15824,
											"end": 15875,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 15824,
											"end": 15875,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15839,
											"end": 15875,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 15858,
											"end": 15859,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15858,
											"end": 15867,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15858,
											"end": 15867,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15858,
											"end": 15867,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15858,
											"end": 15867,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15858,
											"end": 15867,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15858,
											"end": 15867,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15858,
											"end": 15867,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 15858,
											"end": 15867,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 15858,
											"end": 15867,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15858,
											"end": 15867,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 15858,
											"end": 15867,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15858,
											"end": 15867,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15869,
											"end": 15874,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15839,
											"end": 15844,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3923"
										},
										{
											"begin": 15839,
											"end": 15857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15839,
											"end": 15857,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15839,
											"end": 15857,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 15839,
											"end": 15857,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15839,
											"end": 15875,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15839,
											"end": 15875,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15839,
											"end": 15875,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15839,
											"end": 15875,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15839,
											"end": 15875,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15839,
											"end": 15875,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15839,
											"end": 15875,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "186"
										},
										{
											"begin": 15839,
											"end": 15875,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15824,
											"end": 15875,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "185"
										},
										{
											"begin": 15824,
											"end": 15875,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15909,
											"end": 15910,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 15909,
											"end": 15918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 15909,
											"end": 15918,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 15909,
											"end": 15918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15909,
											"end": 15918,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15909,
											"end": 15918,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15909,
											"end": 15918,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15909,
											"end": 15918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 15909,
											"end": 15918,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 15909,
											"end": 15918,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15909,
											"end": 15918,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 15909,
											"end": 15918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15909,
											"end": 15918,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15899,
											"end": 15907,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "F552CA82E113AC3C539C3D617F29FCD19C172A0C75DAD017555C9E109F7FE183"
										},
										{
											"begin": 15920,
											"end": 15925,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 15890,
											"end": 15926,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "187"
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15890,
											"end": 15926,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 15488,
											"end": 15933,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15488,
											"end": 15933,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 8,
											"value": "188"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 15397,
											"end": 15933,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 15397,
											"end": 15933,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "tag",
											"source": 11,
											"value": "75"
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9139,
											"end": 9155,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 9201,
											"end": 9208,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9210,
											"end": 9220,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9222,
											"end": 9233,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "191"
										},
										{
											"begin": 9184,
											"end": 9234,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "tag",
											"source": 11,
											"value": "190"
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 9184,
											"end": 9234,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 9174,
											"end": 9235,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 9174,
											"end": 9235,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 9174,
											"end": 9235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9174,
											"end": 9235,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 9174,
											"end": 9235,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 9174,
											"end": 9235,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 9167,
											"end": 9235,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 9167,
											"end": 9235,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9006,
											"end": 9242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "tag",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 8,
											"value": "193"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1474,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "195"
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 14524,
											"end": 14525,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14503,
											"end": 14526,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14503,
											"end": 14526,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14503,
											"end": 14512,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14503,
											"end": 14526,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14503,
											"end": 14526,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14503,
											"end": 14526,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14499,
											"end": 14548,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 14499,
											"end": 14548,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14535,
											"end": 14548,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14499,
											"end": 14548,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "197"
										},
										{
											"begin": 14499,
											"end": 14548,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14559,
											"end": 14575,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14578,
											"end": 14587,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 14578,
											"end": 14597,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14588,
											"end": 14596,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 14578,
											"end": 14597,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14578,
											"end": 14597,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14578,
											"end": 14597,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14578,
											"end": 14597,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14578,
											"end": 14597,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14578,
											"end": 14597,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14578,
											"end": 14597,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14578,
											"end": 14597,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 14578,
											"end": 14597,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14578,
											"end": 14597,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14578,
											"end": 14597,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 14559,
											"end": 14597,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14559,
											"end": 14597,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14623,
											"end": 14634,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 14611,
											"end": 14634,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "199"
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "198"
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14612,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 14611,
											"end": 14619,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 14611,
											"end": 14619,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14619,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14619,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 14611,
											"end": 14619,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14619,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14619,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14619,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 14611,
											"end": 14619,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 14611,
											"end": 14634,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "201"
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "200"
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14611,
											"end": 14634,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14607,
											"end": 14652,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 14607,
											"end": 14652,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "DDAFAD9800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14643,
											"end": 14652,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14607,
											"end": 14652,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "202"
										},
										{
											"begin": 14607,
											"end": 14652,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14680,
											"end": 14681,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14680,
											"end": 14690,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 14680,
											"end": 14690,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14680,
											"end": 14690,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14680,
											"end": 14690,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14680,
											"end": 14690,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14680,
											"end": 14690,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14680,
											"end": 14690,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 14680,
											"end": 14690,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 14680,
											"end": 14690,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14680,
											"end": 14690,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 14680,
											"end": 14690,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14680,
											"end": 14690,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14666,
											"end": 14690,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14666,
											"end": 14690,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14666,
											"end": 14676,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 14666,
											"end": 14690,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14666,
											"end": 14690,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14666,
											"end": 14690,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 14662,
											"end": 14712,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 14662,
											"end": 14712,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "BA2A9FC200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14699,
											"end": 14712,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 14662,
											"end": 14712,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "203"
										},
										{
											"begin": 14662,
											"end": 14712,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14734,
											"end": 14749,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 14723,
											"end": 14724,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14731,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 14723,
											"end": 14731,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14731,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 14723,
											"end": 14749,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "205"
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "204"
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 14723,
											"end": 14749,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 14772,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14775,
											"end": 14776,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14775,
											"end": 14783,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 14775,
											"end": 14783,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14775,
											"end": 14783,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 14775,
											"end": 14783,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14775,
											"end": 14783,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14775,
											"end": 14783,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14775,
											"end": 14783,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 14775,
											"end": 14783,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 14775,
											"end": 14783,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14775,
											"end": 14783,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 14775,
											"end": 14783,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14775,
											"end": 14783,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 14783,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14759,
											"end": 14783,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 14783,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14759,
											"end": 14783,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14804,
											"end": 14805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14793,
											"end": 14794,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14801,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 14793,
											"end": 14801,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14801,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 14793,
											"end": 14805,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14874,
											"end": 14885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14888,
											"end": 14925,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 14900,
											"end": 14905,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14907,
											"end": 14913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 14907,
											"end": 14913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14907,
											"end": 14913,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14907,
											"end": 14913,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 14907,
											"end": 14913,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14907,
											"end": 14913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 14907,
											"end": 14913,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 14907,
											"end": 14913,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14907,
											"end": 14913,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 14907,
											"end": 14913,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 14907,
											"end": 14913,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14888,
											"end": 14925,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 14888,
											"end": 14925,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2302,
											"end": 2308,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2710"
										},
										{
											"begin": 14888,
											"end": 14899,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "207"
										},
										{
											"begin": 14888,
											"end": 14925,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14888,
											"end": 14925,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "206"
										},
										{
											"begin": 14888,
											"end": 14925,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14874,
											"end": 14925,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14874,
											"end": 14925,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14935,
											"end": 14946,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14957,
											"end": 14960,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14949,
											"end": 14954,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 14949,
											"end": 14960,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 14949,
											"end": 14960,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14949,
											"end": 14960,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14949,
											"end": 14960,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "209"
										},
										{
											"begin": 14949,
											"end": 14960,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14949,
											"end": 14960,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "208"
										},
										{
											"begin": 14949,
											"end": 14960,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14935,
											"end": 14960,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14935,
											"end": 14960,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14981,
											"end": 14982,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 14975,
											"end": 14978,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 14975,
											"end": 14982,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 14971,
											"end": 15018,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 14971,
											"end": 15018,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 14971,
											"end": 15018,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 14984,
											"end": 15018,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 15003,
											"end": 15012,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15014,
											"end": 15017,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 14984,
											"end": 14989,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3923"
										},
										{
											"begin": 14984,
											"end": 15002,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 14984,
											"end": 15002,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14984,
											"end": 15002,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 14984,
											"end": 15002,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14984,
											"end": 15018,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 14984,
											"end": 15018,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 14984,
											"end": 15018,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 14984,
											"end": 15018,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 14984,
											"end": 15018,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 14984,
											"end": 15018,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 14984,
											"end": 15018,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "211"
										},
										{
											"begin": 14984,
											"end": 15018,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 14971,
											"end": 15018,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "210"
										},
										{
											"begin": 14971,
											"end": 15018,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15038,
											"end": 15039,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 15032,
											"end": 15035,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 15032,
											"end": 15039,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 15028,
											"end": 15074,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 15028,
											"end": 15074,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 15028,
											"end": 15074,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 15041,
											"end": 15074,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 15060,
											"end": 15068,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 15060,
											"end": 15068,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 15060,
											"end": 15068,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15060,
											"end": 15068,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 15060,
											"end": 15068,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15060,
											"end": 15068,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 15060,
											"end": 15068,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 15060,
											"end": 15068,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15060,
											"end": 15068,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 15060,
											"end": 15068,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15060,
											"end": 15068,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15070,
											"end": 15073,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15041,
											"end": 15046,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3923"
										},
										{
											"begin": 15041,
											"end": 15059,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15041,
											"end": 15059,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15041,
											"end": 15059,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "167"
										},
										{
											"begin": 15041,
											"end": 15059,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15041,
											"end": 15074,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15041,
											"end": 15074,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15041,
											"end": 15074,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15041,
											"end": 15074,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 15041,
											"end": 15074,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15041,
											"end": 15074,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15041,
											"end": 15074,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "213"
										},
										{
											"begin": 15041,
											"end": 15074,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15028,
											"end": 15074,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "212"
										},
										{
											"begin": 15028,
											"end": 15074,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15109,
											"end": 15118,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 15099,
											"end": 15107,
											"modifierDepth": 2,
											"name": "DUP7",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "461DC02513380B552C1C7E42377606BE7A1C06610E50589FC4664DD29BF47FC0"
										},
										{
											"begin": 15120,
											"end": 15123,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 15125,
											"end": 15128,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "215"
										},
										{
											"begin": 15090,
											"end": 15129,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "214"
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 15090,
											"end": 15129,
											"modifierDepth": 2,
											"name": "LOG3",
											"source": 11
										},
										{
											"begin": 14489,
											"end": 15136,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14489,
											"end": 15136,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14489,
											"end": 15136,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14489,
											"end": 15136,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 8,
											"value": "216"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 14377,
											"end": 15136,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "tag",
											"source": 11,
											"value": "82"
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2199,
											"end": 2204,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 2162,
											"end": 2204,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2162,
											"end": 2204,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "tag",
											"source": 11,
											"value": "87"
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 10041,
											"end": 10042,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10020,
											"end": 10043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10020,
											"end": 10043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10020,
											"end": 10029,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10020,
											"end": 10043,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10020,
											"end": 10043,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10020,
											"end": 10043,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10016,
											"end": 10065,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 10016,
											"end": 10065,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "D92E233D00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10052,
											"end": 10065,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10016,
											"end": 10065,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "220"
										},
										{
											"begin": 10016,
											"end": 10065,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2199,
											"end": 2204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3E8"
										},
										{
											"begin": 10079,
											"end": 10100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 10079,
											"end": 10100,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10079,
											"end": 10086,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10079,
											"end": 10100,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 10079,
											"end": 10100,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10079,
											"end": 10100,
											"modifierDepth": 1,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 10075,
											"end": 10124,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 10075,
											"end": 10124,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 10075,
											"end": 10124,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "A86B651200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10109,
											"end": 10124,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 10075,
											"end": 10124,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "221"
										},
										{
											"begin": 10075,
											"end": 10124,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10143,
											"end": 10150,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 10134,
											"end": 10140,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFF"
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10134,
											"end": 10150,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10171,
											"end": 10180,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 10160,
											"end": 10168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 10160,
											"end": 10180,
											"modifierDepth": 1,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "553BD03BB9146C7A9C7AD0A260AED36E8D47650815DF076DFB60F9D47E6CF727"
										},
										{
											"begin": 10212,
											"end": 10219,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10221,
											"end": 10230,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "223"
										},
										{
											"begin": 10195,
											"end": 10231,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "tag",
											"source": 11,
											"value": "222"
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 10195,
											"end": 10231,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 9908,
											"end": 10238,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "tag",
											"source": 11,
											"value": "91"
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2356,
											"end": 2375,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2356,
											"end": 2377,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "tag",
											"source": 8,
											"value": "225"
										},
										{
											"begin": 2356,
											"end": 2377,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 1474,
											"end": 1491,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "227"
										},
										{
											"begin": 1474,
											"end": 1493,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 12764,
											"end": 12780,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12792,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 12783,
											"end": 12802,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12793,
											"end": 12801,
											"modifierDepth": 2,
											"name": "DUP5",
											"source": 11
										},
										{
											"begin": 12783,
											"end": 12802,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12783,
											"end": 12802,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12783,
											"end": 12802,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12802,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12783,
											"end": 12802,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12783,
											"end": 12802,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12783,
											"end": 12802,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12783,
											"end": 12802,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "20"
										},
										{
											"begin": 12783,
											"end": 12802,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12783,
											"end": 12802,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12783,
											"end": 12802,
											"modifierDepth": 2,
											"name": "KECCAK256",
											"source": 11
										},
										{
											"begin": 12764,
											"end": 12802,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12764,
											"end": 12802,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12828,
											"end": 12839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 12816,
											"end": 12839,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "230"
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12817,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "3"
										},
										{
											"begin": 12816,
											"end": 12824,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "10"
										},
										{
											"begin": 12816,
											"end": 12824,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12824,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12824,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 12816,
											"end": 12824,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12824,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12824,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12824,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FF"
										},
										{
											"begin": 12816,
											"end": 12824,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "101"
										},
										{
											"begin": 12816,
											"end": 12839,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "232"
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "231"
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12816,
											"end": 12839,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 12812,
											"end": 12857,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 12812,
											"end": 12857,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "DDAFAD9800000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12848,
											"end": 12857,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12812,
											"end": 12857,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "233"
										},
										{
											"begin": 12812,
											"end": 12857,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12885,
											"end": 12886,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1"
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12885,
											"end": 12894,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12871,
											"end": 12894,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12871,
											"end": 12894,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12871,
											"end": 12881,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 12871,
											"end": 12894,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12871,
											"end": 12894,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 12871,
											"end": 12894,
											"modifierDepth": 2,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 12867,
											"end": 12915,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 12867,
											"end": 12915,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "DF4795C700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12903,
											"end": 12915,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12867,
											"end": 12915,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "234"
										},
										{
											"begin": 12867,
											"end": 12915,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 12939,
											"end": 12940,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 12929,
											"end": 12935,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 12929,
											"end": 12940,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12925,
											"end": 12961,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 12925,
											"end": 12961,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "1F2A200500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 12949,
											"end": 12961,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 12925,
											"end": 12961,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "235"
										},
										{
											"begin": 12925,
											"end": 12961,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13020,
											"end": 13034,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 13057,
											"end": 13063,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13045,
											"end": 13046,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13045,
											"end": 13053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 13045,
											"end": 13053,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13045,
											"end": 13053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 13045,
											"end": 13053,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13045,
											"end": 13053,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13045,
											"end": 13053,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13045,
											"end": 13053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13045,
											"end": 13053,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 13045,
											"end": 13053,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13045,
											"end": 13053,
											"modifierDepth": 2,
											"name": "DIV",
											"source": 11
										},
										{
											"begin": 13045,
											"end": 13053,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13045,
											"end": 13053,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13037,
											"end": 13054,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13037,
											"end": 13054,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13037,
											"end": 13063,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 13037,
											"end": 13063,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13037,
											"end": 13063,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13037,
											"end": 13063,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "237"
										},
										{
											"begin": 13037,
											"end": 13063,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13037,
											"end": 13063,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "236"
										},
										{
											"begin": 13037,
											"end": 13063,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13020,
											"end": 13063,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13020,
											"end": 13063,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13086,
											"end": 13102,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13077,
											"end": 13102,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13077,
											"end": 13102,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13077,
											"end": 13083,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13077,
											"end": 13102,
											"modifierDepth": 2,
											"name": "GT",
											"source": 11
										},
										{
											"begin": 13073,
											"end": 13126,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 13073,
											"end": 13126,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 13073,
											"end": 13126,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "A86B651200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13111,
											"end": 13126,
											"modifierDepth": 2,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 13073,
											"end": 13126,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "238"
										},
										{
											"begin": 13073,
											"end": 13126,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13147,
											"end": 13164,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 13147,
											"end": 13153,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13147,
											"end": 13162,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "143"
										},
										{
											"begin": 13147,
											"end": 13164,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13147,
											"end": 13164,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "239"
										},
										{
											"begin": 13147,
											"end": 13164,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13137,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13144,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "2"
										},
										{
											"begin": 13136,
											"end": 13144,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13144,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "14"
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "100"
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "EXP",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "NOT",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 13136,
											"end": 13164,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 13175,
											"end": 13232,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 13198,
											"end": 13208,
											"modifierDepth": 2,
											"name": "CALLER",
											"source": 11
										},
										{
											"begin": 13218,
											"end": 13222,
											"modifierDepth": 2,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 13225,
											"end": 13231,
											"modifierDepth": 2,
											"name": "DUP6",
											"source": 11
										},
										{
											"begin": 13175,
											"end": 13180,
											"modifierDepth": 2,
											"name": "PUSHIMMUTABLE",
											"source": 11,
											"value": "3923"
										},
										{
											"begin": 13175,
											"end": 13197,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 13175,
											"end": 13197,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13175,
											"end": 13197,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "147"
										},
										{
											"begin": 13175,
											"end": 13197,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13175,
											"end": 13232,
											"modifierDepth": 2,
											"name": "SWAP4",
											"source": 11
										},
										{
											"begin": 13175,
											"end": 13232,
											"modifierDepth": 2,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 13175,
											"end": 13232,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13175,
											"end": 13232,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13175,
											"end": 13232,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "FFFFFFFF"
										},
										{
											"begin": 13175,
											"end": 13232,
											"modifierDepth": 2,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 13175,
											"end": 13232,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13175,
											"end": 13232,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "240"
										},
										{
											"begin": 13175,
											"end": 13232,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13255,
											"end": 13263,
											"modifierDepth": 2,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "9F4592C3BD42BD33860EE93DC92D07F06E3F4FB6E19A9CA214982FE7C1BDB037"
										},
										{
											"begin": 13265,
											"end": 13271,
											"modifierDepth": 2,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "169"
										},
										{
											"begin": 13248,
											"end": 13272,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "tag",
											"source": 11,
											"value": "241"
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 13248,
											"end": 13272,
											"modifierDepth": 2,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 12754,
											"end": 13279,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12754,
											"end": 13279,
											"modifierDepth": 2,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2398,
											"end": 2416,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2398,
											"end": 2418,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "tag",
											"source": 8,
											"value": "242"
										},
										{
											"begin": 2398,
											"end": 2418,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"name": "POP",
											"source": 11
										},
										{
											"begin": 12648,
											"end": 13279,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1531,
											"end": 1542,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1531,
											"end": 1544,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "tag",
											"source": 0,
											"value": "244"
										},
										{
											"begin": 1531,
											"end": 1544,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2647,
											"end": 2648,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2635,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2627,
											"end": 2649,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2627,
											"end": 2649,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2700,
											"end": 2701,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1E4FBDF700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2672,
											"end": 2703,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "247"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2672,
											"end": 2703,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "246"
										},
										{
											"begin": 2623,
											"end": 2714,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2742,
											"end": 2750,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2741,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2723,
											"end": 2751,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "248"
										},
										{
											"begin": 2723,
											"end": 2751,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2543,
											"end": 2758,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "tag",
											"source": 0,
											"value": "107"
										},
										{
											"begin": 1796,
											"end": 1958,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1866,
											"end": 1876,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1866,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "tag",
											"source": 0,
											"value": "250"
										},
										{
											"begin": 1866,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1855,
											"end": 1860,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 1855,
											"end": 1862,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "tag",
											"source": 0,
											"value": "252"
										},
										{
											"begin": 1855,
											"end": 1862,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1855,
											"end": 1878,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1928,
											"end": 1938,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "251"
										},
										{
											"begin": 1928,
											"end": 1940,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "tag",
											"source": 0,
											"value": "254"
										},
										{
											"begin": 1928,
											"end": 1940,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "118CDAA700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 1901,
											"end": 1941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "tag",
											"source": 0,
											"value": "255"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1901,
											"end": 1941,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "tag",
											"source": 0,
											"value": "253"
										},
										{
											"begin": 1851,
											"end": 1952,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1796,
											"end": 1958,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "tag",
											"source": 7,
											"value": "110"
										},
										{
											"begin": 2710,
											"end": 2827,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1721,
											"end": 1735,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 1721,
											"end": 1737,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "tag",
											"source": 7,
											"value": "257"
										},
										{
											"begin": 1721,
											"end": 1737,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2778,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2768,
											"end": 2775,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2768,
											"end": 2783,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2807,
											"end": 2817,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2807,
											"end": 2819,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "260"
										},
										{
											"begin": 2807,
											"end": 2819,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2798,
											"end": 2820,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "261"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2798,
											"end": 2820,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2710,
											"end": 2827,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3001,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3004,
											"end": 3010,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2985,
											"end": 3010,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3029,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 3020,
											"end": 3026,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 3020,
											"end": 3037,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 3083,
											"end": 3091,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3073,
											"end": 3081,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3052,
											"end": 3092,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2975,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2912,
											"end": 3099,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "tag",
											"source": 7,
											"value": "122"
										},
										{
											"begin": 2463,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1474,
											"end": 1491,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 1474,
											"end": 1493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "tag",
											"source": 7,
											"value": "264"
										},
										{
											"begin": 1474,
											"end": 1493,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2532,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "1"
										},
										{
											"begin": 2522,
											"end": 2529,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2529,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "0"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "100"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "FF"
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "OR",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 7
										},
										{
											"begin": 2522,
											"end": 2536,
											"modifierDepth": 1,
											"name": "POP",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2558,
											"end": 2568,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "251"
										},
										{
											"begin": 2558,
											"end": 2570,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "266"
										},
										{
											"begin": 2558,
											"end": 2570,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "44"
										},
										{
											"begin": 2551,
											"end": 2571,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "tag",
											"source": 7,
											"value": "267"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2551,
											"end": 2571,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 7
										},
										{
											"begin": 2463,
											"end": 2578,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "tag",
											"source": 8,
											"value": "126"
										},
										{
											"begin": 2431,
											"end": 2738,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2558,
											"end": 2565,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": 2558,
											"end": 2576,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "3EE5AEB500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2599,
											"end": 2629,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "tag",
											"source": 8,
											"value": "269"
										},
										{
											"begin": 2554,
											"end": 2640,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1755,
											"end": 1756,
											"name": "PUSH",
											"source": 8,
											"value": "2"
										},
										{
											"begin": 2714,
											"end": 2721,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2714,
											"end": 2731,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2431,
											"end": 2738,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "tag",
											"source": 7,
											"value": "129"
										},
										{
											"begin": 2002,
											"end": 2130,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2067,
											"end": 2073,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2067,
											"end": 2075,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "tag",
											"source": 7,
											"value": "271"
										},
										{
											"begin": 2067,
											"end": 2075,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "ISZERO",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 7,
											"value": "D93C066500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2098,
											"end": 2113,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "tag",
											"source": 7,
											"value": "272"
										},
										{
											"begin": 2063,
											"end": 2124,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2002,
											"end": 2130,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 11291,
											"end": 11504,
											"name": "tag",
											"source": 10,
											"value": "143"
										},
										{
											"begin": 11291,
											"end": 11504,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11347,
											"end": 11353,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 11377,
											"end": 11393,
											"name": "PUSH",
											"source": 10,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11369,
											"end": 11393,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11369,
											"end": 11393,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 11369,
											"end": 11374,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11369,
											"end": 11393,
											"name": "GT",
											"source": 10
										},
										{
											"begin": 11365,
											"end": 11468,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 11365,
											"end": 11468,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 11365,
											"end": 11468,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 11447,
											"end": 11449,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 11451,
											"end": 11456,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "PUSH",
											"source": 10,
											"value": "6DFCC65000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "276"
										},
										{
											"begin": 11416,
											"end": 11457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "tag",
											"source": 10,
											"value": "275"
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11416,
											"end": 11457,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 11365,
											"end": 11468,
											"name": "tag",
											"source": 10,
											"value": "274"
										},
										{
											"begin": 11365,
											"end": 11468,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 11491,
											"end": 11496,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 11477,
											"end": 11497,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11477,
											"end": 11497,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11291,
											"end": 11504,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 11291,
											"end": 11504,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 11291,
											"end": 11504,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 11291,
											"end": 11504,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 1822,
											"end": 1827,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1849,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1844,
											"end": 1862,
											"name": "PUSH",
											"source": 4,
											"value": "23B872DD"
										},
										{
											"begin": 1865,
											"end": 1869,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1871,
											"end": 1873,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1875,
											"end": 1880,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "280"
										},
										{
											"begin": 1829,
											"end": 1882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "tag",
											"source": 4,
											"value": "279"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1829,
											"end": 1882,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1802,
											"end": 1821,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 1802,
											"end": 1883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "tag",
											"source": 4,
											"value": "278"
										},
										{
											"begin": 1802,
											"end": 1883,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1702,
											"end": 1890,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "tag",
											"source": 8,
											"value": "151"
										},
										{
											"begin": 2744,
											"end": 2952,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 1713,
											"end": 1714,
											"name": "PUSH",
											"source": 8,
											"value": "1"
										},
										{
											"begin": 2924,
											"end": 2931,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2924,
											"end": 2945,
											"name": "POP",
											"source": 8
										},
										{
											"begin": 2744,
											"end": 2952,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1432,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1427,
											"end": 1441,
											"name": "PUSH",
											"source": 4,
											"value": "A9059CBB"
										},
										{
											"begin": 1444,
											"end": 1446,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1448,
											"end": 1453,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "286"
										},
										{
											"begin": 1412,
											"end": 1455,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "tag",
											"source": 4,
											"value": "285"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "E0"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "SHL",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1412,
											"end": 1455,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1404,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 1385,
											"end": 1456,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "tag",
											"source": 4,
											"value": "284"
										},
										{
											"begin": 1385,
											"end": 1456,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1303,
											"end": 1463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "tag",
											"source": 9,
											"value": "207"
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3885,
											"end": 3899,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4232,
											"end": 4245,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4252,
											"end": 4253,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4248,
											"end": 4249,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4248,
											"end": 4253,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4253,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 4232,
											"end": 4253,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4312,
											"end": 4325,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4437,
											"end": 4438,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4439,
											"name": "NOT",
											"source": 9
										},
										{
											"begin": 4430,
											"end": 4431,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 4427,
											"end": 4428,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 4420,
											"end": 4440,
											"name": "MULMOD",
											"source": 9
										},
										{
											"begin": 4493,
											"end": 4498,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4489,
											"end": 4491,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4486,
											"end": 4499,
											"name": "LT",
											"source": 9
										},
										{
											"begin": 4478,
											"end": 4483,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4474,
											"end": 4476,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4470,
											"end": 4484,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4466,
											"end": 4500,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4457,
											"end": 4500,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 4457,
											"end": 4500,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4392,
											"end": 4514,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4604,
											"end": 4605,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 4595,
											"end": 4600,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4595,
											"end": 4605,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 4591,
											"end": 4959,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 4591,
											"end": 4959,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4933,
											"end": 4944,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4930,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "291"
										},
										{
											"begin": 4925,
											"end": 4944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "tag",
											"source": 9,
											"value": "290"
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "tag",
											"source": 9,
											"value": "289"
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 4925,
											"end": 4944,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 4918,
											"end": 4944,
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 4591,
											"end": 4959,
											"name": "tag",
											"source": 9,
											"value": "288"
										},
										{
											"begin": 4591,
											"end": 4959,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5080,
											"end": 5085,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5076,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5065,
											"end": 5085,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5149,
											"name": "PUSH [tag]",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5061,
											"end": 5149,
											"name": "JUMPI",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "PUSH",
											"source": 9,
											"value": "227BC15300000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "MSTORE",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "PUSH",
											"source": 9,
											"value": "4"
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "PUSH",
											"source": 9,
											"value": "40"
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "MLOAD",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5112,
											"end": 5134,
											"name": "REVERT",
											"source": 9
										},
										{
											"begin": 5061,
											"end": 5149,
											"name": "tag",
											"source": 9,
											"value": "292"
										},
										{
											"begin": 5061,
											"end": 5149,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 5404,
											"end": 5421,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5539,
											"end": 5550,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 5536,
											"end": 5537,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5533,
											"end": 5534,
											"name": "DUP9",
											"source": 9
										},
										{
											"begin": 5526,
											"end": 5551,
											"name": "MULMOD",
											"source": 9
										},
										{
											"begin": 5513,
											"end": 5551,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5513,
											"end": 5551,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5667,
											"end": 5672,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5656,
											"end": 5665,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 5653,
											"end": 5673,
											"name": "GT",
											"source": 9
										},
										{
											"begin": 5646,
											"end": 5651,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 5642,
											"end": 5674,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5633,
											"end": 5674,
											"name": "SWAP2",
											"source": 9
										},
										{
											"begin": 5633,
											"end": 5674,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5711,
											"end": 5720,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 5704,
											"end": 5709,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 5700,
											"end": 5721,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5721,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 5691,
											"end": 5721,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 5939,
											"end": 5951,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5973,
											"end": 5984,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 5969,
											"end": 5970,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 5969,
											"end": 5984,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5965,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 5954,
											"end": 5985,
											"name": "AND",
											"source": 9
										},
										{
											"begin": 5939,
											"end": 5985,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 5939,
											"end": 5985,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6105,
											"end": 6109,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6092,
											"end": 6103,
											"name": "DUP7",
											"source": 9
										},
										{
											"begin": 6088,
											"end": 6110,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6073,
											"end": 6110,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 6073,
											"end": 6110,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6197,
											"end": 6201,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6190,
											"end": 6195,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6186,
											"end": 6202,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6202,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6177,
											"end": 6202,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6354,
											"end": 6355,
											"name": "PUSH",
											"source": 9,
											"value": "1"
										},
										{
											"begin": 6347,
											"end": 6351,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 6340,
											"end": 6344,
											"name": "DUP3",
											"source": 9
										},
										{
											"begin": 6337,
											"end": 6338,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6333,
											"end": 6345,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 6329,
											"end": 6352,
											"name": "DIV",
											"source": 9
										},
										{
											"begin": 6325,
											"end": 6356,
											"name": "ADD",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6356,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6317,
											"end": 6356,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6453,
											"end": 6457,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 6445,
											"end": 6450,
											"name": "DUP4",
											"source": 9
										},
										{
											"begin": 6445,
											"end": 6457,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6457,
											"name": "DUP5",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6457,
											"name": "OR",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6457,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 6436,
											"end": 6457,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 6775,
											"end": 6790,
											"name": "PUSH",
											"source": 9,
											"value": "0"
										},
										{
											"begin": 6813,
											"end": 6814,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 6798,
											"end": 6809,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 6794,
											"end": 6795,
											"name": "PUSH",
											"source": 9,
											"value": "3"
										},
										{
											"begin": 6794,
											"end": 6809,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 6793,
											"end": 6814,
											"name": "XOR",
											"source": 9
										},
										{
											"begin": 6775,
											"end": 6814,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 6775,
											"end": 6814,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7060,
											"end": 7067,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7046,
											"end": 7057,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7046,
											"end": 7067,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7042,
											"end": 7043,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7042,
											"end": 7067,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7031,
											"end": 7067,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7031,
											"end": 7067,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7031,
											"end": 7067,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7031,
											"end": 7067,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7129,
											"end": 7136,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7115,
											"end": 7126,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7115,
											"end": 7136,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7111,
											"end": 7112,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7111,
											"end": 7136,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7100,
											"end": 7136,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7199,
											"end": 7206,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7185,
											"end": 7196,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7185,
											"end": 7206,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7181,
											"end": 7182,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7181,
											"end": 7206,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7170,
											"end": 7206,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7170,
											"end": 7206,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7170,
											"end": 7206,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7170,
											"end": 7206,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7269,
											"end": 7276,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7255,
											"end": 7266,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7255,
											"end": 7276,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7251,
											"end": 7252,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7251,
											"end": 7276,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7276,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7276,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7276,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7240,
											"end": 7276,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7339,
											"end": 7346,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7325,
											"end": 7336,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7325,
											"end": 7346,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7321,
											"end": 7322,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7321,
											"end": 7346,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7310,
											"end": 7346,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7310,
											"end": 7346,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7310,
											"end": 7346,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7310,
											"end": 7346,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7410,
											"end": 7417,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7396,
											"end": 7407,
											"name": "DUP8",
											"source": 9
										},
										{
											"begin": 7396,
											"end": 7417,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7392,
											"end": 7393,
											"name": "PUSH",
											"source": 9,
											"value": "2"
										},
										{
											"begin": 7392,
											"end": 7417,
											"name": "SUB",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "DUP2",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "SWAP1",
											"source": 9
										},
										{
											"begin": 7381,
											"end": 7417,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7868,
											"end": 7875,
											"name": "DUP1",
											"source": 9
										},
										{
											"begin": 7860,
											"end": 7865,
											"name": "DUP6",
											"source": 9
										},
										{
											"begin": 7860,
											"end": 7875,
											"name": "MUL",
											"source": 9
										},
										{
											"begin": 7851,
											"end": 7875,
											"name": "SWAP6",
											"source": 9
										},
										{
											"begin": 7851,
											"end": 7875,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7889,
											"end": 7902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7889,
											"end": 7902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7889,
											"end": 7902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7889,
											"end": 7902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 7889,
											"end": 7902,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "tag",
											"source": 9,
											"value": "287"
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "JUMPDEST",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "SWAP4",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "SWAP3",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 7919,
											"name": "POP",
											"source": 9
										},
										{
											"begin": 3803,
											"end": 7919,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 9
										},
										{
											"begin": 656,
											"end": 752,
											"name": "tag",
											"source": 6,
											"value": "251"
										},
										{
											"begin": 656,
											"end": 752,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 709,
											"end": 716,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 735,
											"end": 745,
											"name": "CALLER",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 728,
											"end": 745,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 656,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "tag",
											"source": 7,
											"value": "258"
										},
										{
											"begin": 2202,
											"end": 2328,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2265,
											"end": 2271,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "46"
										},
										{
											"begin": 2265,
											"end": 2273,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "tag",
											"source": 7,
											"value": "295"
										},
										{
											"begin": 2265,
											"end": 2273,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "PUSH [tag]",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPI",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 7,
											"value": "8DFC202B00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP2",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MSTORE",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 7,
											"value": "4"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "ADD",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "PUSH",
											"source": 7,
											"value": "40"
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "MLOAD",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "DUP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP2",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SUB",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 2296,
											"end": 2311,
											"name": "REVERT",
											"source": 7
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "tag",
											"source": 7,
											"value": "296"
										},
										{
											"begin": 2260,
											"end": 2322,
											"name": "JUMPDEST",
											"source": 7
										},
										{
											"begin": 2202,
											"end": 2328,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "tag",
											"source": 4,
											"value": "281"
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4501,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 4532,
											"end": 4536,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4512,
											"end": 4517,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "299"
										},
										{
											"begin": 4504,
											"end": 4531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFF"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "tag",
											"source": 4,
											"value": "298"
										},
										{
											"begin": 4504,
											"end": 4537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4478,
											"end": 4537,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4572,
											"end": 4573,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4551,
											"end": 4561,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4568,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4573,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4589,
											"end": 4599,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "302"
										},
										{
											"begin": 4578,
											"end": 4608,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "tag",
											"source": 4,
											"value": "301"
										},
										{
											"begin": 4578,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4577,
											"end": 4608,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "tag",
											"source": 4,
											"value": "300"
										},
										{
											"begin": 4551,
											"end": 4608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 4664,
											"end": 4669,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "5274AFE700000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 4631,
											"end": 4671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "tag",
											"source": 4,
											"value": "304"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4631,
											"end": 4671,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "tag",
											"source": 4,
											"value": "303"
										},
										{
											"begin": 4547,
											"end": 4682,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4129,
											"end": 4688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4688,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4059,
											"end": 4688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "tag",
											"source": 5,
											"value": "299"
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2780,
											"end": 2792,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2841,
											"end": 2845,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 2847,
											"end": 2848,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 2811,
											"end": 2832,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 2811,
											"end": 2849,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "tag",
											"source": 5,
											"value": "306"
										},
										{
											"begin": 2811,
											"end": 2849,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 2804,
											"end": 2849,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 2705,
											"end": 2856,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "tag",
											"source": 5,
											"value": "307"
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3279,
											"end": 3291,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3331,
											"end": 3336,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3328,
											"name": "SELFBALANCE",
											"source": 5
										},
										{
											"begin": 3307,
											"end": 3336,
											"name": "LT",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3394,
											"end": 3398,
											"name": "ADDRESS",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "CD78605900000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 3359,
											"end": 3400,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "tag",
											"source": 5,
											"value": "310"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3359,
											"end": 3400,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "tag",
											"source": 5,
											"value": "309"
										},
										{
											"begin": 3303,
											"end": 3411,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3421,
											"end": 3433,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3435,
											"end": 3458,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3462,
											"end": 3473,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3481,
											"end": 3486,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3488,
											"end": 3492,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "312"
										},
										{
											"begin": 3462,
											"end": 3493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "311"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP6",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP8",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "GAS",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "CALL",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "1F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "NOT",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "3F"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATASIZE",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "RETURNDATACOPY",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "315"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "tag",
											"source": 5,
											"value": "314"
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3462,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 3420,
											"end": 3493,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 3537,
											"end": 3543,
											"name": "DUP7",
											"source": 5
										},
										{
											"begin": 3545,
											"end": 3552,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3554,
											"end": 3564,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3536,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 3510,
											"end": 3565,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "tag",
											"source": 5,
											"value": "316"
										},
										{
											"begin": 3510,
											"end": 3565,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3503,
											"end": 3565,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 3180,
											"end": 3572,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "317"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 5,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 5,
											"value": "320"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "319"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5066,
											"end": 5067,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5045,
											"end": 5055,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5093,
											"end": 5094,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5071,
											"end": 5077,
											"name": "DUP5",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "PUSH",
											"source": 5,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 5
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 5,
											"value": "323"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 5138,
											"end": 5144,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "9996B31500000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "44"
										},
										{
											"begin": 5121,
											"end": 5145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "tag",
											"source": 5,
											"value": "325"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 5,
											"value": "324"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 5,
											"value": "322"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 5,
											"value": "318"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 5
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 5,
											"value": "321"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 5894,
											"end": 5895,
											"name": "PUSH",
											"source": 5,
											"value": "0"
										},
										{
											"begin": 5874,
											"end": 5884,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "GT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "ISZERO",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 5
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 5
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 5,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 5,
											"value": "327"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "1425EA4200000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 5,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 5
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "97"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "330"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "101"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "330"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 12,
											"value": "400"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "tag",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 545,
											"end": 684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 591,
											"end": 596,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 629,
											"end": 635,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 616,
											"end": 636,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 607,
											"end": 636,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 607,
											"end": 636,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 672,
											"end": 677,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "335"
										},
										{
											"begin": 645,
											"end": 678,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 645,
											"end": 678,
											"name": "tag",
											"source": 12,
											"value": "402"
										},
										{
											"begin": 645,
											"end": 678,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 545,
											"end": 684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "tag",
											"source": 12,
											"value": "27"
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 749,
											"end": 755,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 798,
											"end": 800,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 786,
											"end": 795,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 777,
											"end": 784,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 773,
											"end": 796,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 769,
											"end": 801,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 766,
											"end": 885,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 766,
											"end": 885,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 804,
											"end": 883,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 804,
											"end": 883,
											"name": "tag",
											"source": 12,
											"value": "405"
										},
										{
											"begin": 804,
											"end": 883,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 766,
											"end": 885,
											"name": "tag",
											"source": 12,
											"value": "404"
										},
										{
											"begin": 766,
											"end": 885,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 924,
											"end": 925,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 994,
											"end": 1001,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 985,
											"end": 991,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 974,
											"end": 983,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 970,
											"end": 992,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 949,
											"end": 1002,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "tag",
											"source": 12,
											"value": "406"
										},
										{
											"begin": 949,
											"end": 1002,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 939,
											"end": 1002,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 895,
											"end": 1012,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 690,
											"end": 1019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "tag",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 1120,
											"end": 1125,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 1102,
											"end": 1126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "tag",
											"source": 12,
											"value": "408"
										},
										{
											"begin": 1102,
											"end": 1126,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1097,
											"end": 1100,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1090,
											"end": 1127,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1025,
											"end": 1133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "tag",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1176,
											"end": 1183,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1216,
											"end": 1258,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1209,
											"end": 1214,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1205,
											"end": 1259,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1194,
											"end": 1259,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1194,
											"end": 1259,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1265,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1139,
											"end": 1265,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "tag",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1308,
											"end": 1315,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 1355,
											"end": 1360,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 1337,
											"end": 1361,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "tag",
											"source": 12,
											"value": "411"
										},
										{
											"begin": 1337,
											"end": 1361,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1326,
											"end": 1361,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1326,
											"end": 1361,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1271,
											"end": 1367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1271,
											"end": 1367,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "tag",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 1468,
											"end": 1473,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 1450,
											"end": 1474,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "tag",
											"source": 12,
											"value": "413"
										},
										{
											"begin": 1450,
											"end": 1474,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1445,
											"end": 1448,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1438,
											"end": 1475,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1373,
											"end": 1481,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1373,
											"end": 1481,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1596,
											"name": "tag",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 1487,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1523,
											"end": 1530,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1563,
											"end": 1589,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1556,
											"end": 1561,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1552,
											"end": 1590,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1541,
											"end": 1590,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1541,
											"end": 1590,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1596,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1596,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1596,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1487,
											"end": 1596,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1602,
											"end": 1707,
											"name": "tag",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 1602,
											"end": 1707,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 1694,
											"end": 1699,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "341"
										},
										{
											"begin": 1677,
											"end": 1700,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 1677,
											"end": 1700,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1672,
											"end": 1675,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1665,
											"end": 1701,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1602,
											"end": 1707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1602,
											"end": 1707,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1602,
											"end": 1707,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1814,
											"name": "tag",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 1713,
											"end": 1814,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1749,
											"end": 1756,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1789,
											"end": 1807,
											"name": "PUSH",
											"source": 12,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1782,
											"end": 1787,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1778,
											"end": 1808,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1767,
											"end": 1808,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1814,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1814,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1814,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1713,
											"end": 1814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1925,
											"name": "tag",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 1820,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1895,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 1912,
											"end": 1917,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 1895,
											"end": 1918,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 1895,
											"end": 1918,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1895,
											"end": 1918,
											"name": "tag",
											"source": 12,
											"value": "419"
										},
										{
											"begin": 1895,
											"end": 1918,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1890,
											"end": 1893,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 1883,
											"end": 1919,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1925,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 1820,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 1931,
											"end": 2111,
											"name": "tag",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 1931,
											"end": 2111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 1979,
											"end": 2056,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1976,
											"end": 1977,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 1969,
											"end": 2057,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2076,
											"end": 2080,
											"name": "PUSH",
											"source": 12,
											"value": "21"
										},
										{
											"begin": 2073,
											"end": 2074,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2066,
											"end": 2081,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2100,
											"end": 2104,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 2097,
											"end": 2098,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2090,
											"end": 2105,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 2117,
											"end": 2233,
											"name": "tag",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 2117,
											"end": 2233,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2201,
											"end": 2202,
											"name": "PUSH",
											"source": 12,
											"value": "5"
										},
										{
											"begin": 2194,
											"end": 2199,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2191,
											"end": 2203,
											"name": "LT",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2227,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 2181,
											"end": 2227,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "101"
										},
										{
											"begin": 2207,
											"end": 2225,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "tag",
											"source": 12,
											"value": "423"
										},
										{
											"begin": 2207,
											"end": 2225,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2181,
											"end": 2227,
											"name": "tag",
											"source": 12,
											"value": "422"
										},
										{
											"begin": 2181,
											"end": 2227,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2117,
											"end": 2233,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2117,
											"end": 2233,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2239,
											"end": 2372,
											"name": "tag",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 2239,
											"end": 2372,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2287,
											"end": 2294,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2321,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2305,
											"end": 2321,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2305,
											"end": 2321,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 2360,
											"end": 2365,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "345"
										},
										{
											"begin": 2322,
											"end": 2366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2322,
											"end": 2366,
											"name": "tag",
											"source": 12,
											"value": "425"
										},
										{
											"begin": 2322,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2239,
											"end": 2372,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2239,
											"end": 2372,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2239,
											"end": 2372,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2239,
											"end": 2372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2511,
											"name": "tag",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 2378,
											"end": 2511,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2437,
											"end": 2446,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2470,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 2499,
											"end": 2504,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2470,
											"end": 2505,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "346"
										},
										{
											"begin": 2470,
											"end": 2505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2470,
											"end": 2505,
											"name": "tag",
											"source": 12,
											"value": "427"
										},
										{
											"begin": 2470,
											"end": 2505,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2457,
											"end": 2505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2511,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2511,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2511,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2378,
											"end": 2511,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2517,
											"end": 2656,
											"name": "tag",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 2517,
											"end": 2656,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2603,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 2643,
											"end": 2648,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2603,
											"end": 2649,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "347"
										},
										{
											"begin": 2603,
											"end": 2649,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2603,
											"end": 2649,
											"name": "tag",
											"source": 12,
											"value": "429"
										},
										{
											"begin": 2603,
											"end": 2649,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2598,
											"end": 2601,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2591,
											"end": 2650,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 2517,
											"end": 2656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2517,
											"end": 2656,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2517,
											"end": 2656,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 4132,
											"name": "tag",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 2726,
											"end": 4132,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2871,
											"end": 2875,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 2866,
											"end": 2869,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2862,
											"end": 2876,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2968,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2962,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2953,
											"end": 2969,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 2947,
											"end": 2970,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 3040,
											"end": 3044,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 3035,
											"end": 3038,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3031,
											"end": 3045,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3017,
											"end": 3029,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3046,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "337"
										},
										{
											"begin": 2983,
											"end": 3046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2983,
											"end": 3046,
											"name": "tag",
											"source": 12,
											"value": "431"
										},
										{
											"begin": 2983,
											"end": 3046,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2886,
											"end": 3056,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3141,
											"end": 3145,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3134,
											"end": 3139,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3130,
											"end": 3146,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3124,
											"end": 3147,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 3217,
											"end": 3221,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 3212,
											"end": 3215,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3208,
											"end": 3222,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3194,
											"end": 3206,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3223,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 3160,
											"end": 3223,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3160,
											"end": 3223,
											"name": "tag",
											"source": 12,
											"value": "432"
										},
										{
											"begin": 3160,
											"end": 3223,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3066,
											"end": 3233,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3319,
											"end": 3323,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3312,
											"end": 3317,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3308,
											"end": 3324,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3302,
											"end": 3325,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3338,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 3395,
											"end": 3399,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 3390,
											"end": 3393,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3386,
											"end": 3400,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3372,
											"end": 3384,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3338,
											"end": 3401,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "340"
										},
										{
											"begin": 3338,
											"end": 3401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3338,
											"end": 3401,
											"name": "tag",
											"source": 12,
											"value": "433"
										},
										{
											"begin": 3338,
											"end": 3401,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3243,
											"end": 3411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3495,
											"end": 3499,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3488,
											"end": 3493,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3478,
											"end": 3501,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 3569,
											"end": 3573,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 3564,
											"end": 3567,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3560,
											"end": 3574,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3546,
											"end": 3558,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3575,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "342"
										},
										{
											"begin": 3514,
											"end": 3575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3514,
											"end": 3575,
											"name": "tag",
											"source": 12,
											"value": "434"
										},
										{
											"begin": 3514,
											"end": 3575,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3421,
											"end": 3585,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3671,
											"end": 3675,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3664,
											"end": 3669,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3660,
											"end": 3676,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3654,
											"end": 3677,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3690,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 3745,
											"end": 3749,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 3740,
											"end": 3743,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3736,
											"end": 3750,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3722,
											"end": 3734,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3690,
											"end": 3751,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 3690,
											"end": 3751,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3690,
											"end": 3751,
											"name": "tag",
											"source": 12,
											"value": "435"
										},
										{
											"begin": 3690,
											"end": 3751,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3595,
											"end": 3761,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 3850,
											"end": 3854,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 3843,
											"end": 3848,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3839,
											"end": 3855,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3833,
											"end": 3856,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 3924,
											"end": 3928,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 3919,
											"end": 3922,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 3915,
											"end": 3929,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 3901,
											"end": 3913,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3930,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "344"
										},
										{
											"begin": 3869,
											"end": 3930,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 3869,
											"end": 3930,
											"name": "tag",
											"source": 12,
											"value": "436"
										},
										{
											"begin": 3869,
											"end": 3930,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3771,
											"end": 3940,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4024,
											"end": 4028,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 4017,
											"end": 4022,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4013,
											"end": 4029,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4007,
											"end": 4030,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 4043,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 4109,
											"end": 4113,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 4104,
											"end": 4107,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 4100,
											"end": 4114,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4086,
											"end": 4098,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4043,
											"end": 4115,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "348"
										},
										{
											"begin": 4043,
											"end": 4115,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4043,
											"end": 4115,
											"name": "tag",
											"source": 12,
											"value": "437"
										},
										{
											"begin": 4043,
											"end": 4115,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3950,
											"end": 4125,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2840,
											"end": 4132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 4132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 4132,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 2726,
											"end": 4132,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4138,
											"end": 4457,
											"name": "tag",
											"source": 12,
											"value": "30"
										},
										{
											"begin": 4138,
											"end": 4457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4279,
											"end": 4283,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4317,
											"end": 4320,
											"name": "PUSH",
											"source": 12,
											"value": "E0"
										},
										{
											"begin": 4306,
											"end": 4315,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4302,
											"end": 4321,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4321,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4294,
											"end": 4321,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4331,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 4447,
											"end": 4448,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4436,
											"end": 4445,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4432,
											"end": 4449,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4423,
											"end": 4429,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4331,
											"end": 4450,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "349"
										},
										{
											"begin": 4331,
											"end": 4450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4331,
											"end": 4450,
											"name": "tag",
											"source": 12,
											"value": "439"
										},
										{
											"begin": 4331,
											"end": 4450,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4138,
											"end": 4457,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4138,
											"end": 4457,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4138,
											"end": 4457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4138,
											"end": 4457,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4138,
											"end": 4457,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4463,
											"end": 4552,
											"name": "tag",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 4463,
											"end": 4552,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4499,
											"end": 4506,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4539,
											"end": 4545,
											"name": "PUSH",
											"source": 12,
											"value": "FFFF"
										},
										{
											"begin": 4532,
											"end": 4537,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4528,
											"end": 4546,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 4517,
											"end": 4546,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4517,
											"end": 4546,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4463,
											"end": 4552,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4463,
											"end": 4552,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4463,
											"end": 4552,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4463,
											"end": 4552,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4673,
											"name": "tag",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4558,
											"end": 4673,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4643,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 4660,
											"end": 4665,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4643,
											"end": 4666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 4643,
											"end": 4666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4643,
											"end": 4666,
											"name": "tag",
											"source": 12,
											"value": "442"
										},
										{
											"begin": 4643,
											"end": 4666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4638,
											"end": 4641,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4631,
											"end": 4667,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4673,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4558,
											"end": 4673,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4897,
											"name": "tag",
											"source": 12,
											"value": "34"
										},
										{
											"begin": 4679,
											"end": 4897,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4770,
											"end": 4774,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4808,
											"end": 4810,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 4797,
											"end": 4806,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 4793,
											"end": 4811,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4785,
											"end": 4811,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 4887,
											"end": 4888,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4876,
											"end": 4885,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 4872,
											"end": 4889,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 4863,
											"end": 4869,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 4890,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 4821,
											"end": 4890,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4821,
											"end": 4890,
											"name": "tag",
											"source": 12,
											"value": "444"
										},
										{
											"begin": 4821,
											"end": 4890,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4897,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4897,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4897,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4897,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4679,
											"end": 4897,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4903,
											"end": 4963,
											"name": "tag",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 4903,
											"end": 4963,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 4931,
											"end": 4934,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 4952,
											"end": 4957,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 4945,
											"end": 4957,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4945,
											"end": 4957,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4903,
											"end": 4963,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4903,
											"end": 4963,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4903,
											"end": 4963,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4903,
											"end": 4963,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5111,
											"name": "tag",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 4969,
											"end": 5111,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5019,
											"end": 5028,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5052,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 5070,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 5079,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 5097,
											"end": 5102,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5079,
											"end": 5103,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 5079,
											"end": 5103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5079,
											"end": 5103,
											"name": "tag",
											"source": 12,
											"value": "449"
										},
										{
											"begin": 5079,
											"end": 5103,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5070,
											"end": 5104,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 5070,
											"end": 5104,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5070,
											"end": 5104,
											"name": "tag",
											"source": 12,
											"value": "448"
										},
										{
											"begin": 5070,
											"end": 5104,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5052,
											"end": 5105,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "338"
										},
										{
											"begin": 5052,
											"end": 5105,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5052,
											"end": 5105,
											"name": "tag",
											"source": 12,
											"value": "447"
										},
										{
											"begin": 5052,
											"end": 5105,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5039,
											"end": 5105,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5039,
											"end": 5105,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5111,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5111,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5111,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 4969,
											"end": 5111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5117,
											"end": 5243,
											"name": "tag",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 5117,
											"end": 5243,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5167,
											"end": 5176,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5200,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 5231,
											"end": 5236,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "353"
										},
										{
											"begin": 5200,
											"end": 5237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5200,
											"end": 5237,
											"name": "tag",
											"source": 12,
											"value": "451"
										},
										{
											"begin": 5200,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5187,
											"end": 5237,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5187,
											"end": 5237,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5117,
											"end": 5243,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5117,
											"end": 5243,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5117,
											"end": 5243,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5117,
											"end": 5243,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5249,
											"end": 5389,
											"name": "tag",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 5249,
											"end": 5389,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5313,
											"end": 5322,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5346,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 5377,
											"end": 5382,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5346,
											"end": 5383,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "354"
										},
										{
											"begin": 5346,
											"end": 5383,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5346,
											"end": 5383,
											"name": "tag",
											"source": 12,
											"value": "453"
										},
										{
											"begin": 5346,
											"end": 5383,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5333,
											"end": 5383,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5333,
											"end": 5383,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5249,
											"end": 5389,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5249,
											"end": 5389,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5249,
											"end": 5389,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5249,
											"end": 5389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5395,
											"end": 5554,
											"name": "tag",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 5395,
											"end": 5554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5496,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 5541,
											"end": 5546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5496,
											"end": 5547,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "355"
										},
										{
											"begin": 5496,
											"end": 5547,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5496,
											"end": 5547,
											"name": "tag",
											"source": 12,
											"value": "455"
										},
										{
											"begin": 5496,
											"end": 5547,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5491,
											"end": 5494,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5484,
											"end": 5548,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5395,
											"end": 5554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5395,
											"end": 5554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5395,
											"end": 5554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5560,
											"end": 5810,
											"name": "tag",
											"source": 12,
											"value": "38"
										},
										{
											"begin": 5560,
											"end": 5810,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5667,
											"end": 5671,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5705,
											"end": 5707,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 5694,
											"end": 5703,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5690,
											"end": 5708,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5682,
											"end": 5708,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 5682,
											"end": 5708,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5718,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 5800,
											"end": 5801,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 5789,
											"end": 5798,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 5785,
											"end": 5802,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 5776,
											"end": 5782,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 5718,
											"end": 5803,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "356"
										},
										{
											"begin": 5718,
											"end": 5803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5718,
											"end": 5803,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 5718,
											"end": 5803,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5560,
											"end": 5810,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5560,
											"end": 5810,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5560,
											"end": 5810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5560,
											"end": 5810,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5560,
											"end": 5810,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5934,
											"name": "tag",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 5816,
											"end": 5934,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 5921,
											"end": 5926,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5927,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 5903,
											"end": 5927,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5903,
											"end": 5927,
											"name": "tag",
											"source": 12,
											"value": "459"
										},
										{
											"begin": 5903,
											"end": 5927,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5898,
											"end": 5901,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 5891,
											"end": 5928,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5934,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5816,
											"end": 5934,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 5940,
											"end": 6162,
											"name": "tag",
											"source": 12,
											"value": "44"
										},
										{
											"begin": 5940,
											"end": 6162,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6033,
											"end": 6037,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6073,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6060,
											"end": 6069,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6056,
											"end": 6074,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6048,
											"end": 6074,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6048,
											"end": 6074,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6084,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 6152,
											"end": 6153,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6141,
											"end": 6150,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6137,
											"end": 6154,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6128,
											"end": 6134,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6084,
											"end": 6155,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 6084,
											"end": 6155,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6084,
											"end": 6155,
											"name": "tag",
											"source": 12,
											"value": "461"
										},
										{
											"begin": 6084,
											"end": 6155,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 5940,
											"end": 6162,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 5940,
											"end": 6162,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 5940,
											"end": 6162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5940,
											"end": 6162,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 5940,
											"end": 6162,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6168,
											"end": 6258,
											"name": "tag",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 6168,
											"end": 6258,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6202,
											"end": 6209,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6245,
											"end": 6250,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6238,
											"end": 6251,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6231,
											"end": 6252,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6220,
											"end": 6252,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6220,
											"end": 6252,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6168,
											"end": 6258,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6168,
											"end": 6258,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6168,
											"end": 6258,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6168,
											"end": 6258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6264,
											"end": 6373,
											"name": "tag",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 6264,
											"end": 6373,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6345,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 6360,
											"end": 6365,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6345,
											"end": 6366,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 6345,
											"end": 6366,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6345,
											"end": 6366,
											"name": "tag",
											"source": 12,
											"value": "464"
										},
										{
											"begin": 6345,
											"end": 6366,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6340,
											"end": 6343,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6333,
											"end": 6367,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6264,
											"end": 6373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6264,
											"end": 6373,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6264,
											"end": 6373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6379,
											"end": 6589,
											"name": "tag",
											"source": 12,
											"value": "48"
										},
										{
											"begin": 6379,
											"end": 6589,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6466,
											"end": 6470,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6504,
											"end": 6506,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6502,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6489,
											"end": 6507,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6481,
											"end": 6507,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6481,
											"end": 6507,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 6579,
											"end": 6580,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6568,
											"end": 6577,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6564,
											"end": 6581,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6555,
											"end": 6561,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "359"
										},
										{
											"begin": 6517,
											"end": 6582,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "tag",
											"source": 12,
											"value": "466"
										},
										{
											"begin": 6517,
											"end": 6582,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6379,
											"end": 6589,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6379,
											"end": 6589,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6379,
											"end": 6589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6379,
											"end": 6589,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6379,
											"end": 6589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6595,
											"end": 6681,
											"name": "tag",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 6595,
											"end": 6681,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6630,
											"end": 6637,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6670,
											"end": 6674,
											"name": "PUSH",
											"source": 12,
											"value": "FF"
										},
										{
											"begin": 6663,
											"end": 6668,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6659,
											"end": 6675,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6675,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6675,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6595,
											"end": 6681,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6595,
											"end": 6681,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6595,
											"end": 6681,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6595,
											"end": 6681,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6799,
											"name": "tag",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6687,
											"end": 6799,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 6786,
											"end": 6791,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6792,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 6770,
											"end": 6792,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6770,
											"end": 6792,
											"name": "tag",
											"source": 12,
											"value": "469"
										},
										{
											"begin": 6770,
											"end": 6792,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6765,
											"end": 6768,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6758,
											"end": 6793,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6799,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6687,
											"end": 6799,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 7019,
											"name": "tag",
											"source": 12,
											"value": "54"
										},
										{
											"begin": 6805,
											"end": 7019,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6894,
											"end": 6898,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6932,
											"end": 6934,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 6921,
											"end": 6930,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 6917,
											"end": 6935,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6909,
											"end": 6935,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6909,
											"end": 6935,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6945,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 7009,
											"end": 7010,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 6998,
											"end": 7007,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 6994,
											"end": 7011,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6985,
											"end": 6991,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 6945,
											"end": 7012,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "361"
										},
										{
											"begin": 6945,
											"end": 7012,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 6945,
											"end": 7012,
											"name": "tag",
											"source": 12,
											"value": "471"
										},
										{
											"begin": 6945,
											"end": 7012,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 7019,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 7019,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 7019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 7019,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 6805,
											"end": 7019,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7147,
											"name": "tag",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 7025,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7098,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 7116,
											"end": 7121,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7098,
											"end": 7122,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 7098,
											"end": 7122,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7098,
											"end": 7122,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 7098,
											"end": 7122,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7091,
											"end": 7096,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7088,
											"end": 7123,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 7078,
											"end": 7141,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7137,
											"end": 7138,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7134,
											"end": 7135,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7127,
											"end": 7139,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7078,
											"end": 7141,
											"name": "tag",
											"source": 12,
											"value": "474"
										},
										{
											"begin": 7078,
											"end": 7141,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7147,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7025,
											"end": 7147,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7153,
											"end": 7292,
											"name": "tag",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 7153,
											"end": 7292,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7199,
											"end": 7204,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7237,
											"end": 7243,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7224,
											"end": 7244,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7215,
											"end": 7244,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7215,
											"end": 7244,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7253,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 7280,
											"end": 7285,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7253,
											"end": 7286,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "362"
										},
										{
											"begin": 7253,
											"end": 7286,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7253,
											"end": 7286,
											"name": "tag",
											"source": 12,
											"value": "476"
										},
										{
											"begin": 7253,
											"end": 7286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7153,
											"end": 7292,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7153,
											"end": 7292,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7153,
											"end": 7292,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7153,
											"end": 7292,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7153,
											"end": 7292,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7298,
											"end": 7418,
											"name": "tag",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 7298,
											"end": 7418,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7370,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 7387,
											"end": 7392,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7370,
											"end": 7393,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 7370,
											"end": 7393,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7370,
											"end": 7393,
											"name": "tag",
											"source": 12,
											"value": "478"
										},
										{
											"begin": 7370,
											"end": 7393,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7363,
											"end": 7368,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7360,
											"end": 7394,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7350,
											"end": 7412,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 7350,
											"end": 7412,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7408,
											"end": 7409,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7405,
											"end": 7406,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7398,
											"end": 7410,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7350,
											"end": 7412,
											"name": "tag",
											"source": 12,
											"value": "479"
										},
										{
											"begin": 7350,
											"end": 7412,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7298,
											"end": 7418,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7298,
											"end": 7418,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7424,
											"end": 7561,
											"name": "tag",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 7424,
											"end": 7561,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7469,
											"end": 7474,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7507,
											"end": 7513,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7494,
											"end": 7514,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7514,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7485,
											"end": 7514,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7523,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 7549,
											"end": 7554,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7523,
											"end": 7555,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "364"
										},
										{
											"begin": 7523,
											"end": 7555,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7523,
											"end": 7555,
											"name": "tag",
											"source": 12,
											"value": "481"
										},
										{
											"begin": 7523,
											"end": 7555,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7424,
											"end": 7561,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7424,
											"end": 7561,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7424,
											"end": 7561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7424,
											"end": 7561,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7424,
											"end": 7561,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7567,
											"end": 7644,
											"name": "tag",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 7567,
											"end": 7644,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7604,
											"end": 7611,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7633,
											"end": 7638,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7622,
											"end": 7638,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7622,
											"end": 7638,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7567,
											"end": 7644,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7567,
											"end": 7644,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7567,
											"end": 7644,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7567,
											"end": 7644,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7650,
											"end": 7772,
											"name": "tag",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 7650,
											"end": 7772,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7723,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 7741,
											"end": 7746,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7723,
											"end": 7747,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 7723,
											"end": 7747,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7723,
											"end": 7747,
											"name": "tag",
											"source": 12,
											"value": "484"
										},
										{
											"begin": 7723,
											"end": 7747,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7716,
											"end": 7721,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7713,
											"end": 7748,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 7703,
											"end": 7766,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 7703,
											"end": 7766,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 7762,
											"end": 7763,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7759,
											"end": 7760,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7752,
											"end": 7764,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 7703,
											"end": 7766,
											"name": "tag",
											"source": 12,
											"value": "485"
										},
										{
											"begin": 7703,
											"end": 7766,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7650,
											"end": 7772,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7650,
											"end": 7772,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7778,
											"end": 7917,
											"name": "tag",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 7778,
											"end": 7917,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7824,
											"end": 7829,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 7862,
											"end": 7868,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7849,
											"end": 7869,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 7840,
											"end": 7869,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7840,
											"end": 7869,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7878,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 7905,
											"end": 7910,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 7878,
											"end": 7911,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "367"
										},
										{
											"begin": 7878,
											"end": 7911,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7878,
											"end": 7911,
											"name": "tag",
											"source": 12,
											"value": "487"
										},
										{
											"begin": 7878,
											"end": 7911,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 7778,
											"end": 7917,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7778,
											"end": 7917,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 7778,
											"end": 7917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7778,
											"end": 7917,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7778,
											"end": 7917,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7923,
											"end": 8830,
											"name": "tag",
											"source": 12,
											"value": "62"
										},
										{
											"begin": 7923,
											"end": 8830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8016,
											"end": 8022,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8024,
											"end": 8030,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8032,
											"end": 8038,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8040,
											"end": 8046,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8048,
											"end": 8054,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8100,
											"name": "PUSH",
											"source": 12,
											"value": "A0"
										},
										{
											"begin": 8085,
											"end": 8094,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 8076,
											"end": 8083,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8072,
											"end": 8095,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 8068,
											"end": 8101,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 8065,
											"end": 8185,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 8065,
											"end": 8185,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 8065,
											"end": 8185,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 8104,
											"end": 8183,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "tag",
											"source": 12,
											"value": "490"
										},
										{
											"begin": 8104,
											"end": 8183,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8065,
											"end": 8185,
											"name": "tag",
											"source": 12,
											"value": "489"
										},
										{
											"begin": 8065,
											"end": 8185,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8224,
											"end": 8225,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 8249,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 8294,
											"end": 8301,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8285,
											"end": 8291,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8274,
											"end": 8283,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 8270,
											"end": 8292,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8249,
											"end": 8302,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 8249,
											"end": 8302,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8249,
											"end": 8302,
											"name": "tag",
											"source": 12,
											"value": "491"
										},
										{
											"begin": 8249,
											"end": 8302,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8239,
											"end": 8302,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 8239,
											"end": 8302,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8195,
											"end": 8312,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8351,
											"end": 8353,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 8377,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 8422,
											"end": 8429,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8413,
											"end": 8419,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8402,
											"end": 8411,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 8398,
											"end": 8420,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8377,
											"end": 8430,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 8377,
											"end": 8430,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8377,
											"end": 8430,
											"name": "tag",
											"source": 12,
											"value": "492"
										},
										{
											"begin": 8377,
											"end": 8430,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8367,
											"end": 8430,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 8367,
											"end": 8430,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8322,
											"end": 8440,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8479,
											"end": 8481,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 8505,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 8549,
											"end": 8556,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8540,
											"end": 8546,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8529,
											"end": 8538,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 8525,
											"end": 8547,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8505,
											"end": 8557,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 8505,
											"end": 8557,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8505,
											"end": 8557,
											"name": "tag",
											"source": 12,
											"value": "493"
										},
										{
											"begin": 8505,
											"end": 8557,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8495,
											"end": 8557,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 8495,
											"end": 8557,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8450,
											"end": 8567,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8606,
											"end": 8608,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 8632,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 8676,
											"end": 8683,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8667,
											"end": 8673,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8656,
											"end": 8665,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 8652,
											"end": 8674,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8632,
											"end": 8684,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 8632,
											"end": 8684,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8632,
											"end": 8684,
											"name": "tag",
											"source": 12,
											"value": "494"
										},
										{
											"begin": 8632,
											"end": 8684,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 8684,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8622,
											"end": 8684,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8577,
											"end": 8694,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8733,
											"end": 8736,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 8760,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 8805,
											"end": 8812,
											"name": "DUP9",
											"source": 12
										},
										{
											"begin": 8796,
											"end": 8802,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8785,
											"end": 8794,
											"name": "DUP10",
											"source": 12
										},
										{
											"begin": 8781,
											"end": 8803,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8813,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 8760,
											"end": 8813,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8760,
											"end": 8813,
											"name": "tag",
											"source": 12,
											"value": "495"
										},
										{
											"begin": 8760,
											"end": 8813,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8750,
											"end": 8813,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8750,
											"end": 8813,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8704,
											"end": 8823,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7923,
											"end": 8830,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7923,
											"end": 8830,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 7923,
											"end": 8830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7923,
											"end": 8830,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 7923,
											"end": 8830,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 7923,
											"end": 8830,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 7923,
											"end": 8830,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 7923,
											"end": 8830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 7923,
											"end": 8830,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8836,
											"end": 8954,
											"name": "tag",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 8836,
											"end": 8954,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 8941,
											"end": 8946,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8947,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 8923,
											"end": 8947,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8923,
											"end": 8947,
											"name": "tag",
											"source": 12,
											"value": "497"
										},
										{
											"begin": 8923,
											"end": 8947,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8918,
											"end": 8921,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 8911,
											"end": 8948,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 8836,
											"end": 8954,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8836,
											"end": 8954,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8836,
											"end": 8954,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 8960,
											"end": 9182,
											"name": "tag",
											"source": 12,
											"value": "65"
										},
										{
											"begin": 8960,
											"end": 9182,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9053,
											"end": 9057,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9091,
											"end": 9093,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9080,
											"end": 9089,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9076,
											"end": 9094,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9068,
											"end": 9094,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9068,
											"end": 9094,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9104,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 9172,
											"end": 9173,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9161,
											"end": 9170,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9157,
											"end": 9174,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9148,
											"end": 9154,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9104,
											"end": 9175,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "369"
										},
										{
											"begin": 9104,
											"end": 9175,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9104,
											"end": 9175,
											"name": "tag",
											"source": 12,
											"value": "499"
										},
										{
											"begin": 9104,
											"end": 9175,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 8960,
											"end": 9182,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 8960,
											"end": 9182,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 8960,
											"end": 9182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8960,
											"end": 9182,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 8960,
											"end": 9182,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9188,
											"end": 9805,
											"name": "tag",
											"source": 12,
											"value": "74"
										},
										{
											"begin": 9188,
											"end": 9805,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9264,
											"end": 9270,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9272,
											"end": 9278,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9280,
											"end": 9286,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9329,
											"end": 9331,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 9317,
											"end": 9326,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 9308,
											"end": 9315,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9304,
											"end": 9327,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9300,
											"end": 9332,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9297,
											"end": 9416,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9297,
											"end": 9416,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 9297,
											"end": 9416,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9335,
											"end": 9414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 9335,
											"end": 9414,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 9335,
											"end": 9414,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9335,
											"end": 9414,
											"name": "tag",
											"source": 12,
											"value": "502"
										},
										{
											"begin": 9335,
											"end": 9414,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9297,
											"end": 9416,
											"name": "tag",
											"source": 12,
											"value": "501"
										},
										{
											"begin": 9297,
											"end": 9416,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9455,
											"end": 9456,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 9525,
											"end": 9532,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9516,
											"end": 9522,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9505,
											"end": 9514,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9501,
											"end": 9523,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9533,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 9480,
											"end": 9533,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9480,
											"end": 9533,
											"name": "tag",
											"source": 12,
											"value": "503"
										},
										{
											"begin": 9480,
											"end": 9533,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9470,
											"end": 9533,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 9470,
											"end": 9533,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9426,
											"end": 9543,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9582,
											"end": 9584,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 9608,
											"end": 9661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 9653,
											"end": 9660,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9644,
											"end": 9650,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9633,
											"end": 9642,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9629,
											"end": 9651,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9661,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 9608,
											"end": 9661,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9608,
											"end": 9661,
											"name": "tag",
											"source": 12,
											"value": "504"
										},
										{
											"begin": 9608,
											"end": 9661,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9598,
											"end": 9661,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9598,
											"end": 9661,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9553,
											"end": 9671,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9710,
											"end": 9712,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9736,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 9780,
											"end": 9787,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 9771,
											"end": 9777,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 9760,
											"end": 9769,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 9756,
											"end": 9778,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 9736,
											"end": 9788,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "365"
										},
										{
											"begin": 9736,
											"end": 9788,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9736,
											"end": 9788,
											"name": "tag",
											"source": 12,
											"value": "505"
										},
										{
											"begin": 9736,
											"end": 9788,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9726,
											"end": 9788,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 9726,
											"end": 9788,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9681,
											"end": 9798,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9188,
											"end": 9805,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9188,
											"end": 9805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9188,
											"end": 9805,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9188,
											"end": 9805,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9188,
											"end": 9805,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9188,
											"end": 9805,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 10285,
											"name": "tag",
											"source": 12,
											"value": "79"
										},
										{
											"begin": 9811,
											"end": 10285,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9879,
											"end": 9885,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9887,
											"end": 9893,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 9936,
											"end": 9938,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 9924,
											"end": 9933,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 9915,
											"end": 9922,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 9911,
											"end": 9934,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 9907,
											"end": 9939,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 9904,
											"end": 10023,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 9904,
											"end": 10023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 9904,
											"end": 10023,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 9942,
											"end": 10021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 9942,
											"end": 10021,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 9942,
											"end": 10021,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 9942,
											"end": 10021,
											"name": "tag",
											"source": 12,
											"value": "508"
										},
										{
											"begin": 9942,
											"end": 10021,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 9904,
											"end": 10023,
											"name": "tag",
											"source": 12,
											"value": "507"
										},
										{
											"begin": 9904,
											"end": 10023,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10062,
											"end": 10063,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10087,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 10132,
											"end": 10139,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10123,
											"end": 10129,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10112,
											"end": 10121,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10108,
											"end": 10130,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10087,
											"end": 10140,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 10087,
											"end": 10140,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10087,
											"end": 10140,
											"name": "tag",
											"source": 12,
											"value": "509"
										},
										{
											"begin": 10087,
											"end": 10140,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10077,
											"end": 10140,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10077,
											"end": 10140,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10033,
											"end": 10150,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10189,
											"end": 10191,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10215,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 10260,
											"end": 10267,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10251,
											"end": 10257,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10240,
											"end": 10249,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10236,
											"end": 10258,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10215,
											"end": 10268,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 10215,
											"end": 10268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10215,
											"end": 10268,
											"name": "tag",
											"source": 12,
											"value": "510"
										},
										{
											"begin": 10215,
											"end": 10268,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10205,
											"end": 10268,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10205,
											"end": 10268,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10160,
											"end": 10278,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 10285,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 10285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 10285,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 10285,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 10285,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 9811,
											"end": 10285,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10291,
											"end": 10411,
											"name": "tag",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 10291,
											"end": 10411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10363,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 10380,
											"end": 10385,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10363,
											"end": 10386,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "350"
										},
										{
											"begin": 10363,
											"end": 10386,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10363,
											"end": 10386,
											"name": "tag",
											"source": 12,
											"value": "512"
										},
										{
											"begin": 10363,
											"end": 10386,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10356,
											"end": 10361,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10353,
											"end": 10387,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10405,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 10343,
											"end": 10405,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10401,
											"end": 10402,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10398,
											"end": 10399,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10391,
											"end": 10403,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 10343,
											"end": 10405,
											"name": "tag",
											"source": 12,
											"value": "513"
										},
										{
											"begin": 10343,
											"end": 10405,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10291,
											"end": 10411,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10291,
											"end": 10411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10554,
											"name": "tag",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 10417,
											"end": 10554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10462,
											"end": 10467,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10500,
											"end": 10506,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10487,
											"end": 10507,
											"name": "CALLDATALOAD",
											"source": 12
										},
										{
											"begin": 10478,
											"end": 10507,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10478,
											"end": 10507,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10516,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 10542,
											"end": 10547,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 10516,
											"end": 10548,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "370"
										},
										{
											"begin": 10516,
											"end": 10548,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10516,
											"end": 10548,
											"name": "tag",
											"source": 12,
											"value": "515"
										},
										{
											"begin": 10516,
											"end": 10548,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10554,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10554,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10554,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10417,
											"end": 10554,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 11032,
											"name": "tag",
											"source": 12,
											"value": "86"
										},
										{
											"begin": 10560,
											"end": 11032,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10627,
											"end": 10633,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10635,
											"end": 10641,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10684,
											"end": 10686,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 10672,
											"end": 10681,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 10663,
											"end": 10670,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10659,
											"end": 10682,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 10655,
											"end": 10687,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 10652,
											"end": 10771,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 10652,
											"end": 10771,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 10652,
											"end": 10771,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 10690,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 10690,
											"end": 10769,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 10690,
											"end": 10769,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10690,
											"end": 10769,
											"name": "tag",
											"source": 12,
											"value": "518"
										},
										{
											"begin": 10690,
											"end": 10769,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10652,
											"end": 10771,
											"name": "tag",
											"source": 12,
											"value": "517"
										},
										{
											"begin": 10652,
											"end": 10771,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10810,
											"end": 10811,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 10835,
											"end": 10887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 10879,
											"end": 10886,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10870,
											"end": 10876,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10859,
											"end": 10868,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10855,
											"end": 10877,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10835,
											"end": 10887,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "371"
										},
										{
											"begin": 10835,
											"end": 10887,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10835,
											"end": 10887,
											"name": "tag",
											"source": 12,
											"value": "519"
										},
										{
											"begin": 10835,
											"end": 10887,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10825,
											"end": 10887,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10825,
											"end": 10887,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10781,
											"end": 10897,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10936,
											"end": 10938,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 10962,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 11007,
											"end": 11014,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 10998,
											"end": 11004,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 10987,
											"end": 10996,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 10983,
											"end": 11005,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 10962,
											"end": 11015,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 10962,
											"end": 11015,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 10962,
											"end": 11015,
											"name": "tag",
											"source": 12,
											"value": "520"
										},
										{
											"begin": 10962,
											"end": 11015,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 10952,
											"end": 11015,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 10952,
											"end": 11015,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10907,
											"end": 11025,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 11032,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 11032,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 11032,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 11032,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 11032,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 10560,
											"end": 11032,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11512,
											"name": "tag",
											"source": 12,
											"value": "90"
										},
										{
											"begin": 11038,
											"end": 11512,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11106,
											"end": 11112,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11114,
											"end": 11120,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11163,
											"end": 11165,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 11151,
											"end": 11160,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 11142,
											"end": 11149,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11138,
											"end": 11161,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11134,
											"end": 11166,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11131,
											"end": 11250,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11131,
											"end": 11250,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 11131,
											"end": 11250,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11169,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 11169,
											"end": 11248,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 11169,
											"end": 11248,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11169,
											"end": 11248,
											"name": "tag",
											"source": 12,
											"value": "523"
										},
										{
											"begin": 11169,
											"end": 11248,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11131,
											"end": 11250,
											"name": "tag",
											"source": 12,
											"value": "522"
										},
										{
											"begin": 11131,
											"end": 11250,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11289,
											"end": 11290,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11314,
											"end": 11367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 11359,
											"end": 11366,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11350,
											"end": 11356,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11339,
											"end": 11348,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11335,
											"end": 11357,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11314,
											"end": 11367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "336"
										},
										{
											"begin": 11314,
											"end": 11367,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11314,
											"end": 11367,
											"name": "tag",
											"source": 12,
											"value": "524"
										},
										{
											"begin": 11314,
											"end": 11367,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11304,
											"end": 11367,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11304,
											"end": 11367,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11260,
											"end": 11377,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11416,
											"end": 11418,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11442,
											"end": 11495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 11487,
											"end": 11494,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11478,
											"end": 11484,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11467,
											"end": 11476,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 11463,
											"end": 11485,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11442,
											"end": 11495,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "368"
										},
										{
											"begin": 11442,
											"end": 11495,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11442,
											"end": 11495,
											"name": "tag",
											"source": 12,
											"value": "525"
										},
										{
											"begin": 11442,
											"end": 11495,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11432,
											"end": 11495,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11432,
											"end": 11495,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11387,
											"end": 11505,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11512,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11512,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11512,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11038,
											"end": 11512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11518,
											"end": 11847,
											"name": "tag",
											"source": 12,
											"value": "94"
										},
										{
											"begin": 11518,
											"end": 11847,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11577,
											"end": 11583,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11626,
											"end": 11628,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 11614,
											"end": 11623,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11605,
											"end": 11612,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11601,
											"end": 11624,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 11597,
											"end": 11629,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 11594,
											"end": 11713,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 11594,
											"end": 11713,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 11594,
											"end": 11713,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 11632,
											"end": 11711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 11632,
											"end": 11711,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 11632,
											"end": 11711,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11632,
											"end": 11711,
											"name": "tag",
											"source": 12,
											"value": "528"
										},
										{
											"begin": 11632,
											"end": 11711,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11594,
											"end": 11713,
											"name": "tag",
											"source": 12,
											"value": "527"
										},
										{
											"begin": 11594,
											"end": 11713,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11752,
											"end": 11753,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 11777,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 11822,
											"end": 11829,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 11813,
											"end": 11819,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11802,
											"end": 11811,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 11798,
											"end": 11820,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 11777,
											"end": 11830,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "363"
										},
										{
											"begin": 11777,
											"end": 11830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11777,
											"end": 11830,
											"name": "tag",
											"source": 12,
											"value": "529"
										},
										{
											"begin": 11777,
											"end": 11830,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11767,
											"end": 11830,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11767,
											"end": 11830,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11723,
											"end": 11840,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11518,
											"end": 11847,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 11518,
											"end": 11847,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 11518,
											"end": 11847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11518,
											"end": 11847,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11518,
											"end": 11847,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11853,
											"end": 11968,
											"name": "tag",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 11853,
											"end": 11968,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11938,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 11955,
											"end": 11960,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 11938,
											"end": 11961,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 11938,
											"end": 11961,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11938,
											"end": 11961,
											"name": "tag",
											"source": 12,
											"value": "531"
										},
										{
											"begin": 11938,
											"end": 11961,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 11933,
											"end": 11936,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 11926,
											"end": 11962,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11853,
											"end": 11968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11853,
											"end": 11968,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11853,
											"end": 11968,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 11974,
											"end": 12092,
											"name": "tag",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 11974,
											"end": 12092,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12061,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 12079,
											"end": 12084,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12061,
											"end": 12085,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 12061,
											"end": 12085,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12061,
											"end": 12085,
											"name": "tag",
											"source": 12,
											"value": "533"
										},
										{
											"begin": 12061,
											"end": 12085,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12056,
											"end": 12059,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12049,
											"end": 12086,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 11974,
											"end": 12092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11974,
											"end": 12092,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 11974,
											"end": 12092,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12643,
											"name": "tag",
											"source": 12,
											"value": "149"
										},
										{
											"begin": 12098,
											"end": 12643,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12271,
											"end": 12275,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12309,
											"end": 12312,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 12298,
											"end": 12307,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12294,
											"end": 12313,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12286,
											"end": 12313,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12286,
											"end": 12313,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12323,
											"end": 12392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 12389,
											"end": 12390,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12378,
											"end": 12387,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12374,
											"end": 12391,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12365,
											"end": 12371,
											"name": "DUP8",
											"source": 12
										},
										{
											"begin": 12323,
											"end": 12392,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 12323,
											"end": 12392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12323,
											"end": 12392,
											"name": "tag",
											"source": 12,
											"value": "535"
										},
										{
											"begin": 12323,
											"end": 12392,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12402,
											"end": 12472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 12468,
											"end": 12470,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12457,
											"end": 12466,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12453,
											"end": 12471,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12444,
											"end": 12450,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 12402,
											"end": 12472,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "372"
										},
										{
											"begin": 12402,
											"end": 12472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12402,
											"end": 12472,
											"name": "tag",
											"source": 12,
											"value": "536"
										},
										{
											"begin": 12402,
											"end": 12472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12482,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 12550,
											"end": 12552,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 12539,
											"end": 12548,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12535,
											"end": 12553,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12526,
											"end": 12532,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 12482,
											"end": 12554,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 12482,
											"end": 12554,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12482,
											"end": 12554,
											"name": "tag",
											"source": 12,
											"value": "537"
										},
										{
											"begin": 12482,
											"end": 12554,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12564,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 12632,
											"end": 12634,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 12621,
											"end": 12630,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12617,
											"end": 12635,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12608,
											"end": 12614,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12564,
											"end": 12636,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 12564,
											"end": 12636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12564,
											"end": 12636,
											"name": "tag",
											"source": 12,
											"value": "538"
										},
										{
											"begin": 12564,
											"end": 12636,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12643,
											"name": "SWAP6",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12643,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12643,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12098,
											"end": 12643,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12649,
											"end": 12871,
											"name": "tag",
											"source": 12,
											"value": "169"
										},
										{
											"begin": 12649,
											"end": 12871,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12742,
											"end": 12746,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12780,
											"end": 12782,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 12769,
											"end": 12778,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 12765,
											"end": 12783,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12757,
											"end": 12783,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12757,
											"end": 12783,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12793,
											"end": 12864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 12861,
											"end": 12862,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12850,
											"end": 12859,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 12846,
											"end": 12863,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 12837,
											"end": 12843,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 12793,
											"end": 12864,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 12793,
											"end": 12864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12793,
											"end": 12864,
											"name": "tag",
											"source": 12,
											"value": "540"
										},
										{
											"begin": 12793,
											"end": 12864,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12649,
											"end": 12871,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 12649,
											"end": 12871,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12649,
											"end": 12871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12649,
											"end": 12871,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12649,
											"end": 12871,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12877,
											"end": 12971,
											"name": "tag",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 12877,
											"end": 12971,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 12910,
											"end": 12918,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 12958,
											"end": 12963,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 12954,
											"end": 12956,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 12950,
											"end": 12964,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 12929,
											"end": 12964,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12929,
											"end": 12964,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12877,
											"end": 12971,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12877,
											"end": 12971,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12877,
											"end": 12971,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12877,
											"end": 12971,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 12977,
											"end": 13071,
											"name": "tag",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 12977,
											"end": 13071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13016,
											"end": 13023,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13045,
											"end": 13065,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 13059,
											"end": 13064,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13045,
											"end": 13065,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "374"
										},
										{
											"begin": 13045,
											"end": 13065,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13045,
											"end": 13065,
											"name": "tag",
											"source": 12,
											"value": "543"
										},
										{
											"begin": 13045,
											"end": 13065,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13034,
											"end": 13065,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13034,
											"end": 13065,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12977,
											"end": 13071,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 12977,
											"end": 13071,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 12977,
											"end": 13071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 12977,
											"end": 13071,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13077,
											"end": 13177,
											"name": "tag",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 13077,
											"end": 13177,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13116,
											"end": 13123,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13145,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 13165,
											"end": 13170,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13145,
											"end": 13171,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "375"
										},
										{
											"begin": 13145,
											"end": 13171,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13145,
											"end": 13171,
											"name": "tag",
											"source": 12,
											"value": "545"
										},
										{
											"begin": 13145,
											"end": 13171,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13171,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13134,
											"end": 13171,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13077,
											"end": 13177,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13077,
											"end": 13177,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13077,
											"end": 13177,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13077,
											"end": 13177,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13183,
											"end": 13340,
											"name": "tag",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 13183,
											"end": 13340,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13288,
											"end": 13333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 13308,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 13326,
											"end": 13331,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13308,
											"end": 13332,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "339"
										},
										{
											"begin": 13308,
											"end": 13332,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13308,
											"end": 13332,
											"name": "tag",
											"source": 12,
											"value": "548"
										},
										{
											"begin": 13308,
											"end": 13332,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13288,
											"end": 13333,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "376"
										},
										{
											"begin": 13288,
											"end": 13333,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13288,
											"end": 13333,
											"name": "tag",
											"source": 12,
											"value": "547"
										},
										{
											"begin": 13288,
											"end": 13333,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13283,
											"end": 13286,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13276,
											"end": 13334,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13183,
											"end": 13340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13183,
											"end": 13340,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13183,
											"end": 13340,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13346,
											"end": 13425,
											"name": "tag",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 13346,
											"end": 13425,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13385,
											"end": 13392,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13414,
											"end": 13419,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13403,
											"end": 13419,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13403,
											"end": 13419,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13346,
											"end": 13425,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13346,
											"end": 13425,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13346,
											"end": 13425,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13346,
											"end": 13425,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13431,
											"end": 13588,
											"name": "tag",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 13431,
											"end": 13588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13536,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 13556,
											"end": 13580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 13574,
											"end": 13579,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13580,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "334"
										},
										{
											"begin": 13556,
											"end": 13580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13556,
											"end": 13580,
											"name": "tag",
											"source": 12,
											"value": "552"
										},
										{
											"begin": 13556,
											"end": 13580,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13536,
											"end": 13581,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "378"
										},
										{
											"begin": 13536,
											"end": 13581,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13536,
											"end": 13581,
											"name": "tag",
											"source": 12,
											"value": "551"
										},
										{
											"begin": 13536,
											"end": 13581,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13531,
											"end": 13534,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13524,
											"end": 13582,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13431,
											"end": 13588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13431,
											"end": 13588,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13431,
											"end": 13588,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13594,
											"end": 13690,
											"name": "tag",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 13594,
											"end": 13690,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13628,
											"end": 13636,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13677,
											"end": 13682,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 13672,
											"end": 13675,
											"name": "PUSH",
											"source": 12,
											"value": "C0"
										},
										{
											"begin": 13668,
											"end": 13683,
											"name": "SHL",
											"source": 12
										},
										{
											"begin": 13647,
											"end": 13683,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13647,
											"end": 13683,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13594,
											"end": 13690,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13594,
											"end": 13690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13594,
											"end": 13690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13594,
											"end": 13690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13696,
											"end": 13790,
											"name": "tag",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 13696,
											"end": 13790,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13734,
											"end": 13741,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 13763,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 13778,
											"end": 13783,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13763,
											"end": 13784,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "380"
										},
										{
											"begin": 13763,
											"end": 13784,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13763,
											"end": 13784,
											"name": "tag",
											"source": 12,
											"value": "555"
										},
										{
											"begin": 13763,
											"end": 13784,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13752,
											"end": 13784,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13752,
											"end": 13784,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13696,
											"end": 13790,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 13696,
											"end": 13790,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 13696,
											"end": 13790,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13696,
											"end": 13790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13796,
											"end": 13949,
											"name": "tag",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 13796,
											"end": 13949,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13899,
											"end": 13942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 13918,
											"end": 13941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 13935,
											"end": 13940,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13918,
											"end": 13941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "343"
										},
										{
											"begin": 13918,
											"end": 13941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13918,
											"end": 13941,
											"name": "tag",
											"source": 12,
											"value": "558"
										},
										{
											"begin": 13918,
											"end": 13941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13899,
											"end": 13942,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "381"
										},
										{
											"begin": 13899,
											"end": 13942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13899,
											"end": 13942,
											"name": "tag",
											"source": 12,
											"value": "557"
										},
										{
											"begin": 13899,
											"end": 13942,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 13894,
											"end": 13897,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 13887,
											"end": 13943,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 13796,
											"end": 13949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13796,
											"end": 13949,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13796,
											"end": 13949,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 13955,
											"end": 14488,
											"name": "tag",
											"source": 12,
											"value": "191"
										},
										{
											"begin": 13955,
											"end": 14488,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14121,
											"end": 14124,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14136,
											"end": 14211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 14207,
											"end": 14210,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14198,
											"end": 14204,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 14136,
											"end": 14211,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "377"
										},
										{
											"begin": 14136,
											"end": 14211,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14136,
											"end": 14211,
											"name": "tag",
											"source": 12,
											"value": "560"
										},
										{
											"begin": 14136,
											"end": 14211,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14236,
											"end": 14238,
											"name": "PUSH",
											"source": 12,
											"value": "14"
										},
										{
											"begin": 14231,
											"end": 14234,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14227,
											"end": 14239,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14220,
											"end": 14239,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14220,
											"end": 14239,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14249,
											"end": 14324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 14320,
											"end": 14323,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14311,
											"end": 14317,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 14249,
											"end": 14324,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "379"
										},
										{
											"begin": 14249,
											"end": 14324,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14249,
											"end": 14324,
											"name": "tag",
											"source": 12,
											"value": "561"
										},
										{
											"begin": 14249,
											"end": 14324,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14349,
											"end": 14351,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 14344,
											"end": 14347,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14340,
											"end": 14352,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14333,
											"end": 14352,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14333,
											"end": 14352,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14362,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 14431,
											"end": 14434,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14422,
											"end": 14428,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 14362,
											"end": 14435,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "382"
										},
										{
											"begin": 14362,
											"end": 14435,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14362,
											"end": 14435,
											"name": "tag",
											"source": 12,
											"value": "562"
										},
										{
											"begin": 14362,
											"end": 14435,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14460,
											"end": 14461,
											"name": "PUSH",
											"source": 12,
											"value": "8"
										},
										{
											"begin": 14455,
											"end": 14458,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14451,
											"end": 14462,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14444,
											"end": 14462,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14444,
											"end": 14462,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14479,
											"end": 14482,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14472,
											"end": 14482,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14472,
											"end": 14482,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13955,
											"end": 14488,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 13955,
											"end": 14488,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 13955,
											"end": 14488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13955,
											"end": 14488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13955,
											"end": 14488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13955,
											"end": 14488,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 13955,
											"end": 14488,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14494,
											"end": 14674,
											"name": "tag",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 14494,
											"end": 14674,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14542,
											"end": 14619,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 14539,
											"end": 14540,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14532,
											"end": 14620,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14639,
											"end": 14643,
											"name": "PUSH",
											"source": 12,
											"value": "11"
										},
										{
											"begin": 14636,
											"end": 14637,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 14629,
											"end": 14644,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 14663,
											"end": 14667,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 14660,
											"end": 14661,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14653,
											"end": 14668,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 14680,
											"end": 14874,
											"name": "tag",
											"source": 12,
											"value": "209"
										},
										{
											"begin": 14680,
											"end": 14874,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14720,
											"end": 14724,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 14740,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 14758,
											"end": 14759,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14740,
											"end": 14760,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 14740,
											"end": 14760,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14740,
											"end": 14760,
											"name": "tag",
											"source": 12,
											"value": "565"
										},
										{
											"begin": 14740,
											"end": 14760,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14735,
											"end": 14760,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14735,
											"end": 14760,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14774,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 14792,
											"end": 14793,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 14774,
											"end": 14794,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 14774,
											"end": 14794,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14774,
											"end": 14794,
											"name": "tag",
											"source": 12,
											"value": "566"
										},
										{
											"begin": 14774,
											"end": 14794,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14769,
											"end": 14794,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14769,
											"end": 14794,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14818,
											"end": 14819,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14815,
											"end": 14816,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 14811,
											"end": 14820,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 14803,
											"end": 14820,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 14803,
											"end": 14820,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14842,
											"end": 14843,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14836,
											"end": 14840,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 14833,
											"end": 14844,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 14830,
											"end": 14867,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 14830,
											"end": 14867,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 14830,
											"end": 14867,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 14847,
											"end": 14865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 14847,
											"end": 14865,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 14847,
											"end": 14865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14847,
											"end": 14865,
											"name": "tag",
											"source": 12,
											"value": "568"
										},
										{
											"begin": 14847,
											"end": 14865,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14830,
											"end": 14867,
											"name": "tag",
											"source": 12,
											"value": "567"
										},
										{
											"begin": 14830,
											"end": 14867,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14680,
											"end": 14874,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14680,
											"end": 14874,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 14680,
											"end": 14874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14680,
											"end": 14874,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14680,
											"end": 14874,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 14880,
											"end": 15212,
											"name": "tag",
											"source": 12,
											"value": "215"
										},
										{
											"begin": 14880,
											"end": 15212,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15001,
											"end": 15005,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15039,
											"end": 15041,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15028,
											"end": 15037,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15024,
											"end": 15042,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15016,
											"end": 15042,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15016,
											"end": 15042,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15052,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 15120,
											"end": 15121,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15109,
											"end": 15118,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15105,
											"end": 15122,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15096,
											"end": 15102,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15052,
											"end": 15123,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 15052,
											"end": 15123,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15052,
											"end": 15123,
											"name": "tag",
											"source": 12,
											"value": "570"
										},
										{
											"begin": 15052,
											"end": 15123,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15133,
											"end": 15205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 15201,
											"end": 15203,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15190,
											"end": 15199,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15186,
											"end": 15204,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15177,
											"end": 15183,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15133,
											"end": 15205,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 15133,
											"end": 15205,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15133,
											"end": 15205,
											"name": "tag",
											"source": 12,
											"value": "571"
										},
										{
											"begin": 15133,
											"end": 15205,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 14880,
											"end": 15212,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 14880,
											"end": 15212,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 14880,
											"end": 15212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14880,
											"end": 15212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14880,
											"end": 15212,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 14880,
											"end": 15212,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15218,
											"end": 15546,
											"name": "tag",
											"source": 12,
											"value": "223"
										},
										{
											"begin": 15218,
											"end": 15546,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15337,
											"end": 15341,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15375,
											"end": 15377,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 15364,
											"end": 15373,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15360,
											"end": 15378,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15352,
											"end": 15378,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15352,
											"end": 15378,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15388,
											"end": 15457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 15454,
											"end": 15455,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15443,
											"end": 15452,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15439,
											"end": 15456,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15430,
											"end": 15436,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 15388,
											"end": 15457,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "351"
										},
										{
											"begin": 15388,
											"end": 15457,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15388,
											"end": 15457,
											"name": "tag",
											"source": 12,
											"value": "573"
										},
										{
											"begin": 15388,
											"end": 15457,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15467,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 15535,
											"end": 15537,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 15524,
											"end": 15533,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15520,
											"end": 15538,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15511,
											"end": 15517,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15467,
											"end": 15539,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 15467,
											"end": 15539,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15467,
											"end": 15539,
											"name": "tag",
											"source": 12,
											"value": "574"
										},
										{
											"begin": 15467,
											"end": 15539,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15218,
											"end": 15546,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 15218,
											"end": 15546,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15218,
											"end": 15546,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15218,
											"end": 15546,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15218,
											"end": 15546,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15218,
											"end": 15546,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15552,
											"end": 15743,
											"name": "tag",
											"source": 12,
											"value": "237"
										},
										{
											"begin": 15552,
											"end": 15743,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15592,
											"end": 15595,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15611,
											"end": 15631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 15629,
											"end": 15630,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15611,
											"end": 15631,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 15611,
											"end": 15631,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15611,
											"end": 15631,
											"name": "tag",
											"source": 12,
											"value": "576"
										},
										{
											"begin": 15611,
											"end": 15631,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15606,
											"end": 15631,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15606,
											"end": 15631,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15645,
											"end": 15665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 15663,
											"end": 15664,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 15645,
											"end": 15665,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "366"
										},
										{
											"begin": 15645,
											"end": 15665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15645,
											"end": 15665,
											"name": "tag",
											"source": 12,
											"value": "577"
										},
										{
											"begin": 15645,
											"end": 15665,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15665,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15640,
											"end": 15665,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15688,
											"end": 15689,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15685,
											"end": 15686,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15681,
											"end": 15690,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 15674,
											"end": 15690,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15674,
											"end": 15690,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15709,
											"end": 15712,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 15706,
											"end": 15707,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 15703,
											"end": 15713,
											"name": "GT",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15736,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15736,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 15700,
											"end": 15736,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 15716,
											"end": 15734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 15716,
											"end": 15734,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "383"
										},
										{
											"begin": 15716,
											"end": 15734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15716,
											"end": 15734,
											"name": "tag",
											"source": 12,
											"value": "579"
										},
										{
											"begin": 15716,
											"end": 15734,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15700,
											"end": 15736,
											"name": "tag",
											"source": 12,
											"value": "578"
										},
										{
											"begin": 15700,
											"end": 15736,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15552,
											"end": 15743,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 15552,
											"end": 15743,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15552,
											"end": 15743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15552,
											"end": 15743,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15552,
											"end": 15743,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15749,
											"end": 15835,
											"name": "tag",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 15749,
											"end": 15835,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15795,
											"end": 15802,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15824,
											"end": 15829,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 15813,
											"end": 15829,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15813,
											"end": 15829,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15749,
											"end": 15835,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15749,
											"end": 15835,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15749,
											"end": 15835,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15749,
											"end": 15835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15841,
											"end": 15997,
											"name": "tag",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 15841,
											"end": 15997,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15898,
											"end": 15907,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 15931,
											"end": 15991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 15947,
											"end": 15990,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 15956,
											"end": 15989,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 15983,
											"end": 15988,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 15956,
											"end": 15989,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "384"
										},
										{
											"begin": 15956,
											"end": 15989,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15956,
											"end": 15989,
											"name": "tag",
											"source": 12,
											"value": "584"
										},
										{
											"begin": 15956,
											"end": 15989,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15947,
											"end": 15990,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "352"
										},
										{
											"begin": 15947,
											"end": 15990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15947,
											"end": 15990,
											"name": "tag",
											"source": 12,
											"value": "583"
										},
										{
											"begin": 15947,
											"end": 15990,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15931,
											"end": 15991,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "360"
										},
										{
											"begin": 15931,
											"end": 15991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 15931,
											"end": 15991,
											"name": "tag",
											"source": 12,
											"value": "582"
										},
										{
											"begin": 15931,
											"end": 15991,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15918,
											"end": 15991,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15841,
											"end": 15997,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 15841,
											"end": 15997,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 15841,
											"end": 15997,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 15841,
											"end": 15997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16003,
											"end": 16148,
											"name": "tag",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 16003,
											"end": 16148,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16097,
											"end": 16141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 16135,
											"end": 16140,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 16097,
											"end": 16141,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "385"
										},
										{
											"begin": 16097,
											"end": 16141,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16097,
											"end": 16141,
											"name": "tag",
											"source": 12,
											"value": "586"
										},
										{
											"begin": 16097,
											"end": 16141,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16092,
											"end": 16095,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16085,
											"end": 16142,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 16003,
											"end": 16148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16003,
											"end": 16148,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16003,
											"end": 16148,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16500,
											"name": "tag",
											"source": 12,
											"value": "276"
										},
										{
											"begin": 16154,
											"end": 16500,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16282,
											"end": 16286,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16320,
											"end": 16322,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16309,
											"end": 16318,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16305,
											"end": 16323,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16297,
											"end": 16323,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16297,
											"end": 16323,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16333,
											"end": 16411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 16408,
											"end": 16409,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16397,
											"end": 16406,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16393,
											"end": 16410,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16384,
											"end": 16390,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16333,
											"end": 16411,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "386"
										},
										{
											"begin": 16333,
											"end": 16411,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16333,
											"end": 16411,
											"name": "tag",
											"source": 12,
											"value": "588"
										},
										{
											"begin": 16333,
											"end": 16411,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 16489,
											"end": 16491,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16478,
											"end": 16487,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16474,
											"end": 16492,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16465,
											"end": 16471,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16493,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 16421,
											"end": 16493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16421,
											"end": 16493,
											"name": "tag",
											"source": 12,
											"value": "589"
										},
										{
											"begin": 16421,
											"end": 16493,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16500,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16500,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16500,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16154,
											"end": 16500,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "tag",
											"source": 12,
											"value": "280"
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16655,
											"end": 16659,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16693,
											"end": 16695,
											"name": "PUSH",
											"source": 12,
											"value": "60"
										},
										{
											"begin": 16682,
											"end": 16691,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 16678,
											"end": 16696,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16670,
											"end": 16696,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 16670,
											"end": 16696,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16706,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 16774,
											"end": 16775,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 16763,
											"end": 16772,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16759,
											"end": 16776,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16750,
											"end": 16756,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 16706,
											"end": 16777,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 16706,
											"end": 16777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16706,
											"end": 16777,
											"name": "tag",
											"source": 12,
											"value": "591"
										},
										{
											"begin": 16706,
											"end": 16777,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16787,
											"end": 16859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 16855,
											"end": 16857,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 16844,
											"end": 16853,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16840,
											"end": 16858,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16831,
											"end": 16837,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 16787,
											"end": 16859,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 16787,
											"end": 16859,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16787,
											"end": 16859,
											"name": "tag",
											"source": 12,
											"value": "592"
										},
										{
											"begin": 16787,
											"end": 16859,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16869,
											"end": 16941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 16937,
											"end": 16939,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 16926,
											"end": 16935,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 16922,
											"end": 16940,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 16913,
											"end": 16919,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 16869,
											"end": 16941,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 16869,
											"end": 16941,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16869,
											"end": 16941,
											"name": "tag",
											"source": 12,
											"value": "593"
										},
										{
											"begin": 16869,
											"end": 16941,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "SWAP5",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16506,
											"end": 16948,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 16954,
											"end": 17286,
											"name": "tag",
											"source": 12,
											"value": "286"
										},
										{
											"begin": 16954,
											"end": 17286,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17075,
											"end": 17079,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17113,
											"end": 17115,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 17102,
											"end": 17111,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17098,
											"end": 17116,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17090,
											"end": 17116,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17090,
											"end": 17116,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17126,
											"end": 17197,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 17194,
											"end": 17195,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17183,
											"end": 17192,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17179,
											"end": 17196,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17170,
											"end": 17176,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 17126,
											"end": 17197,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "357"
										},
										{
											"begin": 17126,
											"end": 17197,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17126,
											"end": 17197,
											"name": "tag",
											"source": 12,
											"value": "595"
										},
										{
											"begin": 17126,
											"end": 17197,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17207,
											"end": 17279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 17275,
											"end": 17277,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17264,
											"end": 17273,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 17260,
											"end": 17278,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 17251,
											"end": 17257,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17207,
											"end": 17279,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "373"
										},
										{
											"begin": 17207,
											"end": 17279,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17207,
											"end": 17279,
											"name": "tag",
											"source": 12,
											"value": "596"
										},
										{
											"begin": 17207,
											"end": 17279,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 16954,
											"end": 17286,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 16954,
											"end": 17286,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 16954,
											"end": 17286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16954,
											"end": 17286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16954,
											"end": 17286,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 16954,
											"end": 17286,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17292,
											"end": 17472,
											"name": "tag",
											"source": 12,
											"value": "291"
										},
										{
											"begin": 17292,
											"end": 17472,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17340,
											"end": 17417,
											"name": "PUSH",
											"source": 12,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 17337,
											"end": 17338,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17330,
											"end": 17418,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17437,
											"end": 17441,
											"name": "PUSH",
											"source": 12,
											"value": "12"
										},
										{
											"begin": 17434,
											"end": 17435,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 17427,
											"end": 17442,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 17461,
											"end": 17465,
											"name": "PUSH",
											"source": 12,
											"value": "24"
										},
										{
											"begin": 17458,
											"end": 17459,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17451,
											"end": 17466,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17478,
											"end": 17594,
											"name": "tag",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 17478,
											"end": 17594,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17548,
											"end": 17569,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 17563,
											"end": 17568,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17548,
											"end": 17569,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "358"
										},
										{
											"begin": 17548,
											"end": 17569,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17548,
											"end": 17569,
											"name": "tag",
											"source": 12,
											"value": "599"
										},
										{
											"begin": 17548,
											"end": 17569,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17541,
											"end": 17546,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17538,
											"end": 17570,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 17528,
											"end": 17588,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 17528,
											"end": 17588,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17584,
											"end": 17585,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17581,
											"end": 17582,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17574,
											"end": 17586,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 17528,
											"end": 17588,
											"name": "tag",
											"source": 12,
											"value": "600"
										},
										{
											"begin": 17528,
											"end": 17588,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17478,
											"end": 17594,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17478,
											"end": 17594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17600,
											"end": 17737,
											"name": "tag",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 17600,
											"end": 17737,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17654,
											"end": 17659,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17685,
											"end": 17691,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17679,
											"end": 17692,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 17670,
											"end": 17692,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 17670,
											"end": 17692,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17701,
											"end": 17731,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 17725,
											"end": 17730,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 17701,
											"end": 17731,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "387"
										},
										{
											"begin": 17701,
											"end": 17731,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17701,
											"end": 17731,
											"name": "tag",
											"source": 12,
											"value": "602"
										},
										{
											"begin": 17701,
											"end": 17731,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17600,
											"end": 17737,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17600,
											"end": 17737,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17600,
											"end": 17737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17600,
											"end": 17737,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17600,
											"end": 17737,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17743,
											"end": 18088,
											"name": "tag",
											"source": 12,
											"value": "302"
										},
										{
											"begin": 17743,
											"end": 18088,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17810,
											"end": 17816,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 17859,
											"end": 17861,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 17847,
											"end": 17856,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 17838,
											"end": 17845,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 17834,
											"end": 17857,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 17830,
											"end": 17862,
											"name": "SLT",
											"source": 12
										},
										{
											"begin": 17827,
											"end": 17946,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 17827,
											"end": 17946,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 17827,
											"end": 17946,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 17865,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 17865,
											"end": 17944,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "332"
										},
										{
											"begin": 17865,
											"end": 17944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 17865,
											"end": 17944,
											"name": "tag",
											"source": 12,
											"value": "605"
										},
										{
											"begin": 17865,
											"end": 17944,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17827,
											"end": 17946,
											"name": "tag",
											"source": 12,
											"value": "604"
										},
										{
											"begin": 17827,
											"end": 17946,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 17985,
											"end": 17986,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18010,
											"end": 18071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 18063,
											"end": 18070,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18054,
											"end": 18060,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18043,
											"end": 18052,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18039,
											"end": 18061,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18010,
											"end": 18071,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "388"
										},
										{
											"begin": 18010,
											"end": 18071,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18010,
											"end": 18071,
											"name": "tag",
											"source": 12,
											"value": "606"
										},
										{
											"begin": 18010,
											"end": 18071,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18000,
											"end": 18071,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18000,
											"end": 18071,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17956,
											"end": 18081,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17743,
											"end": 18088,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 17743,
											"end": 18088,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 17743,
											"end": 18088,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17743,
											"end": 18088,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 17743,
											"end": 18088,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18094,
											"end": 18192,
											"name": "tag",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 18094,
											"end": 18192,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18145,
											"end": 18151,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18179,
											"end": 18184,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18173,
											"end": 18185,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 18163,
											"end": 18185,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18163,
											"end": 18185,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18094,
											"end": 18192,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18094,
											"end": 18192,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18094,
											"end": 18192,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18094,
											"end": 18192,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18198,
											"end": 18345,
											"name": "tag",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 18198,
											"end": 18345,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18299,
											"end": 18310,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18336,
											"end": 18339,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18321,
											"end": 18339,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 18321,
											"end": 18339,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18198,
											"end": 18345,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18198,
											"end": 18345,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18198,
											"end": 18345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18198,
											"end": 18345,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18198,
											"end": 18345,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18351,
											"end": 18490,
											"name": "tag",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 18351,
											"end": 18490,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18440,
											"end": 18446,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18435,
											"end": 18438,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18430,
											"end": 18433,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18424,
											"end": 18447,
											"name": "MCOPY",
											"source": 12
										},
										{
											"begin": 18481,
											"end": 18482,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18472,
											"end": 18478,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18467,
											"end": 18470,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 18463,
											"end": 18479,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18456,
											"end": 18483,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 18351,
											"end": 18490,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18351,
											"end": 18490,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18351,
											"end": 18490,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18351,
											"end": 18490,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18496,
											"end": 18882,
											"name": "tag",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 18496,
											"end": 18882,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18600,
											"end": 18603,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 18628,
											"end": 18666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 18660,
											"end": 18665,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 18628,
											"end": 18666,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "389"
										},
										{
											"begin": 18628,
											"end": 18666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18628,
											"end": 18666,
											"name": "tag",
											"source": 12,
											"value": "611"
										},
										{
											"begin": 18628,
											"end": 18666,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18682,
											"end": 18770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 18763,
											"end": 18769,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18758,
											"end": 18761,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18682,
											"end": 18770,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "390"
										},
										{
											"begin": 18682,
											"end": 18770,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18682,
											"end": 18770,
											"name": "tag",
											"source": 12,
											"value": "612"
										},
										{
											"begin": 18682,
											"end": 18770,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18675,
											"end": 18770,
											"name": "SWAP4",
											"source": 12
										},
										{
											"begin": 18675,
											"end": 18770,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18779,
											"end": 18844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 18837,
											"end": 18843,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 18832,
											"end": 18835,
											"name": "DUP6",
											"source": 12
										},
										{
											"begin": 18825,
											"end": 18829,
											"name": "PUSH",
											"source": 12,
											"value": "20"
										},
										{
											"begin": 18818,
											"end": 18823,
											"name": "DUP7",
											"source": 12
										},
										{
											"begin": 18814,
											"end": 18830,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18779,
											"end": 18844,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "391"
										},
										{
											"begin": 18779,
											"end": 18844,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18779,
											"end": 18844,
											"name": "tag",
											"source": 12,
											"value": "613"
										},
										{
											"begin": 18779,
											"end": 18844,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 18869,
											"end": 18875,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 18864,
											"end": 18867,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 18860,
											"end": 18876,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 18853,
											"end": 18876,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18853,
											"end": 18876,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18604,
											"end": 18882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18496,
											"end": 18882,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18496,
											"end": 18882,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18496,
											"end": 18882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18496,
											"end": 18882,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18496,
											"end": 18882,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 18888,
											"end": 19159,
											"name": "tag",
											"source": 12,
											"value": "312"
										},
										{
											"begin": 18888,
											"end": 19159,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19018,
											"end": 19021,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 19040,
											"end": 19133,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 19129,
											"end": 19132,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 19120,
											"end": 19126,
											"name": "DUP5",
											"source": 12
										},
										{
											"begin": 19040,
											"end": 19133,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "392"
										},
										{
											"begin": 19040,
											"end": 19133,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 19040,
											"end": 19133,
											"name": "tag",
											"source": 12,
											"value": "615"
										},
										{
											"begin": 19040,
											"end": 19133,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 19033,
											"end": 19133,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 19033,
											"end": 19133,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 19150,
											"end": 19153,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 19143,
											"end": 19153,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 19143,
											"end": 19153,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18888,
											"end": 19159,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 18888,
											"end": 19159,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 18888,
											"end": 19159,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18888,
											"end": 19159,
											"name": "POP",
											"source": 12
										},
										{
											"begin": 18888,
											"end": 19159,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts@5.0.2/access/Ownable.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol",
								"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol",
								"@openzeppelin/contracts@5.0.2/utils/Address.sol",
								"@openzeppelin/contracts@5.0.2/utils/Context.sol",
								"@openzeppelin/contracts@5.0.2/utils/Pausable.sol",
								"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
								"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol",
								"contracts/BountyEscrow.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"MAX_FEE_BPS()": "d55be8c6",
							"cancel(bytes32)": "c4d252f5",
							"computeBountyId(address,bytes32,uint64)": "cd2025c3",
							"createBounty(address,bytes32,uint64,uint64,uint256)": "c23945ac",
							"feeBps()": "24a9d853",
							"feeVault()": "478222c2",
							"fund(bytes32,uint256)": "e46bbc9e",
							"getBounty(bytes32)": "2417395c",
							"owner()": "8da5cb5b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"refundExpired(bytes32)": "cc3e049b",
							"renounceOwnership()": "715018a6",
							"resolve(bytes32,address)": "d1686604",
							"setFeeParams(uint16,address)": "e0120cf8",
							"transferOwnership(address)": "f2fde38b",
							"unpause()": "3f4ba83a",
							"usdc()": "3e413bee",
							"usdcDecimals()": "7bf42165"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.30+commit.73712a01\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usdc_\",\"type\":\"address\"},{\"internalType\":\"uint16\",\"name\":\"_feeBps\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_feeVault\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"AlreadyExists\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"DeadlineNotReached\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidParams\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MathOverflowedMulDiv\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotOpen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotResolver\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotSponsor\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"bits\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SafeCastOverflowedUintDowncast\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ZeroAmount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bountyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"repoIdHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"issueNumber\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"BountyCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bountyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Canceled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint16\",\"name\":\"feeBps\",\"type\":\"uint16\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"feeVault\",\"type\":\"address\"}],\"name\":\"FeeParamsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bountyId\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newAmount\",\"type\":\"uint256\"}],\"name\":\"Funded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bountyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Refunded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"bountyId\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"net\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fee\",\"type\":\"uint256\"}],\"name\":\"Resolved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MAX_FEE_BPS\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bountyId\",\"type\":\"bytes32\"}],\"name\":\"cancel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"repoIdHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"issueNumber\",\"type\":\"uint64\"}],\"name\":\"computeBountyId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"bountyId\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"repoIdHash\",\"type\":\"bytes32\"},{\"internalType\":\"uint64\",\"name\":\"issueNumber\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"createBounty\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"bountyId\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeBps\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"feeVault\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bountyId\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"fund\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bountyId\",\"type\":\"bytes32\"}],\"name\":\"getBounty\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"repoIdHash\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"sponsor\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"amount\",\"type\":\"uint96\"},{\"internalType\":\"uint64\",\"name\":\"deadline\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"issueNumber\",\"type\":\"uint64\"},{\"internalType\":\"enum BountyEscrow.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct BountyEscrow.Bounty\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bountyId\",\"type\":\"bytes32\"}],\"name\":\"refundExpired\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"bountyId\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"name\":\"resolve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint16\",\"name\":\"_feeBps\",\"type\":\"uint16\"},{\"internalType\":\"address\",\"name\":\"_feeVault\",\"type\":\"address\"}],\"name\":\"setFeeParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdc\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"usdcDecimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:oz-version\":\"- OpenZeppelin 5.0.2 (imports pinned via versioned paths).\",\"custom:security\":\"- Resolver authority is scoped per bounty; cannot change post-creation. - Sponsor is the caller that created the bounty; only sponsor can top-up/cancel/refund. - No arbitrary token transfers; only the configured _usdc is handled. - Fee bounded by MAX_FEE_BPS (10%).\",\"details\":\"Design: - Token: single ERC-20 (intended USDC). Address immutable. Decimals cached (best-effort, fallback=6). - State machine per-bounty: None \\u2192 Open \\u2192 (Resolved | Refunded | Canceled). Terminal states are final. - Funds held in-contract; payouts are pull-style via resolver/sponsor actions. - Fee assessed only on successful resolution; transfers: recipient (net) + feeVault (fee). - Reentrancy: public state-changing entrypoints are nonReentrant; CEI respected. - Pausability: owner can pause/unpause all state-changing flows.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"MathOverflowedMulDiv()\":[{\"details\":\"Muldiv operation overflow.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeCastOverflowedUintDowncast(uint8,uint256)\":[{\"details\":\"Value doesn't fit in an uint of `bits` size.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"events\":{\"BountyCreated(bytes32,address,bytes32,uint64,uint64,address,uint256)\":{\"params\":{\"amount\":\"Initial funded amount (USDC units).\",\"bountyId\":\"Deterministic id: keccak256(sponsor, repoIdHash, issueNumber).\",\"deadline\":\"Expiration timestamp for refund eligibility.\",\"issueNumber\":\"Issue number within the repository.\",\"repoIdHash\":\"Repository identifier hash associated with the issue.\",\"resolver\":\"Address authorized to resolve this bounty.\",\"sponsor\":\"Bounty sponsor (msg.sender of createBounty).\"}},\"Canceled(bytes32,address,uint256)\":{\"params\":{\"amount\":\"Amount returned.\",\"bountyId\":\"Id of the bounty.\",\"sponsor\":\"Sponsor receiving the returned funds.\"}},\"FeeParamsUpdated(uint16,address)\":{\"params\":{\"feeBps\":\"New fee in basis points.\",\"feeVault\":\"Address to receive fees.\"}},\"Funded(bytes32,uint256)\":{\"params\":{\"bountyId\":\"Id of the bounty funded.\",\"newAmount\":\"New total escrowed amount after top-up.\"}},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Refunded(bytes32,address,uint256)\":{\"params\":{\"amount\":\"Amount refunded.\",\"bountyId\":\"Id of the bounty.\",\"sponsor\":\"Sponsor receiving the refund.\"}},\"Resolved(bytes32,address,uint256,uint256)\":{\"params\":{\"bountyId\":\"Id of the bounty.\",\"fee\":\"Amount sent to feeVault.\",\"net\":\"Amount sent to recipient (gross - fee).\",\"recipient\":\"Address receiving the net payout.\"}},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"cancel(bytes32)\":{\"details\":\"Only sponsor; bounty must be Open. Sets status to Canceled and returns all funds.\",\"params\":{\"bountyId\":\"Target bounty.\"}},\"computeBountyId(address,bytes32,uint64)\":{\"details\":\"Establishes a one-bounty-per (sponsor, repoIdHash, issueNumber) invariant.\",\"params\":{\"issueNumber\":\"Issue number reference.\",\"repoIdHash\":\"Repository identifier hash.\",\"sponsor\":\"Address of the sponsor (creator/funder).\"},\"returns\":{\"bountyId\":\"keccak256(sponsor, repoIdHash, issueNumber).\"}},\"constructor\":{\"params\":{\"_feeBps\":\"Initial protocol fee in basis points (\\u2264 MAX_FEE_BPS).\",\"_feeVault\":\"Address to receive protocol fees on resolution.\",\"initialOwner\":\"Contract owner (admin for pause/fee params).\",\"usdc_\":\"ERC-20 token address used for all escrowed transfers (intended USDC).\"}},\"createBounty(address,bytes32,uint64,uint64,uint256)\":{\"details\":\"Requirements: - resolver != 0 - repoIdHash != 0 and issueNumber != 0 - deadline > now - amount > 0 - bountyId (sponsor, repoIdHash, issueNumber) must not already exist Effects: - Initializes Bounty struct with Status.Open - Transfers `amount` of _usdc from msg.sender to this contract\",\"params\":{\"amount\":\"Amount to escrow (USDC units).\",\"deadline\":\"Timestamp after which sponsor can refund if still Open.\",\"issueNumber\":\"Issue number within the repository.\",\"repoIdHash\":\"Repository identifier hash.\",\"resolver\":\"Address allowed to resolve this bounty.\"},\"returns\":{\"bountyId\":\"Deterministic id for the created bounty.\"}},\"fund(bytes32,uint256)\":{\"details\":\"Only the sponsor can fund. Amount must be > 0. Status must be Open.      Emits the new total escrowed amount for auditability.\",\"params\":{\"amount\":\"Additional amount to escrow.\",\"bountyId\":\"Target bounty.\"}},\"getBounty(bytes32)\":{\"details\":\"Returns a memory copy; safe for off-chain indexing/UX.\",\"params\":{\"bountyId\":\"Bounty id to query.\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause()\":{\"details\":\"Only owner. Idempotent via OZ Pausable.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"refundExpired(bytes32)\":{\"details\":\"Only sponsor; requires block.timestamp \\u2265 deadline.      Sets status to Refunded and returns all funds.\",\"params\":{\"bountyId\":\"Target bounty.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"resolve(bytes32,address)\":{\"details\":\"Only the designated resolver; recipient must be non-zero.      Fee = floor(gross * feeBps / 10_000); Net = gross - fee.      Uses Math.mulDiv for precise, overflow-safe multiplication/division.\",\"params\":{\"bountyId\":\"Target bounty.\",\"recipient\":\"Address receiving the net payout.\"}},\"setFeeParams(uint16,address)\":{\"details\":\"Only owner. Fee bounded by MAX_FEE_BPS. feeVault must be non-zero.\",\"params\":{\"_feeBps\":\"New fee in basis points.\",\"_feeVault\":\"New fee receiver address.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause()\":{\"details\":\"Only owner. Idempotent via OZ Pausable.\"}},\"stateVariables\":{\"FEE_DENOM\":{\"details\":\"Basis point denominator (10_000 = 100%).\"},\"_bounties\":{\"details\":\"BountyId (keccak256(sponsor, repoIdHash, issueNumber)) \\u2192 Bounty.\"},\"_usdc\":{\"details\":\"Immutable reference to the ERC-20 used for all transfers (intended USDC).\"},\"_usdcDecimals\":{\"details\":\"Cached decimals for display/UX; logic does not assume a specific precision.\"}},\"title\":\"BountyEscrow\",\"version\":1},\"userdoc\":{\"errors\":{\"AlreadyExists()\":[{\"notice\":\"Thrown when attempting to create a bounty that already exists.\"}],\"DeadlineNotReached()\":[{\"notice\":\"Thrown when refund attempted before deadline.\"}],\"InvalidParams()\":[{\"notice\":\"Thrown when parameters fail validation (range/overflow/state).\"}],\"NotOpen()\":[{\"notice\":\"Thrown when action requires an Open bounty but it is not Open.\"}],\"NotResolver()\":[{\"notice\":\"Thrown when caller is not the designated resolver.\"}],\"NotSponsor()\":[{\"notice\":\"Thrown when caller is not the bounty sponsor.\"}],\"ZeroAddress()\":[{\"notice\":\"Thrown when an address argument is zero.\"}],\"ZeroAmount()\":[{\"notice\":\"Thrown when an amount argument is zero.\"}]},\"events\":{\"BountyCreated(bytes32,address,bytes32,uint64,uint64,address,uint256)\":{\"notice\":\"Emitted when a bounty is created and funded.\"},\"Canceled(bytes32,address,uint256)\":{\"notice\":\"Emitted when an Open bounty is canceled by the sponsor before deadline.\"},\"FeeParamsUpdated(uint16,address)\":{\"notice\":\"Emitted when fee parameters are updated by owner.\"},\"Funded(bytes32,uint256)\":{\"notice\":\"Emitted when the sponsor tops up an existing Open bounty.\"},\"Refunded(bytes32,address,uint256)\":{\"notice\":\"Emitted when an expired Open bounty is refunded to the sponsor.\"},\"Resolved(bytes32,address,uint256,uint256)\":{\"notice\":\"Emitted on successful resolution and payout.\"}},\"kind\":\"user\",\"methods\":{\"MAX_FEE_BPS()\":{\"notice\":\"Maximum protocol fee in basis points (1_000 = 10%).\"},\"cancel(bytes32)\":{\"notice\":\"Cancel an Open bounty before the deadline and retrieve funds.\"},\"computeBountyId(address,bytes32,uint64)\":{\"notice\":\"Compute the deterministic bounty id.\"},\"createBounty(address,bytes32,uint64,uint64,uint256)\":{\"notice\":\"Create a new bounty and fund it in a single transaction.\"},\"feeBps()\":{\"notice\":\"Protocol fee in basis points (out of 10_000).\"},\"feeVault()\":{\"notice\":\"Address that receives protocol fees upon resolution.\"},\"fund(bytes32,uint256)\":{\"notice\":\"Top up an existing Open bounty.\"},\"getBounty(bytes32)\":{\"notice\":\"Read the full Bounty struct for a given id.\"},\"pause()\":{\"notice\":\"Pause all state-changing functions.\"},\"refundExpired(bytes32)\":{\"notice\":\"Refund an Open bounty after the deadline back to the sponsor.\"},\"resolve(bytes32,address)\":{\"notice\":\"Resolve an Open bounty to a recipient, paying out net amount and fee.\"},\"setFeeParams(uint16,address)\":{\"notice\":\"Update protocol fee and fee vault address.\"},\"unpause()\":{\"notice\":\"Unpause all state-changing functions.\"},\"usdc()\":{\"notice\":\"ERC-20 token used for escrow (intended USDC).\"},\"usdcDecimals()\":{\"notice\":\"Cached decimals of the escrow token (best-effort; default 6).\"}},\"notice\":\"Minimal, USDC-based escrow for GitHub issue bounties.         Sponsor funds a bounty; a designated resolver can settle to a recipient before the deadline;         sponsors can cancel or refund after deadline. Owner sets fee params and can pause.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/BountyEscrow.sol\":\"BountyEscrow\"},\"evmVersion\":\"prague\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts@5.0.2/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"@openzeppelin/contracts@5.0.2/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts@5.0.2/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"@openzeppelin/contracts@5.0.2/utils/Pausable.sol\":{\"keccak256\":\"0xb2e5f50762c27fb4b123e3619c3c02bdcba5e515309382e5bfb6f7d6486510bd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1a4b83328c98d518a2699c2cbe9e9b055e78aa57fa8639f1b88deb8b3750b5dc\",\"dweb:/ipfs/QmXdcYj5v7zQxXFPULShHkR5p4Wa2zYuupbHnFdV3cHYtc\"]},\"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"@openzeppelin/contracts@5.0.2/utils/math/Math.sol\":{\"keccak256\":\"0x005ec64c6313f0555d59e278f9a7a5ab2db5bdc72a027f255a37c327af1ec02d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ece9f0b9c8daca08c76b6b5405a6446b6f73b3a15fab7ff56e296cbd4a2c875\",\"dweb:/ipfs/QmQyRpyPRL5SQuAgj6SHmbir3foX65FJjbVTTQrA2EFg6L\"]},\"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol\":{\"keccak256\":\"0xe19a4d5f31d2861e7344e8e535e2feafb913d806d3e2b5fe7782741a2a7094fe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4aed79c0fa6f0546ed02f2f683e8f77f0fd2ed7eb34d8bbf3d373c9a6d95b13c\",\"dweb:/ipfs/QmWqVz6UAVqmnWU5pqYPt1o6iDEZyPaBraAA3rKfTTSfYj\"]},\"contracts/BountyEscrow.sol\":{\"keccak256\":\"0x22584ae453b120aaffab4bb6eefb966be21d4385e823485f06fce197f73a5002\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://57d4ed9544a81ae92eb1700a67113866f594fd289a011c094514626193d5d301\",\"dweb:/ipfs/QmacQtN7kUsMmpN6edQ2JpbRUe2V2a94MPp9CTNxoDrEAF\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 988,
								"contract": "contracts/BountyEscrow.sol:BountyEscrow",
								"label": "_status",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 869,
								"contract": "contracts/BountyEscrow.sol:BountyEscrow",
								"label": "_paused",
								"offset": 0,
								"slot": "1",
								"type": "t_bool"
							},
							{
								"astId": 8,
								"contract": "contracts/BountyEscrow.sol:BountyEscrow",
								"label": "_owner",
								"offset": 1,
								"slot": "1",
								"type": "t_address"
							},
							{
								"astId": 3932,
								"contract": "contracts/BountyEscrow.sol:BountyEscrow",
								"label": "_bounties",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_bytes32,t_struct(Bounty)3919_storage)"
							},
							{
								"astId": 3935,
								"contract": "contracts/BountyEscrow.sol:BountyEscrow",
								"label": "feeBps",
								"offset": 0,
								"slot": "3",
								"type": "t_uint16"
							},
							{
								"astId": 3938,
								"contract": "contracts/BountyEscrow.sol:BountyEscrow",
								"label": "feeVault",
								"offset": 2,
								"slot": "3",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes32": {
								"encoding": "inplace",
								"label": "bytes32",
								"numberOfBytes": "32"
							},
							"t_enum(Status)3902": {
								"encoding": "inplace",
								"label": "enum BountyEscrow.Status",
								"numberOfBytes": "1"
							},
							"t_mapping(t_bytes32,t_struct(Bounty)3919_storage)": {
								"encoding": "mapping",
								"key": "t_bytes32",
								"label": "mapping(bytes32 => struct BountyEscrow.Bounty)",
								"numberOfBytes": "32",
								"value": "t_struct(Bounty)3919_storage"
							},
							"t_struct(Bounty)3919_storage": {
								"encoding": "inplace",
								"label": "struct BountyEscrow.Bounty",
								"members": [
									{
										"astId": 3905,
										"contract": "contracts/BountyEscrow.sol:BountyEscrow",
										"label": "repoIdHash",
										"offset": 0,
										"slot": "0",
										"type": "t_bytes32"
									},
									{
										"astId": 3907,
										"contract": "contracts/BountyEscrow.sol:BountyEscrow",
										"label": "sponsor",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 3909,
										"contract": "contracts/BountyEscrow.sol:BountyEscrow",
										"label": "resolver",
										"offset": 0,
										"slot": "2",
										"type": "t_address"
									},
									{
										"astId": 3911,
										"contract": "contracts/BountyEscrow.sol:BountyEscrow",
										"label": "amount",
										"offset": 20,
										"slot": "2",
										"type": "t_uint96"
									},
									{
										"astId": 3913,
										"contract": "contracts/BountyEscrow.sol:BountyEscrow",
										"label": "deadline",
										"offset": 0,
										"slot": "3",
										"type": "t_uint64"
									},
									{
										"astId": 3915,
										"contract": "contracts/BountyEscrow.sol:BountyEscrow",
										"label": "issueNumber",
										"offset": 8,
										"slot": "3",
										"type": "t_uint64"
									},
									{
										"astId": 3918,
										"contract": "contracts/BountyEscrow.sol:BountyEscrow",
										"label": "status",
										"offset": 16,
										"slot": "3",
										"type": "t_enum(Status)3902"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint16": {
								"encoding": "inplace",
								"label": "uint16",
								"numberOfBytes": "2"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							},
							"t_uint64": {
								"encoding": "inplace",
								"label": "uint64",
								"numberOfBytes": "8"
							},
							"t_uint96": {
								"encoding": "inplace",
								"label": "uint96",
								"numberOfBytes": "12"
							}
						}
					},
					"userdoc": {
						"errors": {
							"AlreadyExists()": [
								{
									"notice": "Thrown when attempting to create a bounty that already exists."
								}
							],
							"DeadlineNotReached()": [
								{
									"notice": "Thrown when refund attempted before deadline."
								}
							],
							"InvalidParams()": [
								{
									"notice": "Thrown when parameters fail validation (range/overflow/state)."
								}
							],
							"NotOpen()": [
								{
									"notice": "Thrown when action requires an Open bounty but it is not Open."
								}
							],
							"NotResolver()": [
								{
									"notice": "Thrown when caller is not the designated resolver."
								}
							],
							"NotSponsor()": [
								{
									"notice": "Thrown when caller is not the bounty sponsor."
								}
							],
							"ZeroAddress()": [
								{
									"notice": "Thrown when an address argument is zero."
								}
							],
							"ZeroAmount()": [
								{
									"notice": "Thrown when an amount argument is zero."
								}
							]
						},
						"events": {
							"BountyCreated(bytes32,address,bytes32,uint64,uint64,address,uint256)": {
								"notice": "Emitted when a bounty is created and funded."
							},
							"Canceled(bytes32,address,uint256)": {
								"notice": "Emitted when an Open bounty is canceled by the sponsor before deadline."
							},
							"FeeParamsUpdated(uint16,address)": {
								"notice": "Emitted when fee parameters are updated by owner."
							},
							"Funded(bytes32,uint256)": {
								"notice": "Emitted when the sponsor tops up an existing Open bounty."
							},
							"Refunded(bytes32,address,uint256)": {
								"notice": "Emitted when an expired Open bounty is refunded to the sponsor."
							},
							"Resolved(bytes32,address,uint256,uint256)": {
								"notice": "Emitted on successful resolution and payout."
							}
						},
						"kind": "user",
						"methods": {
							"MAX_FEE_BPS()": {
								"notice": "Maximum protocol fee in basis points (1_000 = 10%)."
							},
							"cancel(bytes32)": {
								"notice": "Cancel an Open bounty before the deadline and retrieve funds."
							},
							"computeBountyId(address,bytes32,uint64)": {
								"notice": "Compute the deterministic bounty id."
							},
							"createBounty(address,bytes32,uint64,uint64,uint256)": {
								"notice": "Create a new bounty and fund it in a single transaction."
							},
							"feeBps()": {
								"notice": "Protocol fee in basis points (out of 10_000)."
							},
							"feeVault()": {
								"notice": "Address that receives protocol fees upon resolution."
							},
							"fund(bytes32,uint256)": {
								"notice": "Top up an existing Open bounty."
							},
							"getBounty(bytes32)": {
								"notice": "Read the full Bounty struct for a given id."
							},
							"pause()": {
								"notice": "Pause all state-changing functions."
							},
							"refundExpired(bytes32)": {
								"notice": "Refund an Open bounty after the deadline back to the sponsor."
							},
							"resolve(bytes32,address)": {
								"notice": "Resolve an Open bounty to a recipient, paying out net amount and fee."
							},
							"setFeeParams(uint16,address)": {
								"notice": "Update protocol fee and fee vault address."
							},
							"unpause()": {
								"notice": "Unpause all state-changing functions."
							},
							"usdc()": {
								"notice": "ERC-20 token used for escrow (intended USDC)."
							},
							"usdcDecimals()": {
								"notice": "Cached decimals of the escrow token (best-effort; default 6)."
							}
						},
						"notice": "Minimal, USDC-based escrow for GitHub issue bounties.         Sponsor funds a bounty; a designated resolver can settle to a recipient before the deadline;         sponsors can cancel or refund after deadline. Owner sets fee params and can pause.",
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts@5.0.2/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							860
						],
						"Ownable": [
							147
						]
					},
					"id": 148,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 148,
							"sourceUnit": 861,
							"src": "128:45:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 860,
										"src": "136:7:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 5,
										"name": "Context",
										"nameLocations": [
											"692:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 860,
										"src": "692:7:0"
									},
									"id": 6,
									"nodeType": "InheritanceSpecifier",
									"src": "692:7:0"
								}
							],
							"canonicalName": "Ownable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "175:487:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n The initial owner is set to the address provided by the deployer. This can\n later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 147,
							"linearizedBaseContracts": [
								147,
								860
							],
							"name": "Ownable",
							"nameLocation": "681:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 8,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "722:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 147,
									"src": "706:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 7,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "706:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 9,
										"nodeType": "StructuredDocumentation",
										"src": "735:85:0",
										"text": " @dev The caller account is not authorized to perform an operation."
									},
									"errorSelector": "118cdaa7",
									"id": 13,
									"name": "OwnableUnauthorizedAccount",
									"nameLocation": "831:26:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 11,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "866:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "858:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "858:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "857:17:0"
									},
									"src": "825:50:0"
								},
								{
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "881:82:0",
										"text": " @dev The owner is not a valid owner account. (eg. `address(0)`)"
									},
									"errorSelector": "1e4fbdf7",
									"id": 18,
									"name": "OwnableInvalidOwner",
									"nameLocation": "974:19:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 17,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 16,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1002:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 18,
												"src": "994:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 15,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "994:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "993:15:0"
									},
									"src": "968:41:0"
								},
								{
									"anonymous": false,
									"eventSelector": "8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
									"id": 24,
									"name": "OwnershipTransferred",
									"nameLocation": "1021:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 23,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 20,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "1058:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1042:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1042:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 22,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1089:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 24,
												"src": "1073:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 21,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1073:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1041:57:0"
									},
									"src": "1015:84:0"
								},
								{
									"body": {
										"id": 49,
										"nodeType": "Block",
										"src": "1259:153:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 30,
														"name": "initialOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "1273:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1297:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "1289:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 31,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "1289:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 34,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1289:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1273:26:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 44,
												"nodeType": "IfStatement",
												"src": "1269:95:0",
												"trueBody": {
													"id": 43,
													"nodeType": "Block",
													"src": "1301:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 39,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "1350:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 38,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1342:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 37,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1342:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 40,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1342:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 36,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "1322:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 41,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1322:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 42,
															"nodeType": "RevertStatement",
															"src": "1315:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 46,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 27,
															"src": "1392:12:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 45,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1373:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1373:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "1373:32:0"
											}
										]
									},
									"documentation": {
										"id": 25,
										"nodeType": "StructuredDocumentation",
										"src": "1105:115:0",
										"text": " @dev Initializes the contract setting the address provided by the deployer as the initial owner."
									},
									"id": 50,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "1245:12:0",
												"nodeType": "VariableDeclaration",
												"scope": 50,
												"src": "1237:20:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1237:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1236:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1259:0:0"
									},
									"scope": 147,
									"src": "1225:187:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 57,
										"nodeType": "Block",
										"src": "1521:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 53,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "1531:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 54,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1531:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 55,
												"nodeType": "ExpressionStatement",
												"src": "1531:13:0"
											},
											{
												"id": 56,
												"nodeType": "PlaceholderStatement",
												"src": "1554:1:0"
											}
										]
									},
									"documentation": {
										"id": 51,
										"nodeType": "StructuredDocumentation",
										"src": "1418:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 58,
									"name": "onlyOwner",
									"nameLocation": "1509:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 52,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1518:2:0"
									},
									"src": "1500:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 66,
										"nodeType": "Block",
										"src": "1693:30:0",
										"statements": [
											{
												"expression": {
													"id": 64,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "1710:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 63,
												"id": 65,
												"nodeType": "Return",
												"src": "1703:13:0"
											}
										]
									},
									"documentation": {
										"id": 59,
										"nodeType": "StructuredDocumentation",
										"src": "1568:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 67,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1647:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1652:2:0"
									},
									"returnParameters": {
										"id": 63,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 62,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 67,
												"src": "1684:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 61,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1683:9:0"
									},
									"scope": 147,
									"src": "1638:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 83,
										"nodeType": "Block",
										"src": "1841:117:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 75,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 71,
															"name": "owner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 67,
															"src": "1855:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 72,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1855:7:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 73,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 842,
															"src": "1866:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 74,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "1866:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "1855:23:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 82,
												"nodeType": "IfStatement",
												"src": "1851:101:0",
												"trueBody": {
													"id": 81,
													"nodeType": "Block",
													"src": "1880:72:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 77,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 842,
																			"src": "1928:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 78,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1928:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 76,
																	"name": "OwnableUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 13,
																	"src": "1901:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 79,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1901:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 80,
															"nodeType": "RevertStatement",
															"src": "1894:47:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 68,
										"nodeType": "StructuredDocumentation",
										"src": "1729:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 84,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1805:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 69,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1816:2:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1841:0:0"
									},
									"scope": 147,
									"src": "1796:162:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 97,
										"nodeType": "Block",
										"src": "2347:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 93,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2384:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 92,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2376:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 91,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2376:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 94,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2376:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 90,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2357:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 95,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2357:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 96,
												"nodeType": "ExpressionStatement",
												"src": "2357:30:0"
											}
										]
									},
									"documentation": {
										"id": 85,
										"nodeType": "StructuredDocumentation",
										"src": "1964:324:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 98,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 88,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 87,
												"name": "onlyOwner",
												"nameLocations": [
													"2337:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2337:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2337:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "2302:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2319:2:0"
									},
									"returnParameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2347:0:0"
									},
									"scope": 147,
									"src": "2293:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 125,
										"nodeType": "Block",
										"src": "2613:145:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 101,
														"src": "2627:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 109,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2647:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 108,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "2639:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 107,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "2639:7:0",
																"typeDescriptions": {}
															}
														},
														"id": 110,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2639:10:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2627:22:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 120,
												"nodeType": "IfStatement",
												"src": "2623:91:0",
												"trueBody": {
													"id": 119,
													"nodeType": "Block",
													"src": "2651:63:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 115,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "2700:1:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 114,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "2692:7:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 113,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "2692:7:0",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 116,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2692:10:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 112,
																	"name": "OwnableInvalidOwner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 18,
																	"src": "2672:19:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2672:31:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 118,
															"nodeType": "RevertStatement",
															"src": "2665:38:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 122,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 101,
															"src": "2742:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 121,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "2723:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 123,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2723:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 124,
												"nodeType": "ExpressionStatement",
												"src": "2723:28:0"
											}
										]
									},
									"documentation": {
										"id": 99,
										"nodeType": "StructuredDocumentation",
										"src": "2400:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 126,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 104,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 103,
												"name": "onlyOwner",
												"nameLocations": [
													"2603:9:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "2603:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2603:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2552:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 101,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2578:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 126,
												"src": "2570:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 100,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:18:0"
									},
									"returnParameters": {
										"id": 105,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2613:0:0"
									},
									"scope": 147,
									"src": "2543:215:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 145,
										"nodeType": "Block",
										"src": "2975:124:0",
										"statements": [
											{
												"assignments": [
													133
												],
												"declarations": [
													{
														"constant": false,
														"id": 133,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2993:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 145,
														"src": "2985:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 132,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2985:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 135,
												"initialValue": {
													"id": 134,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 8,
													"src": "3004:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2985:25:0"
											},
											{
												"expression": {
													"id": 138,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 136,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 8,
														"src": "3020:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 137,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 129,
														"src": "3029:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "3020:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 139,
												"nodeType": "ExpressionStatement",
												"src": "3020:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 141,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 133,
															"src": "3073:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 142,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 129,
															"src": "3083:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 140,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 24,
														"src": "3052:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 143,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3052:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 144,
												"nodeType": "EmitStatement",
												"src": "3047:45:0"
											}
										]
									},
									"documentation": {
										"id": 127,
										"nodeType": "StructuredDocumentation",
										"src": "2764:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 146,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2921:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 130,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 129,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2948:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 146,
												"src": "2940:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 128,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2940:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2939:18:0"
									},
									"returnParameters": {
										"id": 131,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2975:0:0"
									},
									"scope": 147,
									"src": "2912:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 148,
							"src": "663:2438:0",
							"usedErrors": [
								13,
								18
							],
							"usedEvents": [
								24
							]
						}
					],
					"src": "102:3000:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						]
					},
					"id": 226,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 149,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "106:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 150,
								"nodeType": "StructuredDocumentation",
								"src": "132:70:1",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 225,
							"linearizedBaseContracts": [
								225
							],
							"name": "IERC20",
							"nameLocation": "213:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "226:158:1",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 159,
									"name": "Transfer",
									"nameLocation": "395:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "420:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "404:20:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "404:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 155,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "442:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "426:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 157,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "454:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 159,
												"src": "446:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 156,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "446:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "403:57:1"
									},
									"src": "389:72:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 160,
										"nodeType": "StructuredDocumentation",
										"src": "467:148:1",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 168,
									"name": "Approval",
									"nameLocation": "626:8:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 167,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 162,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "651:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "635:21:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "635:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 164,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "674:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "658:23:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "658:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 166,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "691:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 168,
												"src": "683:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 165,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "683:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "634:63:1"
									},
									"src": "620:78:1"
								},
								{
									"documentation": {
										"id": 169,
										"nodeType": "StructuredDocumentation",
										"src": "704:65:1",
										"text": " @dev Returns the value of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 174,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "783:11:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "794:2:1"
									},
									"returnParameters": {
										"id": 173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 172,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 174,
												"src": "820:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 171,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "820:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "819:9:1"
									},
									"scope": 225,
									"src": "774:55:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 175,
										"nodeType": "StructuredDocumentation",
										"src": "835:71:1",
										"text": " @dev Returns the value of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 182,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "920:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 177,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "938:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "930:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "930:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "929:17:1"
									},
									"returnParameters": {
										"id": 181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 182,
												"src": "970:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 179,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "970:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "969:9:1"
									},
									"scope": 225,
									"src": "911:68:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 183,
										"nodeType": "StructuredDocumentation",
										"src": "985:213:1",
										"text": " @dev Moves a `value` amount of tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 192,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1212:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 188,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1229:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1221:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 184,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1221:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 187,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1241:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1233:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 186,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1233:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1220:27:1"
									},
									"returnParameters": {
										"id": 191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 190,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1266:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 189,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1266:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1265:6:1"
									},
									"scope": 225,
									"src": "1203:69:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1278:264:1",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 202,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1556:9:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1574:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1566:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1566:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 197,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1589:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1581:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1581:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1565:32:1"
									},
									"returnParameters": {
										"id": 201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 200,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 202,
												"src": "1621:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1621:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1620:9:1"
									},
									"scope": 225,
									"src": "1547:83:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 203,
										"nodeType": "StructuredDocumentation",
										"src": "1636:667:1",
										"text": " @dev Sets a `value` amount of tokens as the allowance of `spender` over the\n caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 212,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2317:7:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 205,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2333:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2325:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2325:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 207,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2350:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2342:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 206,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2342:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2324:32:1"
									},
									"returnParameters": {
										"id": 211,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 210,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 212,
												"src": "2375:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 209,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2375:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2374:6:1"
									},
									"scope": 225,
									"src": "2308:73:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 213,
										"nodeType": "StructuredDocumentation",
										"src": "2387:297:1",
										"text": " @dev Moves a `value` amount of tokens from `from` to `to` using the\n allowance mechanism. `value` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 224,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2698:12:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 220,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 215,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2719:4:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2711:12:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 214,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2711:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 217,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2733:2:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2725:10:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2725:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 219,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2745:5:1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2737:13:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 218,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2737:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2710:41:1"
									},
									"returnParameters": {
										"id": 223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 222,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 224,
												"src": "2770:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 221,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2770:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2769:6:1"
									},
									"scope": 225,
									"src": "2689:87:1",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 226,
							"src": "203:2575:1",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "106:2673:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol",
					"exportedSymbols": {
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							251
						]
					},
					"id": 252,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 227,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "125:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 229,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 252,
							"sourceUnit": 226,
							"src": "151:37:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 228,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "159:6:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 231,
										"name": "IERC20",
										"nameLocations": [
											"305:6:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 225,
										"src": "305:6:2"
									},
									"id": 232,
									"nodeType": "InheritanceSpecifier",
									"src": "305:6:2"
								}
							],
							"canonicalName": "IERC20Metadata",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 230,
								"nodeType": "StructuredDocumentation",
								"src": "190:86:2",
								"text": " @dev Interface for the optional metadata functions from the ERC20 standard."
							},
							"fullyImplemented": false,
							"id": 251,
							"linearizedBaseContracts": [
								251,
								225
							],
							"name": "IERC20Metadata",
							"nameLocation": "287:14:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "318:54:2",
										"text": " @dev Returns the name of the token."
									},
									"functionSelector": "06fdde03",
									"id": 238,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "name",
									"nameLocation": "386:4:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 234,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "390:2:2"
									},
									"returnParameters": {
										"id": 237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 236,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 238,
												"src": "416:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 235,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "416:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "415:15:2"
									},
									"scope": 251,
									"src": "377:54:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 239,
										"nodeType": "StructuredDocumentation",
										"src": "437:56:2",
										"text": " @dev Returns the symbol of the token."
									},
									"functionSelector": "95d89b41",
									"id": 244,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "symbol",
									"nameLocation": "507:6:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 240,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "513:2:2"
									},
									"returnParameters": {
										"id": 243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 242,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 244,
												"src": "539:13:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 241,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "539:6:2",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "538:15:2"
									},
									"scope": 251,
									"src": "498:56:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 245,
										"nodeType": "StructuredDocumentation",
										"src": "560:65:2",
										"text": " @dev Returns the decimals places of the token."
									},
									"functionSelector": "313ce567",
									"id": 250,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "decimals",
									"nameLocation": "639:8:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 246,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "647:2:2"
									},
									"returnParameters": {
										"id": 249,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 248,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 250,
												"src": "673:5:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 247,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "673:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "672:7:2"
									},
									"scope": 251,
									"src": "630:50:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 252,
							"src": "277:405:2",
							"usedErrors": [],
							"usedEvents": [
								159,
								168
							]
						}
					],
					"src": "125:558:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol",
					"exportedSymbols": {
						"IERC20Permit": [
							287
						]
					},
					"id": 288,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 253,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "123:24:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Permit",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 254,
								"nodeType": "StructuredDocumentation",
								"src": "149:1963:3",
								"text": " @dev Interface of the ERC20 Permit extension allowing approvals to be made via signatures, as defined in\n https://eips.ethereum.org/EIPS/eip-2612[EIP-2612].\n Adds the {permit} method, which can be used to change an account's ERC20 allowance (see {IERC20-allowance}) by\n presenting a message signed by the account. By not relying on {IERC20-approve}, the token holder account doesn't\n need to send a transaction, and thus is not required to hold Ether at all.\n ==== Security Considerations\n There are two important considerations concerning the use of `permit`. The first is that a valid permit signature\n expresses an allowance, and it should not be assumed to convey additional meaning. In particular, it should not be\n considered as an intention to spend the allowance in any specific way. The second is that because permits have\n built-in replay protection and can be submitted by anyone, they can be frontrun. A protocol that uses permits should\n take this into consideration and allow a `permit` call to fail. Combining these two aspects, a pattern that may be\n generally recommended is:\n ```solidity\n function doThingWithPermit(..., uint256 value, uint256 deadline, uint8 v, bytes32 r, bytes32 s) public {\n     try token.permit(msg.sender, address(this), value, deadline, v, r, s) {} catch {}\n     doThing(..., value);\n }\n function doThing(..., uint256 value) public {\n     token.safeTransferFrom(msg.sender, address(this), value);\n     ...\n }\n ```\n Observe that: 1) `msg.sender` is used as the owner, leaving no ambiguity as to the signer intent, and 2) the use of\n `try/catch` allows the permit to fail and makes the code tolerant to frontrunning. (See also\n {SafeERC20-safeTransferFrom}).\n Additionally, note that smart contract wallets (such as Argent or Safe) are not able to produce permit signatures, so\n contracts should have entry points that don't rely on permit."
							},
							"fullyImplemented": false,
							"id": 287,
							"linearizedBaseContracts": [
								287
							],
							"name": "IERC20Permit",
							"nameLocation": "2123:12:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 255,
										"nodeType": "StructuredDocumentation",
										"src": "2142:850:3",
										"text": " @dev Sets `value` as the allowance of `spender` over ``owner``'s tokens,\n given ``owner``'s signed approval.\n IMPORTANT: The same issues {IERC20-approve} has related to transaction\n ordering also apply here.\n Emits an {Approval} event.\n Requirements:\n - `spender` cannot be the zero address.\n - `deadline` must be a timestamp in the future.\n - `v`, `r` and `s` must be a valid `secp256k1` signature from `owner`\n over the EIP712-formatted function arguments.\n - the signature must use ``owner``'s current nonce (see {nonces}).\n For more information on the signature format, see the\n https://eips.ethereum.org/EIPS/eip-2612#specification[relevant EIP\n section].\n CAUTION: See Security Considerations above."
									},
									"functionSelector": "d505accf",
									"id": 272,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "permit",
									"nameLocation": "3006:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 257,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3030:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3022:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 256,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3022:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 259,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3053:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3045:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 258,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3045:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 261,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3078:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3070:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 260,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3070:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 263,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "3101:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3093:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 262,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3093:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 265,
												"mutability": "mutable",
												"name": "v",
												"nameLocation": "3125:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3119:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 264,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "3119:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 267,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3144:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3136:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 266,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3136:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 269,
												"mutability": "mutable",
												"name": "s",
												"nameLocation": "3163:1:3",
												"nodeType": "VariableDeclaration",
												"scope": 272,
												"src": "3155:9:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 268,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3155:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3012:158:3"
									},
									"returnParameters": {
										"id": 271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3179:0:3"
									},
									"scope": 287,
									"src": "2997:183:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 273,
										"nodeType": "StructuredDocumentation",
										"src": "3186:294:3",
										"text": " @dev Returns the current nonce for `owner`. This value must be\n included whenever a signature is generated for {permit}.\n Every successful call to {permit} increases ``owner``'s nonce by one. This\n prevents a signature from being used multiple times."
									},
									"functionSelector": "7ecebe00",
									"id": 280,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "nonces",
									"nameLocation": "3494:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 276,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 275,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "3509:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3501:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 274,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3501:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3500:15:3"
									},
									"returnParameters": {
										"id": 279,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 278,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 280,
												"src": "3539:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 277,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3539:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3538:9:3"
									},
									"scope": 287,
									"src": "3485:63:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 281,
										"nodeType": "StructuredDocumentation",
										"src": "3554:128:3",
										"text": " @dev Returns the domain separator used in the encoding of the signature for {permit}, as defined by {EIP712}."
									},
									"functionSelector": "3644e515",
									"id": 286,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "DOMAIN_SEPARATOR",
									"nameLocation": "3749:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3765:2:3"
									},
									"returnParameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 286,
												"src": "3791:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 283,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3791:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3790:9:3"
									},
									"scope": 287,
									"src": "3740:60:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 288,
							"src": "2113:1689:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "123:3680:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol",
					"exportedSymbols": {
						"Address": [
							830
						],
						"IERC20": [
							225
						],
						"IERC20Permit": [
							287
						],
						"SafeERC20": [
							577
						]
					},
					"id": 578,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 289,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol",
							"file": "../IERC20.sol",
							"id": 291,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 578,
							"sourceUnit": 226,
							"src": "141:37:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 290,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "149:6:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Permit.sol",
							"file": "../extensions/IERC20Permit.sol",
							"id": 293,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 578,
							"sourceUnit": 288,
							"src": "179:60:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 292,
										"name": "IERC20Permit",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 287,
										"src": "187:12:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/Address.sol",
							"file": "../../../utils/Address.sol",
							"id": 295,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 578,
							"sourceUnit": 831,
							"src": "240:51:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 294,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 830,
										"src": "248:7:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeERC20",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 296,
								"nodeType": "StructuredDocumentation",
								"src": "293:457:4",
								"text": " @title SafeERC20\n @dev Wrappers around ERC20 operations that throw on failure (when the token\n contract returns false). Tokens that return no value (and instead revert or\n throw on failure) are also supported, non-reverting calls are assumed to be\n successful.\n To use this library you can add a `using SafeERC20 for IERC20;` statement to your contract,\n which allows you to call the safe operations as `token.safeTransfer(...)`, etc."
							},
							"fullyImplemented": true,
							"id": 577,
							"linearizedBaseContracts": [
								577
							],
							"name": "SafeERC20",
							"nameLocation": "759:9:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 299,
									"libraryName": {
										"id": 297,
										"name": "Address",
										"nameLocations": [
											"781:7:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 830,
										"src": "781:7:4"
									},
									"nodeType": "UsingForDirective",
									"src": "775:26:4",
									"typeName": {
										"id": 298,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "793:7:4",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"documentation": {
										"id": 300,
										"nodeType": "StructuredDocumentation",
										"src": "807:64:4",
										"text": " @dev An operation with an ERC20 token failed."
									},
									"errorSelector": "5274afe7",
									"id": 304,
									"name": "SafeERC20FailedOperation",
									"nameLocation": "882:24:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 303,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 302,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "915:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 304,
												"src": "907:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "907:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "906:15:4"
									},
									"src": "876:46:4"
								},
								{
									"documentation": {
										"id": 305,
										"nodeType": "StructuredDocumentation",
										"src": "928:71:4",
										"text": " @dev Indicates a failed `decreaseAllowance` request."
									},
									"errorSelector": "e570110f",
									"id": 313,
									"name": "SafeERC20FailedDecreaseAllowance",
									"nameLocation": "1010:32:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 307,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1051:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1043:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 306,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1043:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 309,
												"mutability": "mutable",
												"name": "currentAllowance",
												"nameLocation": "1068:16:4",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1060:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 308,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1060:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 311,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "1094:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 313,
												"src": "1086:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1086:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1042:70:4"
									},
									"src": "1004:109:4"
								},
								{
									"body": {
										"id": 336,
										"nodeType": "Block",
										"src": "1375:88:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 325,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 317,
															"src": "1405:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 328,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 317,
																		"src": "1427:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 329,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1433:8:4",
																	"memberName": "transfer",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 192,
																	"src": "1427:14:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 330,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 319,
																			"src": "1444:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 331,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 321,
																			"src": "1448:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 332,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1443:11:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,uint256)"
																	}
																],
																"expression": {
																	"id": 326,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1412:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 327,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1416:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1412:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 333,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1412:43:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 324,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "1385:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1385:71:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 335,
												"nodeType": "ExpressionStatement",
												"src": "1385:71:4"
											}
										]
									},
									"documentation": {
										"id": 314,
										"nodeType": "StructuredDocumentation",
										"src": "1119:179:4",
										"text": " @dev Transfer `value` amount of `token` from the calling contract to `to`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 337,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransfer",
									"nameLocation": "1312:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 317,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1332:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1325:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 316,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 315,
														"name": "IERC20",
														"nameLocations": [
															"1325:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1325:6:4"
													},
													"referencedDeclaration": 225,
													"src": "1325:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1347:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1339:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1339:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1359:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 337,
												"src": "1351:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1351:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1324:41:4"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1375:0:4"
									},
									"scope": 577,
									"src": "1303:160:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 363,
										"nodeType": "Block",
										"src": "1792:98:4",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 351,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 341,
															"src": "1822:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"arguments": [
																{
																	"expression": {
																		"id": 354,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 341,
																		"src": "1844:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	"id": 355,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1850:12:4",
																	"memberName": "transferFrom",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 224,
																	"src": "1844:18:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	}
																},
																{
																	"components": [
																		{
																			"id": 356,
																			"name": "from",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 343,
																			"src": "1865:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 357,
																			"name": "to",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 345,
																			"src": "1871:2:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		{
																			"id": 358,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 347,
																			"src": "1875:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 359,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "1864:17:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																		"typeString": "function (address,address,uint256) external returns (bool)"
																	},
																	{
																		"typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$",
																		"typeString": "tuple(address,address,uint256)"
																	}
																],
																"expression": {
																	"id": 352,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "1829:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "1833:10:4",
																"memberName": "encodeCall",
																"nodeType": "MemberAccess",
																"src": "1829:14:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 360,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1829:53:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 350,
														"name": "_callOptionalReturn",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 527,
														"src": "1802:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (contract IERC20,bytes memory)"
														}
													},
													"id": 361,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1802:81:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 362,
												"nodeType": "ExpressionStatement",
												"src": "1802:81:4"
											}
										]
									},
									"documentation": {
										"id": 338,
										"nodeType": "StructuredDocumentation",
										"src": "1469:228:4",
										"text": " @dev Transfer `value` amount of `token` from `from` to `to`, spending the approval given by `from` to the\n calling contract. If `token` returns no value, non-reverting calls are assumed to be successful."
									},
									"id": 364,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1711:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 348,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 341,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1735:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1728:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 340,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 339,
														"name": "IERC20",
														"nameLocations": [
															"1728:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "1728:6:4"
													},
													"referencedDeclaration": 225,
													"src": "1728:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 343,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1750:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1742:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 342,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1742:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 345,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1764:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1756:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1756:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 347,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1776:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 364,
												"src": "1768:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 346,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1768:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1727:55:4"
									},
									"returnParameters": {
										"id": 349,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1792:0:4"
									},
									"scope": 577,
									"src": "1702:188:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 394,
										"nodeType": "Block",
										"src": "2167:139:4",
										"statements": [
											{
												"assignments": [
													376
												],
												"declarations": [
													{
														"constant": false,
														"id": 376,
														"mutability": "mutable",
														"name": "oldAllowance",
														"nameLocation": "2185:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 394,
														"src": "2177:20:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 375,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "2177:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 385,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 381,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "2224:4:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_SafeERC20_$577",
																		"typeString": "library SafeERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_SafeERC20_$577",
																		"typeString": "library SafeERC20"
																	}
																],
																"id": 380,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "2216:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 379,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "2216:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2216:13:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 383,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "2231:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"id": 377,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "2200:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 378,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2206:9:4",
														"memberName": "allowance",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 202,
														"src": "2200:15:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
															"typeString": "function (address,address) view external returns (uint256)"
														}
													},
													"id": 384,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2200:39:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2177:62:4"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 387,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 368,
															"src": "2262:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														{
															"id": 388,
															"name": "spender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 370,
															"src": "2269:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 391,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 389,
																"name": "oldAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 376,
																"src": "2278:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 390,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 372,
																"src": "2293:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2278:20:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 386,
														"name": "forceApprove",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 485,
														"src": "2249:12:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (contract IERC20,address,uint256)"
														}
													},
													"id": 392,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2249:50:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 393,
												"nodeType": "ExpressionStatement",
												"src": "2249:50:4"
											}
										]
									},
									"documentation": {
										"id": 365,
										"nodeType": "StructuredDocumentation",
										"src": "1896:180:4",
										"text": " @dev Increase the calling contract's allowance toward `spender` by `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful."
									},
									"id": 395,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeIncreaseAllowance",
									"nameLocation": "2090:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 373,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 368,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2119:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2112:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 367,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 366,
														"name": "IERC20",
														"nameLocations": [
															"2112:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2112:6:4"
													},
													"referencedDeclaration": 225,
													"src": "2112:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2134:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2126:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2126:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 372,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2151:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "2143:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 371,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2143:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2111:46:4"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2167:0:4"
									},
									"scope": 577,
									"src": "2081:225:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 437,
										"nodeType": "Block",
										"src": "2607:370:4",
										"statements": [
											{
												"id": 436,
												"nodeType": "UncheckedBlock",
												"src": "2617:354:4",
												"statements": [
													{
														"assignments": [
															407
														],
														"declarations": [
															{
																"constant": false,
																"id": 407,
																"mutability": "mutable",
																"name": "currentAllowance",
																"nameLocation": "2649:16:4",
																"nodeType": "VariableDeclaration",
																"scope": 436,
																"src": "2641:24:4",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 406,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "2641:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 416,
														"initialValue": {
															"arguments": [
																{
																	"arguments": [
																		{
																			"id": 412,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "2692:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_SafeERC20_$577",
																				"typeString": "library SafeERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_SafeERC20_$577",
																				"typeString": "library SafeERC20"
																			}
																		],
																		"id": 411,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "2684:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 410,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "2684:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 413,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "2684:13:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 414,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "2699:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"expression": {
																	"id": 408,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "2668:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																"id": 409,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2674:9:4",
																"memberName": "allowance",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 202,
																"src": "2668:15:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
																	"typeString": "function (address,address) view external returns (uint256)"
																}
															},
															"id": 415,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2668:39:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "2641:66:4"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 417,
																"name": "currentAllowance",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 407,
																"src": "2725:16:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 418,
																"name": "requestedDecrease",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 403,
																"src": "2744:17:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2725:36:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 427,
														"nodeType": "IfStatement",
														"src": "2721:160:4",
														"trueBody": {
															"id": 426,
															"nodeType": "Block",
															"src": "2763:118:4",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 421,
																				"name": "spender",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 401,
																				"src": "2821:7:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 422,
																				"name": "currentAllowance",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 407,
																				"src": "2830:16:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			{
																				"id": 423,
																				"name": "requestedDecrease",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 403,
																				"src": "2848:17:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				{
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			],
																			"id": 420,
																			"name": "SafeERC20FailedDecreaseAllowance",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 313,
																			"src": "2788:32:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$_t_uint256_$_t_uint256_$returns$_t_error_$",
																				"typeString": "function (address,uint256,uint256) pure returns (error)"
																			}
																		},
																		"id": 424,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "2788:78:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 425,
																	"nodeType": "RevertStatement",
																	"src": "2781:85:4"
																}
															]
														}
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 429,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 399,
																	"src": "2907:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																},
																{
																	"id": 430,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 401,
																	"src": "2914:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 433,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 431,
																		"name": "currentAllowance",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 407,
																		"src": "2923:16:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 432,
																		"name": "requestedDecrease",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 403,
																		"src": "2942:17:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2923:36:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 428,
																"name": "forceApprove",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 485,
																"src": "2894:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$",
																	"typeString": "function (contract IERC20,address,uint256)"
																}
															},
															"id": 434,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2894:66:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$__$",
																"typeString": "tuple()"
															}
														},
														"id": 435,
														"nodeType": "ExpressionStatement",
														"src": "2894:66:4"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "2312:192:4",
										"text": " @dev Decrease the calling contract's allowance toward `spender` by `requestedDecrease`. If `token` returns no\n value, non-reverting calls are assumed to be successful."
									},
									"id": 438,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "safeDecreaseAllowance",
									"nameLocation": "2518:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 399,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2547:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2540:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 398,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 397,
														"name": "IERC20",
														"nameLocations": [
															"2540:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "2540:6:4"
													},
													"referencedDeclaration": 225,
													"src": "2540:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 401,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2562:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2554:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 400,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2554:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 403,
												"mutability": "mutable",
												"name": "requestedDecrease",
												"nameLocation": "2579:17:4",
												"nodeType": "VariableDeclaration",
												"scope": 438,
												"src": "2571:25:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2571:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2539:58:4"
									},
									"returnParameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2607:0:4"
									},
									"scope": 577,
									"src": "2509:468:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 484,
										"nodeType": "Block",
										"src": "3373:303:4",
										"statements": [
											{
												"assignments": [
													450
												],
												"declarations": [
													{
														"constant": false,
														"id": 450,
														"mutability": "mutable",
														"name": "approvalCall",
														"nameLocation": "3396:12:4",
														"nodeType": "VariableDeclaration",
														"scope": 484,
														"src": "3383:25:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 449,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3383:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 459,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 453,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "3426:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 454,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3432:7:4",
															"memberName": "approve",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 212,
															"src": "3426:13:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															}
														},
														{
															"components": [
																{
																	"id": 455,
																	"name": "spender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 444,
																	"src": "3442:7:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 456,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 446,
																	"src": "3451:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 457,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "3441:16:4",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																"typeString": "function (address,uint256) external returns (bool)"
															},
															{
																"typeIdentifier": "t_tuple$_t_address_$_t_uint256_$",
																"typeString": "tuple(address,uint256)"
															}
														],
														"expression": {
															"id": 451,
															"name": "abi",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967295,
															"src": "3411:3:4",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_abi",
																"typeString": "abi"
															}
														},
														"id": 452,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3415:10:4",
														"memberName": "encodeCall",
														"nodeType": "MemberAccess",
														"src": "3411:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
															"typeString": "function () pure returns (bytes memory)"
														}
													},
													"id": 458,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3411:47:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3383:75:4"
											},
											{
												"condition": {
													"id": 464,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3473:45:4",
													"subExpression": {
														"arguments": [
															{
																"id": 461,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 442,
																"src": "3498:5:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															{
																"id": 462,
																"name": "approvalCall",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 450,
																"src": "3505:12:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																},
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"id": 460,
															"name": "_callOptionalReturnBool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 576,
															"src": "3474:23:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$_t_bool_$",
																"typeString": "function (contract IERC20,bytes memory) returns (bool)"
															}
														},
														"id": 463,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3474:44:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 483,
												"nodeType": "IfStatement",
												"src": "3469:201:4",
												"trueBody": {
													"id": 482,
													"nodeType": "Block",
													"src": "3520:150:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 466,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "3554:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"arguments": [
																			{
																				"expression": {
																					"id": 469,
																					"name": "token",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 442,
																					"src": "3576:5:4",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_IERC20_$225",
																						"typeString": "contract IERC20"
																					}
																				},
																				"id": 470,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3582:7:4",
																				"memberName": "approve",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 212,
																				"src": "3576:13:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 471,
																						"name": "spender",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 444,
																						"src": "3592:7:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					{
																						"hexValue": "30",
																						"id": 472,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "3601:1:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_0_by_1",
																							"typeString": "int_const 0"
																						},
																						"value": "0"
																					}
																				],
																				"id": 473,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "3591:12:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																					"typeString": "function (address,uint256) external returns (bool)"
																				},
																				{
																					"typeIdentifier": "t_tuple$_t_address_$_t_rational_0_by_1_$",
																					"typeString": "tuple(address,int_const 0)"
																				}
																			],
																			"expression": {
																				"id": 467,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "3561:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 468,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "3565:10:4",
																			"memberName": "encodeCall",
																			"nodeType": "MemberAccess",
																			"src": "3561:14:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abiencodecall_pure$__$returns$_t_bytes_memory_ptr_$",
																				"typeString": "function () pure returns (bytes memory)"
																			}
																		},
																		"id": 474,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3561:43:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 465,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "3534:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 475,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3534:71:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 476,
															"nodeType": "ExpressionStatement",
															"src": "3534:71:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 478,
																		"name": "token",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 442,
																		"src": "3639:5:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		}
																	},
																	{
																		"id": 479,
																		"name": "approvalCall",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 450,
																		"src": "3646:12:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_IERC20_$225",
																			"typeString": "contract IERC20"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 477,
																	"name": "_callOptionalReturn",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 527,
																	"src": "3619:19:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (contract IERC20,bytes memory)"
																	}
																},
																"id": 480,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3619:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 481,
															"nodeType": "ExpressionStatement",
															"src": "3619:40:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 439,
										"nodeType": "StructuredDocumentation",
										"src": "2983:308:4",
										"text": " @dev Set the calling contract's allowance toward `spender` to `value`. If `token` returns no value,\n non-reverting calls are assumed to be successful. Meant to be used with tokens that require the approval\n to be set to zero before setting it to a non-zero value, such as USDT."
									},
									"id": 485,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "forceApprove",
									"nameLocation": "3305:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 447,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "3325:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "3318:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 441,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 440,
														"name": "IERC20",
														"nameLocations": [
															"3318:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "3318:6:4"
													},
													"referencedDeclaration": 225,
													"src": "3318:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 444,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "3340:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "3332:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 443,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3332:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 446,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3357:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 485,
												"src": "3349:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 445,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3349:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3317:46:4"
									},
									"returnParameters": {
										"id": 448,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3373:0:4"
									},
									"scope": 577,
									"src": "3296:380:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 526,
										"nodeType": "Block",
										"src": "4129:559:4",
										"statements": [
											{
												"assignments": [
													495
												],
												"declarations": [
													{
														"constant": false,
														"id": 495,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4491:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 526,
														"src": "4478:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 494,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4478:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 503,
												"initialValue": {
													"arguments": [
														{
															"id": 501,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 491,
															"src": "4532:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 498,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 489,
																	"src": "4512:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 497,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4504:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 496,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4504:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4504:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 500,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4519:12:4",
														"memberName": "functionCall",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 651,
														"src": "4504:27:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$attached_to$_t_address_$",
															"typeString": "function (address,bytes memory) returns (bytes memory)"
														}
													},
													"id": 502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4504:33:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4478:59:4"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 507,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 504,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 495,
																"src": "4551:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 505,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4562:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4551:17:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"hexValue": "30",
															"id": 506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4572:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4551:22:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 515,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4577:31:4",
														"subExpression": {
															"arguments": [
																{
																	"id": 510,
																	"name": "returndata",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 495,
																	"src": "4589:10:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"components": [
																		{
																			"id": 512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4602:4:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_bool_$",
																				"typeString": "type(bool)"
																			},
																			"typeName": {
																				"id": 511,
																				"name": "bool",
																				"nodeType": "ElementaryTypeName",
																				"src": "4602:4:4",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"id": 513,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "4601:6:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_type$_t_bool_$",
																		"typeString": "type(bool)"
																	}
																],
																"expression": {
																	"id": 508,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "4578:3:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 509,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "4582:6:4",
																"memberName": "decode",
																"nodeType": "MemberAccess",
																"src": "4578:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 514,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4578:30:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4551:57:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 525,
												"nodeType": "IfStatement",
												"src": "4547:135:4",
												"trueBody": {
													"id": 524,
													"nodeType": "Block",
													"src": "4610:72:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 520,
																				"name": "token",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 489,
																				"src": "4664:5:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_IERC20_$225",
																					"typeString": "contract IERC20"
																				}
																			],
																			"id": 519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4656:7:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 518,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4656:7:4",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 521,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4656:14:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 517,
																	"name": "SafeERC20FailedOperation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 304,
																	"src": "4631:24:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4631:40:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 523,
															"nodeType": "RevertStatement",
															"src": "4624:47:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 486,
										"nodeType": "StructuredDocumentation",
										"src": "3682:372:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants)."
									},
									"id": 527,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturn",
									"nameLocation": "4068:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 492,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 489,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4095:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "4088:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 488,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 487,
														"name": "IERC20",
														"nameLocations": [
															"4088:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "4088:6:4"
													},
													"referencedDeclaration": 225,
													"src": "4088:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 491,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4115:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 527,
												"src": "4102:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 490,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4102:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4087:33:4"
									},
									"returnParameters": {
										"id": 493,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4129:0:4"
									},
									"scope": 577,
									"src": "4059:629:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 575,
										"nodeType": "Block",
										"src": "5278:489:4",
										"statements": [
											{
												"assignments": [
													539,
													541
												],
												"declarations": [
													{
														"constant": false,
														"id": 539,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "5579:7:4",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "5574:12:4",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 538,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "5574:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 541,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "5601:10:4",
														"nodeType": "VariableDeclaration",
														"scope": 575,
														"src": "5588:23:4",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 540,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "5588:5:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 549,
												"initialValue": {
													"arguments": [
														{
															"id": 547,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 533,
															"src": "5635:4:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 544,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 531,
																	"src": "5623:5:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC20_$225",
																		"typeString": "contract IERC20"
																	}
																],
																"id": 543,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5615:7:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 542,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5615:7:4",
																	"typeDescriptions": {}
																}
															},
															"id": 545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5615:14:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 546,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5630:4:4",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "5615:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 548,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5615:25:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5573:67:4"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 564,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 550,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 539,
															"src": "5657:7:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "&&",
														"rightExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"id": 562,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 554,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 551,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 541,
																				"src": "5669:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			"id": 552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5680:6:4",
																			"memberName": "length",
																			"nodeType": "MemberAccess",
																			"src": "5669:17:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "==",
																		"rightExpression": {
																			"hexValue": "30",
																			"id": 553,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5690:1:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"src": "5669:22:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "||",
																	"rightExpression": {
																		"arguments": [
																			{
																				"id": 557,
																				"name": "returndata",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 541,
																				"src": "5706:10:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			},
																			{
																				"components": [
																					{
																						"id": 559,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"lValueRequested": false,
																						"nodeType": "ElementaryTypeNameExpression",
																						"src": "5719:4:4",
																						"typeDescriptions": {
																							"typeIdentifier": "t_type$_t_bool_$",
																							"typeString": "type(bool)"
																						},
																						"typeName": {
																							"id": 558,
																							"name": "bool",
																							"nodeType": "ElementaryTypeName",
																							"src": "5719:4:4",
																							"typeDescriptions": {}
																						}
																					}
																				],
																				"id": 560,
																				"isConstant": false,
																				"isInlineArray": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "TupleExpression",
																				"src": "5718:6:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				},
																				{
																					"typeIdentifier": "t_type$_t_bool_$",
																					"typeString": "type(bool)"
																				}
																			],
																			"expression": {
																				"id": 555,
																				"name": "abi",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967295,
																				"src": "5695:3:4",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_abi",
																					"typeString": "abi"
																				}
																			},
																			"id": 556,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "5699:6:4",
																			"memberName": "decode",
																			"nodeType": "MemberAccess",
																			"src": "5695:10:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 561,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5695:30:4",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"src": "5669:56:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																}
															],
															"id": 563,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "5668:58:4",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "5657:69:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 572,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 567,
																			"name": "token",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 531,
																			"src": "5738:5:4",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_IERC20_$225",
																				"typeString": "contract IERC20"
																			}
																		],
																		"id": 566,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5730:7:4",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 565,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5730:7:4",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 568,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5730:14:4",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 569,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5745:4:4",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "5730:19:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5750:6:4",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "5730:26:4",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 571,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5759:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "5730:30:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "5657:103:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 537,
												"id": 574,
												"nodeType": "Return",
												"src": "5650:110:4"
											}
										]
									},
									"documentation": {
										"id": 528,
										"nodeType": "StructuredDocumentation",
										"src": "4694:490:4",
										"text": " @dev Imitates a Solidity high-level call (i.e. a regular function call to a contract), relaxing the requirement\n on the return value: the return value is optional (but if data is returned, it must not be false).\n @param token The token targeted by the call.\n @param data The call data (encoded using abi.encode or one of its variants).\n This is a variant of {_callOptionalReturn} that silents catches all reverts and returns a bool instead."
									},
									"id": 576,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_callOptionalReturnBool",
									"nameLocation": "5198:23:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 534,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 531,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5229:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5222:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 530,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 529,
														"name": "IERC20",
														"nameLocations": [
															"5222:6:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "5222:6:4"
													},
													"referencedDeclaration": 225,
													"src": "5222:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 533,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "5249:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5236:17:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 532,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5236:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5221:33:4"
									},
									"returnParameters": {
										"id": 537,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 536,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 576,
												"src": "5272:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 535,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5272:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5271:6:4"
									},
									"scope": 577,
									"src": "5189:578:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 578,
							"src": "751:5018:4",
							"usedErrors": [
								304,
								313
							],
							"usedEvents": []
						}
					],
					"src": "115:5655:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts@5.0.2/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							830
						]
					},
					"id": 831,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 579,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 580,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:5",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 830,
							"linearizedBaseContracts": [
								830
							],
							"name": "Address",
							"nameLocation": "203:7:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 581,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:5",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 585,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 584,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 583,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 585,
												"src": "349:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 582,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:5"
									},
									"src": "316:50:5"
								},
								{
									"documentation": {
										"id": 586,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:5",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 590,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 590,
												"src": "475:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 587,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:5"
									},
									"src": "452:39:5"
								},
								{
									"documentation": {
										"id": 591,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:5",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 593,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:5",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 592,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:5"
									},
									"src": "591:24:5"
								},
								{
									"body": {
										"id": 633,
										"nodeType": "Block",
										"src": "1602:260:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 603,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$830",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$830",
																		"typeString": "library Address"
																	}
																],
																"id": 602,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 601,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 605,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 606,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 598,
														"src": "1640:6:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 616,
												"nodeType": "IfStatement",
												"src": "1612:109:5",
												"trueBody": {
													"id": 615,
													"nodeType": "Block",
													"src": "1648:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 611,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$830",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$830",
																					"typeString": "library Address"
																				}
																			],
																			"id": 610,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 609,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 612,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 608,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "1669:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 614,
															"nodeType": "RevertStatement",
															"src": "1662:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													618,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 618,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 633,
														"src": "1732:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 617,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 625,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 623,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:5",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 619,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 596,
																"src": "1750:9:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 622,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 621,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 598,
																"src": "1772:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 624,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:5"
											},
											{
												"condition": {
													"id": 627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:5",
													"subExpression": {
														"id": 626,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 618,
														"src": "1798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 632,
												"nodeType": "IfStatement",
												"src": "1793:63:5",
												"trueBody": {
													"id": 631,
													"nodeType": "Block",
													"src": "1807:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 628,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "1828:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 629,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 630,
															"nodeType": "RevertStatement",
															"src": "1821:24:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 594,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:5",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 634,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 596,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1550:25:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 595,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:5",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 598,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 634,
												"src": "1577:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:5"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:5"
									},
									"scope": 830,
									"src": "1531:331:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 650,
										"nodeType": "Block",
										"src": "2794:62:5",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 645,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 637,
															"src": "2833:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 646,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 639,
															"src": "2841:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 647,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:5",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 644,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 697,
														"src": "2811:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 648,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 643,
												"id": 649,
												"nodeType": "Return",
												"src": "2804:45:5"
											}
										]
									},
									"documentation": {
										"id": 635,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:5",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 651,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 640,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 637,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2727:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 636,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 639,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2743:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 638,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:5"
									},
									"returnParameters": {
										"id": 643,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 642,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 651,
												"src": "2780:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 641,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:5"
									},
									"scope": 830,
									"src": "2705:151:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 696,
										"nodeType": "Block",
										"src": "3293:279:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 665,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$830",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$830",
																		"typeString": "library Address"
																	}
																],
																"id": 664,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 663,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:5",
																	"typeDescriptions": {}
																}
															},
															"id": 666,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 667,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:5",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 668,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 658,
														"src": "3331:5:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 678,
												"nodeType": "IfStatement",
												"src": "3303:108:5",
												"trueBody": {
													"id": 677,
													"nodeType": "Block",
													"src": "3338:73:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 673,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$830",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$830",
																					"typeString": "library Address"
																				}
																			],
																			"id": 672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 671,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:5",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 674,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:5",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 670,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 585,
																	"src": "3359:26:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 675,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 676,
															"nodeType": "RevertStatement",
															"src": "3352:48:5"
														}
													]
												}
											},
											{
												"assignments": [
													680,
													682
												],
												"declarations": [
													{
														"constant": false,
														"id": 680,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3421:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 679,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 682,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 696,
														"src": "3435:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 681,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 689,
												"initialValue": {
													"arguments": [
														{
															"id": 687,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 656,
															"src": "3488:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 683,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 654,
																"src": "3462:6:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 684,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:5",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:5",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 686,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 685,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 658,
																"src": "3481:5:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 691,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 654,
															"src": "3537:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 692,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 680,
															"src": "3545:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 693,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 682,
															"src": "3554:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 690,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "3510:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 694,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 662,
												"id": 695,
												"nodeType": "Return",
												"src": "3503:62:5"
											}
										]
									},
									"documentation": {
										"id": 652,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 697,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 659,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 654,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3211:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 653,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 656,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3227:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 655,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 658,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3246:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 657,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:5"
									},
									"returnParameters": {
										"id": 662,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 661,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 697,
												"src": "3279:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 660,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:5"
									},
									"scope": 830,
									"src": "3180:392:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 722,
										"nodeType": "Block",
										"src": "3811:154:5",
										"statements": [
											{
												"assignments": [
													708,
													710
												],
												"declarations": [
													{
														"constant": false,
														"id": 708,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "3822:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 707,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 710,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 722,
														"src": "3836:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 709,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 715,
												"initialValue": {
													"arguments": [
														{
															"id": 713,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 702,
															"src": "3881:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 711,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "3863:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 712,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:5",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 714,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 717,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 700,
															"src": "3930:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 718,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 708,
															"src": "3938:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 719,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 710,
															"src": "3947:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 716,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "3903:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 720,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 706,
												"id": 721,
												"nodeType": "Return",
												"src": "3896:62:5"
											}
										]
									},
									"documentation": {
										"id": 698,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 723,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 703,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 700,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "3739:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 699,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 702,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "3755:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 701,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:5"
									},
									"returnParameters": {
										"id": 706,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 705,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 723,
												"src": "3797:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 704,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:5"
									},
									"scope": 830,
									"src": "3711:254:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 748,
										"nodeType": "Block",
										"src": "4203:156:5",
										"statements": [
											{
												"assignments": [
													734,
													736
												],
												"declarations": [
													{
														"constant": false,
														"id": 734,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:5",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "4214:12:5",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 733,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 736,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:5",
														"nodeType": "VariableDeclaration",
														"scope": 748,
														"src": "4228:23:5",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 735,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 741,
												"initialValue": {
													"arguments": [
														{
															"id": 739,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 728,
															"src": "4275:4:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 737,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "4255:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 738,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:5",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:5"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 743,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 726,
															"src": "4324:6:5",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 744,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 734,
															"src": "4332:7:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 745,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 736,
															"src": "4341:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 742,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 789,
														"src": "4297:26:5",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 746,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:5",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 732,
												"id": 747,
												"nodeType": "Return",
												"src": "4290:62:5"
											}
										]
									},
									"documentation": {
										"id": 724,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:5",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 749,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 726,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "4136:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 725,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 728,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "4152:17:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 727,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:5"
									},
									"returnParameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 731,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 749,
												"src": "4189:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 730,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:5"
									},
									"scope": 830,
									"src": "4106:253:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 788,
										"nodeType": "Block",
										"src": "4783:424:5",
										"statements": [
											{
												"condition": {
													"id": 762,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:5",
													"subExpression": {
														"id": 761,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 754,
														"src": "4798:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 786,
													"nodeType": "Block",
													"src": "4857:344:5",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 777,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 771,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 768,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 756,
																			"src": "5045:10:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 770,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 776,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 772,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 752,
																				"src": "5071:6:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 773,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:5",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:5",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 774,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:5",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 775,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 783,
															"nodeType": "IfStatement",
															"src": "5041:119:5",
															"trueBody": {
																"id": 782,
																"nodeType": "Block",
																"src": "5096:64:5",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 779,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 752,
																					"src": "5138:6:5",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 778,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 590,
																				"src": "5121:16:5",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:5",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 781,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:5"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 784,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 756,
																"src": "5180:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 760,
															"id": 785,
															"nodeType": "Return",
															"src": "5173:17:5"
														}
													]
												},
												"id": 787,
												"nodeType": "IfStatement",
												"src": "4793:408:5",
												"trueBody": {
													"id": 767,
													"nodeType": "Block",
													"src": "4807:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 764,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 756,
																		"src": "4829:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 763,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "4821:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 765,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 766,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 750,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:5",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 789,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 752,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "4670:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 754,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "4694:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 753,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 756,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "4716:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 755,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:5"
									},
									"returnParameters": {
										"id": 760,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 759,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 789,
												"src": "4769:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 758,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:5"
									},
									"scope": 830,
									"src": "4625:582:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "5509:122:5",
										"statements": [
											{
												"condition": {
													"id": 800,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:5",
													"subExpression": {
														"id": 799,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 792,
														"src": "5524:7:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 808,
													"nodeType": "Block",
													"src": "5583:42:5",
													"statements": [
														{
															"expression": {
																"id": 806,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 794,
																"src": "5604:10:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 798,
															"id": 807,
															"nodeType": "Return",
															"src": "5597:17:5"
														}
													]
												},
												"id": 809,
												"nodeType": "IfStatement",
												"src": "5519:106:5",
												"trueBody": {
													"id": 805,
													"nodeType": "Block",
													"src": "5533:44:5",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 802,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 794,
																		"src": "5555:10:5",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 801,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 829,
																	"src": "5547:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 803,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 804,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 790,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:5",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 792,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "5433:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 791,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 794,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "5447:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 793,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:5"
									},
									"returnParameters": {
										"id": 798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 811,
												"src": "5495:12:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 796,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:5"
									},
									"scope": 830,
									"src": "5407:224:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 828,
										"nodeType": "Block",
										"src": "5798:461:5",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 817,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 814,
															"src": "5874:10:5",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 818,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:5",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:5",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 819,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:5",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 826,
													"nodeType": "Block",
													"src": "6204:49:5",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 823,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 593,
																	"src": "6225:15:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 824,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:5",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 825,
															"nodeType": "RevertStatement",
															"src": "6218:24:5"
														}
													]
												},
												"id": 827,
												"nodeType": "IfStatement",
												"src": "5870:383:5",
												"trueBody": {
													"id": 822,
													"nodeType": "Block",
													"src": "5897:301:5",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:5",
																"nodeType": "YulBlock",
																"src": "6055:133:5",
																"statements": [
																	{
																		"nativeSrc": "6073:40:5",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:5",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:5",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:5"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:5",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:5"
																			},
																			"nativeSrc": "6096:17:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:5"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:5",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:5",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:5",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:5",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:5",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:5"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:5",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:5"
																					},
																					"nativeSrc": "6137:19:5",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:5"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:5",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:5"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:5",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:5"
																			},
																			"nativeSrc": "6130:44:5",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:5"
																		},
																		"nativeSrc": "6130:44:5",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:5"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "prague",
															"externalReferences": [
																{
																	"declaration": 814,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:5",
																	"valueSize": 1
																},
																{
																	"declaration": 814,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:5",
																	"valueSize": 1
																}
															],
															"id": 821,
															"nodeType": "InlineAssembly",
															"src": "6046:142:5"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 812,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:5",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 829,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 814,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:5",
												"nodeType": "VariableDeclaration",
												"scope": 829,
												"src": "5760:23:5",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 813,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:5"
									},
									"returnParameters": {
										"id": 816,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:5"
									},
									"scope": 830,
									"src": "5743:516:5",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 831,
							"src": "195:6066:5",
							"usedErrors": [
								585,
								590,
								593
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts@5.0.2/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							860
						]
					},
					"id": 861,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 832,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:6"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Context",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 833,
								"nodeType": "StructuredDocumentation",
								"src": "127:496:6",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 860,
							"linearizedBaseContracts": [
								860
							],
							"name": "Context",
							"nameLocation": "642:7:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 841,
										"nodeType": "Block",
										"src": "718:34:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 838,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "735:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 839,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "739:6:6",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "735:10:6",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 837,
												"id": 840,
												"nodeType": "Return",
												"src": "728:17:6"
											}
										]
									},
									"id": 842,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "665:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "675:2:6"
									},
									"returnParameters": {
										"id": 837,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 842,
												"src": "709:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "709:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "708:9:6"
									},
									"scope": 860,
									"src": "656:96:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 850,
										"nodeType": "Block",
										"src": "825:32:6",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 847,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "842:3:6",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 848,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "846:4:6",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "842:8:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 846,
												"id": 849,
												"nodeType": "Return",
												"src": "835:15:6"
											}
										]
									},
									"id": 851,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "767:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 843,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "775:2:6"
									},
									"returnParameters": {
										"id": 846,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 845,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 851,
												"src": "809:14:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 844,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "809:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "808:16:6"
									},
									"scope": 860,
									"src": "758:99:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 858,
										"nodeType": "Block",
										"src": "935:25:6",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 856,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "952:1:6",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 855,
												"id": 857,
												"nodeType": "Return",
												"src": "945:8:6"
											}
										]
									},
									"id": 859,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "872:20:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "892:2:6"
									},
									"returnParameters": {
										"id": 855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 859,
												"src": "926:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 853,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "926:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "925:9:6"
									},
									"scope": 860,
									"src": "863:97:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 861,
							"src": "624:338:6",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "101:862:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts@5.0.2/utils/Pausable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/utils/Pausable.sol",
					"exportedSymbols": {
						"Context": [
							860
						],
						"Pausable": [
							977
						]
					},
					"id": 978,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 862,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 864,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 978,
							"sourceUnit": 861,
							"src": "128:45:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 863,
										"name": "Context",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 860,
										"src": "136:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 866,
										"name": "Context",
										"nameLocations": [
											"645:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 860,
										"src": "645:7:7"
									},
									"id": 867,
									"nodeType": "InheritanceSpecifier",
									"src": "645:7:7"
								}
							],
							"canonicalName": "Pausable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 865,
								"nodeType": "StructuredDocumentation",
								"src": "175:439:7",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 977,
							"linearizedBaseContracts": [
								977,
								860
							],
							"name": "Pausable",
							"nameLocation": "633:8:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 869,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "672:7:7",
									"nodeType": "VariableDeclaration",
									"scope": 977,
									"src": "659:20:7",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 868,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "659:4:7",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 870,
										"nodeType": "StructuredDocumentation",
										"src": "686:73:7",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 874,
									"name": "Paused",
									"nameLocation": "770:6:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 873,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 872,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "785:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 874,
												"src": "777:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 871,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "777:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "776:17:7"
									},
									"src": "764:30:7"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 875,
										"nodeType": "StructuredDocumentation",
										"src": "800:70:7",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 879,
									"name": "Unpaused",
									"nameLocation": "881:8:7",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 878,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 877,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "898:7:7",
												"nodeType": "VariableDeclaration",
												"scope": 879,
												"src": "890:15:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 876,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "890:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "889:17:7"
									},
									"src": "875:32:7"
								},
								{
									"documentation": {
										"id": 880,
										"nodeType": "StructuredDocumentation",
										"src": "913:76:7",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 882,
									"name": "EnforcedPause",
									"nameLocation": "1000:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 881,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1013:2:7"
									},
									"src": "994:22:7"
								},
								{
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "1022:80:7",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 885,
									"name": "ExpectedPause",
									"nameLocation": "1113:13:7",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 884,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1126:2:7"
									},
									"src": "1107:22:7"
								},
								{
									"body": {
										"id": 893,
										"nodeType": "Block",
										"src": "1221:32:7",
										"statements": [
											{
												"expression": {
													"id": 891,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 889,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "1231:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 890,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1241:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1231:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 892,
												"nodeType": "ExpressionStatement",
												"src": "1231:15:7"
											}
										]
									},
									"documentation": {
										"id": 886,
										"nodeType": "StructuredDocumentation",
										"src": "1135:67:7",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 894,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 887,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1218:2:7"
									},
									"returnParameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:0:7"
									},
									"scope": 977,
									"src": "1207:46:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 901,
										"nodeType": "Block",
										"src": "1464:47:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 897,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 931,
														"src": "1474:17:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 898,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1474:19:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 899,
												"nodeType": "ExpressionStatement",
												"src": "1474:19:7"
											},
											{
												"id": 900,
												"nodeType": "PlaceholderStatement",
												"src": "1503:1:7"
											}
										]
									},
									"documentation": {
										"id": 895,
										"nodeType": "StructuredDocumentation",
										"src": "1259:175:7",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 902,
									"name": "whenNotPaused",
									"nameLocation": "1448:13:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 896,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1461:2:7"
									},
									"src": "1439:72:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 909,
										"nodeType": "Block",
										"src": "1711:44:7",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 905,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 944,
														"src": "1721:14:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 906,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1721:16:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 907,
												"nodeType": "ExpressionStatement",
												"src": "1721:16:7"
											},
											{
												"id": 908,
												"nodeType": "PlaceholderStatement",
												"src": "1747:1:7"
											}
										]
									},
									"documentation": {
										"id": 903,
										"nodeType": "StructuredDocumentation",
										"src": "1517:167:7",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 910,
									"name": "whenPaused",
									"nameLocation": "1698:10:7",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1708:2:7"
									},
									"src": "1689:66:7",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 918,
										"nodeType": "Block",
										"src": "1903:31:7",
										"statements": [
											{
												"expression": {
													"id": 916,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 869,
													"src": "1920:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 915,
												"id": 917,
												"nodeType": "Return",
												"src": "1913:14:7"
											}
										]
									},
									"documentation": {
										"id": 911,
										"nodeType": "StructuredDocumentation",
										"src": "1761:84:7",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 919,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1859:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 912,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1865:2:7"
									},
									"returnParameters": {
										"id": 915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 914,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 919,
												"src": "1897:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 913,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1897:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1896:6:7"
									},
									"scope": 977,
									"src": "1850:84:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 930,
										"nodeType": "Block",
										"src": "2053:77:7",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 923,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 919,
														"src": "2067:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 924,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2067:8:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 929,
												"nodeType": "IfStatement",
												"src": "2063:61:7",
												"trueBody": {
													"id": 928,
													"nodeType": "Block",
													"src": "2077:47:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 925,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 882,
																	"src": "2098:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 926,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2098:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 927,
															"nodeType": "RevertStatement",
															"src": "2091:22:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 920,
										"nodeType": "StructuredDocumentation",
										"src": "1940:57:7",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 931,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2011:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2028:2:7"
									},
									"returnParameters": {
										"id": 922,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2053:0:7"
									},
									"scope": 977,
									"src": "2002:128:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 943,
										"nodeType": "Block",
										"src": "2250:78:7",
										"statements": [
											{
												"condition": {
													"id": 937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "2264:9:7",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 935,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 919,
															"src": "2265:6:7",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 936,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2265:8:7",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 942,
												"nodeType": "IfStatement",
												"src": "2260:62:7",
												"trueBody": {
													"id": 941,
													"nodeType": "Block",
													"src": "2275:47:7",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 938,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 885,
																	"src": "2296:13:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 939,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2296:15:7",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 940,
															"nodeType": "RevertStatement",
															"src": "2289:22:7"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 932,
										"nodeType": "StructuredDocumentation",
										"src": "2136:61:7",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 944,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2211:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 933,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2225:2:7"
									},
									"returnParameters": {
										"id": 934,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2250:0:7"
									},
									"scope": 977,
									"src": "2202:126:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 959,
										"nodeType": "Block",
										"src": "2512:66:7",
										"statements": [
											{
												"expression": {
													"id": 952,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 950,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2522:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 951,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2532:4:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2522:14:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 953,
												"nodeType": "ExpressionStatement",
												"src": "2522:14:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 955,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "2558:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 956,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2558:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 954,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 874,
														"src": "2551:6:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 957,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2551:20:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 958,
												"nodeType": "EmitStatement",
												"src": "2546:25:7"
											}
										]
									},
									"documentation": {
										"id": 945,
										"nodeType": "StructuredDocumentation",
										"src": "2334:124:7",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 960,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 948,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 947,
												"name": "whenNotPaused",
												"nameLocations": [
													"2498:13:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 902,
												"src": "2498:13:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2498:13:7"
										}
									],
									"name": "_pause",
									"nameLocation": "2472:6:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2478:2:7"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2512:0:7"
									},
									"scope": 977,
									"src": "2463:115:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 975,
										"nodeType": "Block",
										"src": "2758:69:7",
										"statements": [
											{
												"expression": {
													"id": 968,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 966,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 869,
														"src": "2768:7:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 967,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2778:5:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2768:15:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "ExpressionStatement",
												"src": "2768:15:7"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 971,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 842,
																"src": "2807:10:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 972,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2807:12:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 970,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 879,
														"src": "2798:8:7",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 973,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2798:22:7",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 974,
												"nodeType": "EmitStatement",
												"src": "2793:27:7"
											}
										]
									},
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "2584:121:7",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 976,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 964,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 963,
												"name": "whenPaused",
												"nameLocations": [
													"2747:10:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 910,
												"src": "2747:10:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "2747:10:7"
										}
									],
									"name": "_unpause",
									"nameLocation": "2719:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 962,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2727:2:7"
									},
									"returnParameters": {
										"id": 965,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2758:0:7"
									},
									"scope": 977,
									"src": "2710:117:7",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 978,
							"src": "615:2214:7",
							"usedErrors": [
								882,
								885
							],
							"usedEvents": [
								874,
								879
							]
						}
					],
					"src": "102:2728:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol",
					"exportedSymbols": {
						"ReentrancyGuard": [
							1046
						]
					},
					"id": 1047,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 979,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:8"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 980,
								"nodeType": "StructuredDocumentation",
								"src": "135:750:8",
								"text": " @dev Contract module that helps prevent reentrant calls to a function.\n Inheriting from `ReentrancyGuard` will make the {nonReentrant} modifier\n available, which can be applied to functions to make sure there are no nested\n (reentrant) calls to them.\n Note that because there is a single `nonReentrant` guard, functions marked as\n `nonReentrant` may not call one another. This can be worked around by making\n those functions `private`, and then adding `external` `nonReentrant` entry\n points to them.\n TIP: If you would like to learn more about reentrancy and alternative ways\n to protect against it, check out our blog post\n https://blog.openzeppelin.com/reentrancy-after-istanbul/[Reentrancy After Istanbul]."
							},
							"fullyImplemented": true,
							"id": 1046,
							"linearizedBaseContracts": [
								1046
							],
							"name": "ReentrancyGuard",
							"nameLocation": "904:15:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 983,
									"mutability": "constant",
									"name": "NOT_ENTERED",
									"nameLocation": "1699:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "1674:40:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 981,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1674:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 982,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1713:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"id": 986,
									"mutability": "constant",
									"name": "ENTERED",
									"nameLocation": "1745:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "1720:36:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 984,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1720:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "32",
										"id": 985,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1755:1:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_2_by_1",
											"typeString": "int_const 2"
										},
										"value": "2"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 988,
									"mutability": "mutable",
									"name": "_status",
									"nameLocation": "1779:7:8",
									"nodeType": "VariableDeclaration",
									"scope": 1046,
									"src": "1763:23:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 987,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1763:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 989,
										"nodeType": "StructuredDocumentation",
										"src": "1793:52:8",
										"text": " @dev Unauthorized reentrant call."
									},
									"errorSelector": "3ee5aeb5",
									"id": 991,
									"name": "ReentrancyGuardReentrantCall",
									"nameLocation": "1856:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1884:2:8"
									},
									"src": "1850:37:8"
								},
								{
									"body": {
										"id": 998,
										"nodeType": "Block",
										"src": "1907:38:8",
										"statements": [
											{
												"expression": {
													"id": 996,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 994,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "1917:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 995,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "1927:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1917:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 997,
												"nodeType": "ExpressionStatement",
												"src": "1917:21:8"
											}
										]
									},
									"id": 999,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 992,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1904:2:8"
									},
									"returnParameters": {
										"id": 993,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1907:0:8"
									},
									"scope": 1046,
									"src": "1893:52:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1009,
										"nodeType": "Block",
										"src": "2346:79:8",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1002,
														"name": "_nonReentrantBefore",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1026,
														"src": "2356:19:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1003,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1004,
												"nodeType": "ExpressionStatement",
												"src": "2356:21:8"
											},
											{
												"id": 1005,
												"nodeType": "PlaceholderStatement",
												"src": "2387:1:8"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1006,
														"name": "_nonReentrantAfter",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1034,
														"src": "2398:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1007,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2398:20:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1008,
												"nodeType": "ExpressionStatement",
												"src": "2398:20:8"
											}
										]
									},
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "1951:366:8",
										"text": " @dev Prevents a contract from calling itself, directly or indirectly.\n Calling a `nonReentrant` function from another `nonReentrant`\n function is not supported. It is possible to prevent this from happening\n by making the `nonReentrant` function external, and making it call a\n `private` function that does the actual work."
									},
									"id": 1010,
									"name": "nonReentrant",
									"nameLocation": "2331:12:8",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1001,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2343:2:8"
									},
									"src": "2322:103:8",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1025,
										"nodeType": "Block",
										"src": "2470:268:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1013,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2558:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1014,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "2569:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2558:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1020,
												"nodeType": "IfStatement",
												"src": "2554:86:8",
												"trueBody": {
													"id": 1019,
													"nodeType": "Block",
													"src": "2578:62:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1016,
																	"name": "ReentrancyGuardReentrantCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 991,
																	"src": "2599:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1017,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2599:30:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1018,
															"nodeType": "RevertStatement",
															"src": "2592:37:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1023,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1021,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2714:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1022,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "2724:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2714:17:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1024,
												"nodeType": "ExpressionStatement",
												"src": "2714:17:8"
											}
										]
									},
									"id": 1026,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantBefore",
									"nameLocation": "2440:19:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1011,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2459:2:8"
									},
									"returnParameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2470:0:8"
									},
									"scope": 1046,
									"src": "2431:307:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1033,
										"nodeType": "Block",
										"src": "2782:170:8",
										"statements": [
											{
												"expression": {
													"id": 1031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 1029,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "2924:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1030,
														"name": "NOT_ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 983,
														"src": "2934:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2924:21:8",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1032,
												"nodeType": "ExpressionStatement",
												"src": "2924:21:8"
											}
										]
									},
									"id": 1034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_nonReentrantAfter",
									"nameLocation": "2753:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1027,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2771:2:8"
									},
									"returnParameters": {
										"id": 1028,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2782:0:8"
									},
									"scope": 1046,
									"src": "2744:208:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1044,
										"nodeType": "Block",
										"src": "3195:42:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1042,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1040,
														"name": "_status",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 988,
														"src": "3212:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"id": 1041,
														"name": "ENTERED",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 986,
														"src": "3223:7:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3212:18:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1039,
												"id": 1043,
												"nodeType": "Return",
												"src": "3205:25:8"
											}
										]
									},
									"documentation": {
										"id": 1035,
										"nodeType": "StructuredDocumentation",
										"src": "2958:168:8",
										"text": " @dev Returns true if the reentrancy guard is currently set to \"entered\", which indicates there is a\n `nonReentrant` function in the call stack."
									},
									"id": 1045,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_reentrancyGuardEntered",
									"nameLocation": "3140:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3163:2:8"
									},
									"returnParameters": {
										"id": 1039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1038,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1045,
												"src": "3189:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1037,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3189:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3188:6:8"
									},
									"scope": 1046,
									"src": "3131:106:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1047,
							"src": "886:2353:8",
							"usedErrors": [
								991
							],
							"usedEvents": []
						}
					],
					"src": "109:3131:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts@5.0.2/utils/math/Math.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							2100
						]
					},
					"id": 2101,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1048,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "103:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Math",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1049,
								"nodeType": "StructuredDocumentation",
								"src": "129:73:9",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 2100,
							"linearizedBaseContracts": [
								2100
							],
							"name": "Math",
							"nameLocation": "211:4:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "222:50:9",
										"text": " @dev Muldiv operation overflow."
									},
									"errorSelector": "227bc153",
									"id": 1052,
									"name": "MathOverflowedMulDiv",
									"nameLocation": "283:20:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1051,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "303:2:9"
									},
									"src": "277:29:9"
								},
								{
									"canonicalName": "Math.Rounding",
									"id": 1057,
									"members": [
										{
											"id": 1053,
											"name": "Floor",
											"nameLocation": "336:5:9",
											"nodeType": "EnumValue",
											"src": "336:5:9"
										},
										{
											"id": 1054,
											"name": "Ceil",
											"nameLocation": "379:4:9",
											"nodeType": "EnumValue",
											"src": "379:4:9"
										},
										{
											"id": 1055,
											"name": "Trunc",
											"nameLocation": "421:5:9",
											"nodeType": "EnumValue",
											"src": "421:5:9"
										},
										{
											"id": 1056,
											"name": "Expand",
											"nameLocation": "451:6:9",
											"nodeType": "EnumValue",
											"src": "451:6:9"
										}
									],
									"name": "Rounding",
									"nameLocation": "317:8:9",
									"nodeType": "EnumDefinition",
									"src": "312:169:9"
								},
								{
									"body": {
										"id": 1088,
										"nodeType": "Block",
										"src": "661:140:9",
										"statements": [
											{
												"id": 1087,
												"nodeType": "UncheckedBlock",
												"src": "671:124:9",
												"statements": [
													{
														"assignments": [
															1070
														],
														"declarations": [
															{
																"constant": false,
																"id": 1070,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "703:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1087,
																"src": "695:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1069,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "695:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1074,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1073,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1071,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "707:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"id": 1072,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1062,
																"src": "711:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "707:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "695:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1077,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1075,
																"name": "c",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1070,
																"src": "730:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"id": 1076,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1060,
																"src": "734:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "730:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1082,
														"nodeType": "IfStatement",
														"src": "726:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1078,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "745:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1079,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "752:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1080,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "744:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1068,
															"id": 1081,
															"nodeType": "Return",
															"src": "737:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1083,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "776:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1084,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "782:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1085,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "775:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1068,
														"id": 1086,
														"nodeType": "Return",
														"src": "768:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1058,
										"nodeType": "StructuredDocumentation",
										"src": "487:93:9",
										"text": " @dev Returns the addition of two unsigned integers, with an overflow flag."
									},
									"id": 1089,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryAdd",
									"nameLocation": "594:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1063,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1059,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1062,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "620:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "612:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1061,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "612:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "600:22:9"
									},
									"returnParameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1065,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "646:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1064,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "646:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1089,
												"src": "652:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "652:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "645:15:9"
									},
									"scope": 2100,
									"src": "585:216:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1116,
										"nodeType": "Block",
										"src": "984:113:9",
										"statements": [
											{
												"id": 1115,
												"nodeType": "UncheckedBlock",
												"src": "994:97:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1103,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1101,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1094,
																"src": "1022:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"id": 1102,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1092,
																"src": "1026:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1022:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1108,
														"nodeType": "IfStatement",
														"src": "1018:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1104,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1037:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1105,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1044:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1106,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1036:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1100,
															"id": 1107,
															"nodeType": "Return",
															"src": "1029:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1109,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1068:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1112,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1110,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1092,
																		"src": "1074:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "-",
																	"rightExpression": {
																		"id": 1111,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1094,
																		"src": "1078:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1074:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1113,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1067:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1100,
														"id": 1114,
														"nodeType": "Return",
														"src": "1060:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1090,
										"nodeType": "StructuredDocumentation",
										"src": "807:96:9",
										"text": " @dev Returns the subtraction of two unsigned integers, with an overflow flag."
									},
									"id": 1117,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "trySub",
									"nameLocation": "917:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1095,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1092,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "932:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "924:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1091,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "924:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1094,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "943:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "935:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1093,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "935:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "923:22:9"
									},
									"returnParameters": {
										"id": 1100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1097,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "969:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1096,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1099,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1117,
												"src": "975:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1098,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "975:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "968:15:9"
									},
									"scope": 2100,
									"src": "908:189:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1158,
										"nodeType": "Block",
										"src": "1283:417:9",
										"statements": [
											{
												"id": 1157,
												"nodeType": "UncheckedBlock",
												"src": "1293:401:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1131,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1129,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "1551:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1130,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1556:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1551:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1136,
														"nodeType": "IfStatement",
														"src": "1547:28:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "74727565",
																		"id": 1132,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1567:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "true"
																	},
																	{
																		"hexValue": "30",
																		"id": 1133,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1573:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1134,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1566:9:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1128,
															"id": 1135,
															"nodeType": "Return",
															"src": "1559:16:9"
														}
													},
													{
														"assignments": [
															1138
														],
														"declarations": [
															{
																"constant": false,
																"id": 1138,
																"mutability": "mutable",
																"name": "c",
																"nameLocation": "1597:1:9",
																"nodeType": "VariableDeclaration",
																"scope": 1157,
																"src": "1589:9:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1137,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "1589:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1142,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1141,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1139,
																"name": "a",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1120,
																"src": "1601:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1140,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "1605:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1601:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "1589:17:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1147,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1143,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "1624:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1144,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1120,
																	"src": "1628:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1624:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"id": 1146,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1122,
																"src": "1633:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "1624:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1152,
														"nodeType": "IfStatement",
														"src": "1620:33:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1148,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1644:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1149,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1150,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1643:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1128,
															"id": 1151,
															"nodeType": "Return",
															"src": "1636:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1153,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1675:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"id": 1154,
																	"name": "c",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1138,
																	"src": "1681:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1155,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1674:9:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1128,
														"id": 1156,
														"nodeType": "Return",
														"src": "1667:16:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1118,
										"nodeType": "StructuredDocumentation",
										"src": "1103:99:9",
										"text": " @dev Returns the multiplication of two unsigned integers, with an overflow flag."
									},
									"id": 1159,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMul",
									"nameLocation": "1216:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1123,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1231:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1223:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1223:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1122,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1242:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1234:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1222:22:9"
									},
									"returnParameters": {
										"id": 1128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1125,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1268:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1124,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "1274:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1126,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1274:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:15:9"
									},
									"scope": 2100,
									"src": "1207:493:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1186,
										"nodeType": "Block",
										"src": "1887:114:9",
										"statements": [
											{
												"id": 1185,
												"nodeType": "UncheckedBlock",
												"src": "1897:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1173,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1171,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1164,
																"src": "1925:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1172,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "1930:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "1925:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1178,
														"nodeType": "IfStatement",
														"src": "1921:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1174,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1941:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1948:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1176,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "1940:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1170,
															"id": 1177,
															"nodeType": "Return",
															"src": "1933:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1179,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1972:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1182,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1180,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1162,
																		"src": "1978:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1181,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1164,
																		"src": "1982:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "1978:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1183,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "1971:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1170,
														"id": 1184,
														"nodeType": "Return",
														"src": "1964:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "1706:100:9",
										"text": " @dev Returns the division of two unsigned integers, with a division by zero flag."
									},
									"id": 1187,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryDiv",
									"nameLocation": "1820:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1835:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1827:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1161,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1827:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1164,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1846:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1838:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1163,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1838:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1826:22:9"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1167,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1872:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1166,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1872:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1169,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1878:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1168,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1878:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1871:15:9"
									},
									"scope": 2100,
									"src": "1811:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1214,
										"nodeType": "Block",
										"src": "2198:114:9",
										"statements": [
											{
												"id": 1213,
												"nodeType": "UncheckedBlock",
												"src": "2208:98:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1201,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1199,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1192,
																"src": "2236:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1200,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2241:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2236:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1206,
														"nodeType": "IfStatement",
														"src": "2232:29:9",
														"trueBody": {
															"expression": {
																"components": [
																	{
																		"hexValue": "66616c7365",
																		"id": 1202,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "bool",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2252:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"value": "false"
																	},
																	{
																		"hexValue": "30",
																		"id": 1203,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2259:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"id": 1204,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "2251:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$_t_bool_$_t_rational_0_by_1_$",
																	"typeString": "tuple(bool,int_const 0)"
																}
															},
															"functionReturnParameters": 1198,
															"id": 1205,
															"nodeType": "Return",
															"src": "2244:17:9"
														}
													},
													{
														"expression": {
															"components": [
																{
																	"hexValue": "74727565",
																	"id": 1207,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "2283:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1210,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1208,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1190,
																		"src": "2289:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "%",
																	"rightExpression": {
																		"id": 1209,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1192,
																		"src": "2293:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2289:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1211,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2282:13:9",
															"typeDescriptions": {
																"typeIdentifier": "t_tuple$_t_bool_$_t_uint256_$",
																"typeString": "tuple(bool,uint256)"
															}
														},
														"functionReturnParameters": 1198,
														"id": 1212,
														"nodeType": "Return",
														"src": "2275:20:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "2007:110:9",
										"text": " @dev Returns the remainder of dividing two unsigned integers, with a division by zero flag."
									},
									"id": 1215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "tryMod",
									"nameLocation": "2131:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1193,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2146:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2138:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2138:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2157:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2149:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1191,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2149:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2137:22:9"
									},
									"returnParameters": {
										"id": 1198,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1195,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2183:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1194,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2183:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1197,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "2189:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1196,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2189:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2182:15:9"
									},
									"scope": 2100,
									"src": "2122:190:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1232,
										"nodeType": "Block",
										"src": "2449:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1227,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1225,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1218,
															"src": "2466:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"id": 1226,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1220,
															"src": "2470:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2466:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1229,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1220,
														"src": "2478:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1230,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2466:13:9",
													"trueExpression": {
														"id": 1228,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1218,
														"src": "2474:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1224,
												"id": 1231,
												"nodeType": "Return",
												"src": "2459:20:9"
											}
										]
									},
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "2318:59:9",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 1233,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "2391:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2403:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "2395:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1217,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2395:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2414:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "2406:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2406:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2394:22:9"
									},
									"returnParameters": {
										"id": 1224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1233,
												"src": "2440:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1222,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2440:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2439:9:9"
									},
									"scope": 2100,
									"src": "2382:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1250,
										"nodeType": "Block",
										"src": "2624:37:9",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1245,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1243,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1236,
															"src": "2641:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 1244,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1238,
															"src": "2645:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "2641:5:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 1247,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1238,
														"src": "2653:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "2641:13:9",
													"trueExpression": {
														"id": 1246,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1236,
														"src": "2649:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1242,
												"id": 1249,
												"nodeType": "Return",
												"src": "2634:20:9"
											}
										]
									},
									"documentation": {
										"id": 1234,
										"nodeType": "StructuredDocumentation",
										"src": "2492:60:9",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 1251,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "2566:3:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2578:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "2570:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2570:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1238,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2589:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "2581:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2581:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2569:22:9"
									},
									"returnParameters": {
										"id": 1242,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1241,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1251,
												"src": "2615:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1240,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2615:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2614:9:9"
									},
									"scope": 2100,
									"src": "2557:104:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1273,
										"nodeType": "Block",
										"src": "2845:82:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1271,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1263,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1261,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1254,
																	"src": "2900:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 1262,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1256,
																	"src": "2904:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2900:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1264,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "2899:7:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1267,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1265,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1254,
																		"src": "2910:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 1266,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1256,
																		"src": "2914:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "2910:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 1268,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "2909:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 1269,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2919:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "2909:11:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2899:21:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1260,
												"id": 1272,
												"nodeType": "Return",
												"src": "2892:28:9"
											}
										]
									},
									"documentation": {
										"id": 1252,
										"nodeType": "StructuredDocumentation",
										"src": "2667:102:9",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 1274,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "2783:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1257,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1254,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "2799:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2791:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1253,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2791:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1256,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "2810:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2802:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1255,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2802:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2790:22:9"
									},
									"returnParameters": {
										"id": 1260,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1259,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1274,
												"src": "2836:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1258,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2836:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2835:9:9"
									},
									"scope": 2100,
									"src": "2774:153:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1307,
										"nodeType": "Block",
										"src": "3219:260:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1286,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1284,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1279,
														"src": "3233:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1285,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3238:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3233:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1292,
												"nodeType": "IfStatement",
												"src": "3229:127:9",
												"trueBody": {
													"id": 1291,
													"nodeType": "Block",
													"src": "3241:115:9",
													"statements": [
														{
															"expression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1289,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1287,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1277,
																	"src": "3340:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"id": 1288,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "3344:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3340:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"functionReturnParameters": 1283,
															"id": 1290,
															"nodeType": "Return",
															"src": "3333:12:9"
														}
													]
												}
											},
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1295,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 1293,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1277,
															"src": "3444:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 1294,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3449:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "3444:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1299,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1297,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1277,
																			"src": "3458:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"hexValue": "31",
																			"id": 1298,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "3462:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "3458:5:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1300,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "3457:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "/",
															"rightExpression": {
																"id": 1301,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "3467:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "3457:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "+",
														"rightExpression": {
															"hexValue": "31",
															"id": 1303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3471:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "3457:15:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "3444:28:9",
													"trueExpression": {
														"hexValue": "30",
														"id": 1296,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3453:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1283,
												"id": 1306,
												"nodeType": "Return",
												"src": "3437:35:9"
											}
										]
									},
									"documentation": {
										"id": 1275,
										"nodeType": "StructuredDocumentation",
										"src": "2933:210:9",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds towards infinity instead\n of rounding towards zero."
									},
									"id": 1308,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "3157:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1277,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "3173:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3165:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3165:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1279,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "3184:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3176:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1278,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3176:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3164:22:9"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1308,
												"src": "3210:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3210:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3209:9:9"
									},
									"scope": 2100,
									"src": "3148:331:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1433,
										"nodeType": "Block",
										"src": "3901:4018:9",
										"statements": [
											{
												"id": 1432,
												"nodeType": "UncheckedBlock",
												"src": "3911:4002:9",
												"statements": [
													{
														"assignments": [
															1321
														],
														"declarations": [
															{
																"constant": false,
																"id": 1321,
																"mutability": "mutable",
																"name": "prod0",
																"nameLocation": "4240:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1432,
																"src": "4232:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1320,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4232:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1325,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1324,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1322,
																"name": "x",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1311,
																"src": "4248:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "*",
															"rightExpression": {
																"id": 1323,
																"name": "y",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1313,
																"src": "4252:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4248:5:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "4232:21:9"
													},
													{
														"assignments": [
															1327
														],
														"declarations": [
															{
																"constant": false,
																"id": 1327,
																"mutability": "mutable",
																"name": "prod1",
																"nameLocation": "4320:5:9",
																"nodeType": "VariableDeclaration",
																"scope": 1432,
																"src": "4312:13:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1326,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "4312:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1328,
														"nodeType": "VariableDeclarationStatement",
														"src": "4312:13:9"
													},
													{
														"AST": {
															"nativeSrc": "4392:122:9",
															"nodeType": "YulBlock",
															"src": "4392:122:9",
															"statements": [
																{
																	"nativeSrc": "4410:30:9",
																	"nodeType": "YulVariableDeclaration",
																	"src": "4410:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "4427:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "4427:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "4430:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "4430:1:9"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4437:1:9",
																						"nodeType": "YulLiteral",
																						"src": "4437:1:9",
																						"type": "",
																						"value": "0"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4433:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4433:3:9"
																				},
																				"nativeSrc": "4433:6:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4433:6:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "4420:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "4420:6:9"
																		},
																		"nativeSrc": "4420:20:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4420:20:9"
																	},
																	"variables": [
																		{
																			"name": "mm",
																			"nativeSrc": "4414:2:9",
																			"nodeType": "YulTypedName",
																			"src": "4414:2:9",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "4457:43:9",
																	"nodeType": "YulAssignment",
																	"src": "4457:43:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4474:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4474:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4478:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4478:5:9"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4470:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "4470:3:9"
																				},
																				"nativeSrc": "4470:14:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4470:14:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "mm",
																						"nativeSrc": "4489:2:9",
																						"nodeType": "YulIdentifier",
																						"src": "4489:2:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "4493:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "4493:5:9"
																					}
																				],
																				"functionName": {
																					"name": "lt",
																					"nativeSrc": "4486:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "4486:2:9"
																				},
																				"nativeSrc": "4486:13:9",
																				"nodeType": "YulFunctionCall",
																				"src": "4486:13:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4466:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "4466:3:9"
																		},
																		"nativeSrc": "4466:34:9",
																		"nodeType": "YulFunctionCall",
																		"src": "4466:34:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "4457:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "4457:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1321,
																"isOffset": false,
																"isSlot": false,
																"src": "4478:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1321,
																"isOffset": false,
																"isSlot": false,
																"src": "4493:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1327,
																"isOffset": false,
																"isSlot": false,
																"src": "4457:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1311,
																"isOffset": false,
																"isSlot": false,
																"src": "4427:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1313,
																"isOffset": false,
																"isSlot": false,
																"src": "4430:1:9",
																"valueSize": 1
															}
														],
														"id": 1329,
														"nodeType": "InlineAssembly",
														"src": "4383:131:9"
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1332,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1330,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "4595:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 1331,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4604:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4595:10:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1338,
														"nodeType": "IfStatement",
														"src": "4591:368:9",
														"trueBody": {
															"id": 1337,
															"nodeType": "Block",
															"src": "4607:352:9",
															"statements": [
																{
																	"expression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 1333,
																			"name": "prod0",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1321,
																			"src": "4925:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "/",
																		"rightExpression": {
																			"id": 1334,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "4933:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "4925:19:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"functionReturnParameters": 1319,
																	"id": 1336,
																	"nodeType": "Return",
																	"src": "4918:26:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1339,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "5065:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<=",
															"rightExpression": {
																"id": 1340,
																"name": "prod1",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1327,
																"src": "5080:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5065:20:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1346,
														"nodeType": "IfStatement",
														"src": "5061:88:9",
														"trueBody": {
															"id": 1345,
															"nodeType": "Block",
															"src": "5087:62:9",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 1342,
																			"name": "MathOverflowedMulDiv",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1052,
																			"src": "5112:20:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																				"typeString": "function () pure returns (error)"
																			}
																		},
																		"id": 1343,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "5112:22:9",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 1344,
																	"nodeType": "RevertStatement",
																	"src": "5105:29:9"
																}
															]
														}
													},
													{
														"assignments": [
															1348
														],
														"declarations": [
															{
																"constant": false,
																"id": 1348,
																"mutability": "mutable",
																"name": "remainder",
																"nameLocation": "5412:9:9",
																"nodeType": "VariableDeclaration",
																"scope": 1432,
																"src": "5404:17:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1347,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5404:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1349,
														"nodeType": "VariableDeclarationStatement",
														"src": "5404:17:9"
													},
													{
														"AST": {
															"nativeSrc": "5444:291:9",
															"nodeType": "YulBlock",
															"src": "5444:291:9",
															"statements": [
																{
																	"nativeSrc": "5513:38:9",
																	"nodeType": "YulAssignment",
																	"src": "5513:38:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "x",
																				"nativeSrc": "5533:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "5533:1:9"
																			},
																			{
																				"name": "y",
																				"nativeSrc": "5536:1:9",
																				"nodeType": "YulIdentifier",
																				"src": "5536:1:9"
																			},
																			{
																				"name": "denominator",
																				"nativeSrc": "5539:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "5539:11:9"
																			}
																		],
																		"functionName": {
																			"name": "mulmod",
																			"nativeSrc": "5526:6:9",
																			"nodeType": "YulIdentifier",
																			"src": "5526:6:9"
																		},
																		"nativeSrc": "5526:25:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5526:25:9"
																	},
																	"variableNames": [
																		{
																			"name": "remainder",
																			"nativeSrc": "5513:9:9",
																			"nodeType": "YulIdentifier",
																			"src": "5513:9:9"
																		}
																	]
																},
																{
																	"nativeSrc": "5633:41:9",
																	"nodeType": "YulAssignment",
																	"src": "5633:41:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod1",
																				"nativeSrc": "5646:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5646:5:9"
																			},
																			{
																				"arguments": [
																					{
																						"name": "remainder",
																						"nativeSrc": "5656:9:9",
																						"nodeType": "YulIdentifier",
																						"src": "5656:9:9"
																					},
																					{
																						"name": "prod0",
																						"nativeSrc": "5667:5:9",
																						"nodeType": "YulIdentifier",
																						"src": "5667:5:9"
																					}
																				],
																				"functionName": {
																					"name": "gt",
																					"nativeSrc": "5653:2:9",
																					"nodeType": "YulIdentifier",
																					"src": "5653:2:9"
																				},
																				"nativeSrc": "5653:20:9",
																				"nodeType": "YulFunctionCall",
																				"src": "5653:20:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5642:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5642:3:9"
																		},
																		"nativeSrc": "5642:32:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5642:32:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod1",
																			"nativeSrc": "5633:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5633:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "5691:30:9",
																	"nodeType": "YulAssignment",
																	"src": "5691:30:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "5704:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "5704:5:9"
																			},
																			{
																				"name": "remainder",
																				"nativeSrc": "5711:9:9",
																				"nodeType": "YulIdentifier",
																				"src": "5711:9:9"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5700:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "5700:3:9"
																		},
																		"nativeSrc": "5700:21:9",
																		"nodeType": "YulFunctionCall",
																		"src": "5700:21:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "5691:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "5691:5:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "5539:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1321,
																"isOffset": false,
																"isSlot": false,
																"src": "5667:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1321,
																"isOffset": false,
																"isSlot": false,
																"src": "5691:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1321,
																"isOffset": false,
																"isSlot": false,
																"src": "5704:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1327,
																"isOffset": false,
																"isSlot": false,
																"src": "5633:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1327,
																"isOffset": false,
																"isSlot": false,
																"src": "5646:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1348,
																"isOffset": false,
																"isSlot": false,
																"src": "5513:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1348,
																"isOffset": false,
																"isSlot": false,
																"src": "5656:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1348,
																"isOffset": false,
																"isSlot": false,
																"src": "5711:9:9",
																"valueSize": 1
															},
															{
																"declaration": 1311,
																"isOffset": false,
																"isSlot": false,
																"src": "5533:1:9",
																"valueSize": 1
															},
															{
																"declaration": 1313,
																"isOffset": false,
																"isSlot": false,
																"src": "5536:1:9",
																"valueSize": 1
															}
														],
														"id": 1350,
														"nodeType": "InlineAssembly",
														"src": "5435:300:9"
													},
													{
														"assignments": [
															1352
														],
														"declarations": [
															{
																"constant": false,
																"id": 1352,
																"mutability": "mutable",
																"name": "twos",
																"nameLocation": "5947:4:9",
																"nodeType": "VariableDeclaration",
																"scope": 1432,
																"src": "5939:12:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1351,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "5939:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1359,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1358,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1353,
																"name": "denominator",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1315,
																"src": "5954:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&",
															"rightExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1356,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "30",
																			"id": 1354,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "5969:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "-",
																		"rightExpression": {
																			"id": 1355,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "5973:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "5969:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1357,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "5968:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5954:31:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "5939:46:9"
													},
													{
														"AST": {
															"nativeSrc": "6008:362:9",
															"nodeType": "YulBlock",
															"src": "6008:362:9",
															"statements": [
																{
																	"nativeSrc": "6073:37:9",
																	"nodeType": "YulAssignment",
																	"src": "6073:37:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "denominator",
																				"nativeSrc": "6092:11:9",
																				"nodeType": "YulIdentifier",
																				"src": "6092:11:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6105:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6105:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6088:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6088:3:9"
																		},
																		"nativeSrc": "6088:22:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6088:22:9"
																	},
																	"variableNames": [
																		{
																			"name": "denominator",
																			"nativeSrc": "6073:11:9",
																			"nodeType": "YulIdentifier",
																			"src": "6073:11:9"
																		}
																	]
																},
																{
																	"nativeSrc": "6177:25:9",
																	"nodeType": "YulAssignment",
																	"src": "6177:25:9",
																	"value": {
																		"arguments": [
																			{
																				"name": "prod0",
																				"nativeSrc": "6190:5:9",
																				"nodeType": "YulIdentifier",
																				"src": "6190:5:9"
																			},
																			{
																				"name": "twos",
																				"nativeSrc": "6197:4:9",
																				"nodeType": "YulIdentifier",
																				"src": "6197:4:9"
																			}
																		],
																		"functionName": {
																			"name": "div",
																			"nativeSrc": "6186:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6186:3:9"
																		},
																		"nativeSrc": "6186:16:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6186:16:9"
																	},
																	"variableNames": [
																		{
																			"name": "prod0",
																			"nativeSrc": "6177:5:9",
																			"nodeType": "YulIdentifier",
																			"src": "6177:5:9"
																		}
																	]
																},
																{
																	"nativeSrc": "6317:39:9",
																	"nodeType": "YulAssignment",
																	"src": "6317:39:9",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6337:1:9",
																								"nodeType": "YulLiteral",
																								"src": "6337:1:9",
																								"type": "",
																								"value": "0"
																							},
																							{
																								"name": "twos",
																								"nativeSrc": "6340:4:9",
																								"nodeType": "YulIdentifier",
																								"src": "6340:4:9"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "6333:3:9",
																							"nodeType": "YulIdentifier",
																							"src": "6333:3:9"
																						},
																						"nativeSrc": "6333:12:9",
																						"nodeType": "YulFunctionCall",
																						"src": "6333:12:9"
																					},
																					{
																						"name": "twos",
																						"nativeSrc": "6347:4:9",
																						"nodeType": "YulIdentifier",
																						"src": "6347:4:9"
																					}
																				],
																				"functionName": {
																					"name": "div",
																					"nativeSrc": "6329:3:9",
																					"nodeType": "YulIdentifier",
																					"src": "6329:3:9"
																				},
																				"nativeSrc": "6329:23:9",
																				"nodeType": "YulFunctionCall",
																				"src": "6329:23:9"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6354:1:9",
																				"nodeType": "YulLiteral",
																				"src": "6354:1:9",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6325:3:9",
																			"nodeType": "YulIdentifier",
																			"src": "6325:3:9"
																		},
																		"nativeSrc": "6325:31:9",
																		"nodeType": "YulFunctionCall",
																		"src": "6325:31:9"
																	},
																	"variableNames": [
																		{
																			"name": "twos",
																			"nativeSrc": "6317:4:9",
																			"nodeType": "YulIdentifier",
																			"src": "6317:4:9"
																		}
																	]
																}
															]
														},
														"evmVersion": "prague",
														"externalReferences": [
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "6073:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1315,
																"isOffset": false,
																"isSlot": false,
																"src": "6092:11:9",
																"valueSize": 1
															},
															{
																"declaration": 1321,
																"isOffset": false,
																"isSlot": false,
																"src": "6177:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1321,
																"isOffset": false,
																"isSlot": false,
																"src": "6190:5:9",
																"valueSize": 1
															},
															{
																"declaration": 1352,
																"isOffset": false,
																"isSlot": false,
																"src": "6105:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1352,
																"isOffset": false,
																"isSlot": false,
																"src": "6197:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1352,
																"isOffset": false,
																"isSlot": false,
																"src": "6317:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1352,
																"isOffset": false,
																"isSlot": false,
																"src": "6340:4:9",
																"valueSize": 1
															},
															{
																"declaration": 1352,
																"isOffset": false,
																"isSlot": false,
																"src": "6347:4:9",
																"valueSize": 1
															}
														],
														"id": 1360,
														"nodeType": "InlineAssembly",
														"src": "5999:371:9"
													},
													{
														"expression": {
															"id": 1365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1361,
																"name": "prod0",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1321,
																"src": "6436:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "|=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1364,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1362,
																	"name": "prod1",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1327,
																	"src": "6445:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1363,
																	"name": "twos",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1352,
																	"src": "6453:4:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6445:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6436:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1366,
														"nodeType": "ExpressionStatement",
														"src": "6436:21:9"
													},
													{
														"assignments": [
															1368
														],
														"declarations": [
															{
																"constant": false,
																"id": 1368,
																"mutability": "mutable",
																"name": "inverse",
																"nameLocation": "6783:7:9",
																"nodeType": "VariableDeclaration",
																"scope": 1432,
																"src": "6775:15:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1367,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "6775:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1375,
														"initialValue": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1374,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"components": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 1371,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"hexValue": "33",
																			"id": 1369,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "6794:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_3_by_1",
																				"typeString": "int_const 3"
																			},
																			"value": "3"
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "*",
																		"rightExpression": {
																			"id": 1370,
																			"name": "denominator",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1315,
																			"src": "6798:11:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "6794:15:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"id": 1372,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "6793:17:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "^",
															"rightExpression": {
																"hexValue": "32",
																"id": 1373,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6813:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															"src": "6793:21:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "6775:39:9"
													},
													{
														"expression": {
															"id": 1382,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1376,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "7031:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1381,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1377,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7042:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1380,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1378,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "7046:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1379,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "7060:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7046:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7042:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7031:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1383,
														"nodeType": "ExpressionStatement",
														"src": "7031:36:9"
													},
													{
														"expression": {
															"id": 1390,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1384,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "7100:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1389,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1385,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7111:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1388,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1386,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "7115:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1387,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "7129:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7115:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7111:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7100:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1391,
														"nodeType": "ExpressionStatement",
														"src": "7100:36:9"
													},
													{
														"expression": {
															"id": 1398,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1392,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "7170:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1393,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7181:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1396,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1394,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "7185:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1395,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "7199:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7185:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7181:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7170:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1399,
														"nodeType": "ExpressionStatement",
														"src": "7170:36:9"
													},
													{
														"expression": {
															"id": 1406,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1400,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "7240:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1405,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1401,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7251:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1404,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1402,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "7255:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1403,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "7269:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7255:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7251:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7240:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1407,
														"nodeType": "ExpressionStatement",
														"src": "7240:36:9"
													},
													{
														"expression": {
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1408,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "7310:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1413,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1409,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7321:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1412,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1410,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "7325:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1411,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "7339:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7325:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7321:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7310:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1415,
														"nodeType": "ExpressionStatement",
														"src": "7310:36:9"
													},
													{
														"expression": {
															"id": 1422,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1416,
																"name": "inverse",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1368,
																"src": "7381:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "*=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1421,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "32",
																	"id": 1417,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7392:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1420,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1418,
																		"name": "denominator",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1315,
																		"src": "7396:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 1419,
																		"name": "inverse",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1368,
																		"src": "7410:7:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "7396:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7392:25:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7381:36:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1423,
														"nodeType": "ExpressionStatement",
														"src": "7381:36:9"
													},
													{
														"expression": {
															"id": 1428,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1424,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1318,
																"src": "7851:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1427,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1425,
																	"name": "prod0",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1321,
																	"src": "7860:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 1426,
																	"name": "inverse",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1368,
																	"src": "7868:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7860:15:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7851:24:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1429,
														"nodeType": "ExpressionStatement",
														"src": "7851:24:9"
													},
													{
														"expression": {
															"id": 1430,
															"name": "result",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1318,
															"src": "7896:6:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1319,
														"id": 1431,
														"nodeType": "Return",
														"src": "7889:13:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1309,
										"nodeType": "StructuredDocumentation",
										"src": "3485:313:9",
										"text": " @notice Calculates floor(x * y / denominator) with full precision. Throws if result overflows a uint256 or\n denominator == 0.\n @dev Original credit to Remco Bloemen under MIT license (https://xn--2-umb.com/21/muldiv) with further edits by\n Uniswap Labs also under MIT license."
									},
									"id": 1434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "3812:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "3827:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3819:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1310,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3819:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1313,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "3838:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3830:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1312,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3830:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1315,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "3849:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3841:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3841:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3818:43:9"
									},
									"returnParameters": {
										"id": 1319,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1318,
												"mutability": "mutable",
												"name": "result",
												"nameLocation": "3893:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1434,
												"src": "3885:14:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1317,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3885:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3884:16:9"
									},
									"scope": 2100,
									"src": "3803:4116:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1476,
										"nodeType": "Block",
										"src": "8161:192:9",
										"statements": [
											{
												"assignments": [
													1450
												],
												"declarations": [
													{
														"constant": false,
														"id": 1450,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "8179:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1476,
														"src": "8171:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1449,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "8171:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1456,
												"initialValue": {
													"arguments": [
														{
															"id": 1452,
															"name": "x",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1437,
															"src": "8195:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1453,
															"name": "y",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1439,
															"src": "8198:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 1454,
															"name": "denominator",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1441,
															"src": "8201:11:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 1451,
														"name": "mulDiv",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															1434,
															1477
														],
														"referencedDeclaration": 1434,
														"src": "8188:6:9",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 1455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8188:25:9",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "8171:42:9"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 1467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 1458,
																"name": "rounding",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1444,
																"src": "8244:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_enum$_Rounding_$1057",
																	"typeString": "enum Math.Rounding"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_enum$_Rounding_$1057",
																	"typeString": "enum Math.Rounding"
																}
															],
															"id": 1457,
															"name": "unsignedRoundsUp",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2099,
															"src": "8227:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1057_$returns$_t_bool_$",
																"typeString": "function (enum Math.Rounding) pure returns (bool)"
															}
														},
														"id": 1459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8227:26:9",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 1466,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 1461,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1437,
																	"src": "8264:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1462,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1439,
																	"src": "8267:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 1463,
																	"name": "denominator",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1441,
																	"src": "8270:11:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1460,
																"name": "mulmod",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967280,
																"src": "8257:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_mulmod_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1464,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8257:25:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">",
														"rightExpression": {
															"hexValue": "30",
															"id": 1465,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8285:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "8257:29:9",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "8227:59:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1473,
												"nodeType": "IfStatement",
												"src": "8223:101:9",
												"trueBody": {
													"id": 1472,
													"nodeType": "Block",
													"src": "8288:36:9",
													"statements": [
														{
															"expression": {
																"id": 1470,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 1468,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1450,
																	"src": "8302:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"hexValue": "31",
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8312:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "8302:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 1471,
															"nodeType": "ExpressionStatement",
															"src": "8302:11:9"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1474,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1450,
													"src": "8340:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1448,
												"id": 1475,
												"nodeType": "Return",
												"src": "8333:13:9"
											}
										]
									},
									"documentation": {
										"id": 1435,
										"nodeType": "StructuredDocumentation",
										"src": "7925:121:9",
										"text": " @notice Calculates x * y / denominator with full precision, following the selected rounding direction."
									},
									"id": 1477,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "mulDiv",
									"nameLocation": "8060:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1437,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "8075:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "8067:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1436,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8067:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1439,
												"mutability": "mutable",
												"name": "y",
												"nameLocation": "8086:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "8078:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1438,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8078:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1441,
												"mutability": "mutable",
												"name": "denominator",
												"nameLocation": "8097:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "8089:19:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1440,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8089:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1444,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "8119:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "8110:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1057",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1443,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1442,
														"name": "Rounding",
														"nameLocations": [
															"8110:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1057,
														"src": "8110:8:9"
													},
													"referencedDeclaration": 1057,
													"src": "8110:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1057",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8066:62:9"
									},
									"returnParameters": {
										"id": 1448,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1447,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1477,
												"src": "8152:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1446,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8152:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8151:9:9"
									},
									"scope": 2100,
									"src": "8051:302:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1588,
										"nodeType": "Block",
										"src": "8644:1585:9",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1485,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1480,
														"src": "8658:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "8663:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "8658:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1491,
												"nodeType": "IfStatement",
												"src": "8654:45:9",
												"trueBody": {
													"id": 1490,
													"nodeType": "Block",
													"src": "8666:33:9",
													"statements": [
														{
															"expression": {
																"hexValue": "30",
																"id": 1488,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8687:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"functionReturnParameters": 1484,
															"id": 1489,
															"nodeType": "Return",
															"src": "8680:8:9"
														}
													]
												}
											},
											{
												"assignments": [
													1493
												],
												"declarations": [
													{
														"constant": false,
														"id": 1493,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "9386:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1588,
														"src": "9378:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1492,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "9378:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1502,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1501,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"hexValue": "31",
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "9395:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"nodeType": "BinaryOperation",
													"operator": "<<",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"arguments": [
																		{
																			"id": 1496,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1480,
																			"src": "9406:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		],
																		"id": 1495,
																		"name": "log2",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [
																			1756,
																			1791
																		],
																		"referencedDeclaration": 1756,
																		"src": "9401:4:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																			"typeString": "function (uint256) pure returns (uint256)"
																		}
																	},
																	"id": 1497,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "9401:7:9",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1498,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9412:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9401:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 1500,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "9400:14:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "9395:19:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "9378:36:9"
											},
											{
												"id": 1587,
												"nodeType": "UncheckedBlock",
												"src": "9815:408:9",
												"statements": [
													{
														"expression": {
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1503,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "9839:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1508,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1504,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "9849:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1507,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1505,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "9858:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1506,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1493,
																					"src": "9862:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9858:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9849:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1509,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9848:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1510,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9873:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9848:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9839:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1513,
														"nodeType": "ExpressionStatement",
														"src": "9839:35:9"
													},
													{
														"expression": {
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1514,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "9888:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1522,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1519,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1515,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "9898:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1518,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1516,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "9907:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1517,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1493,
																					"src": "9911:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9907:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9898:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1520,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9897:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1521,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9922:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9897:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9888:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1524,
														"nodeType": "ExpressionStatement",
														"src": "9888:35:9"
													},
													{
														"expression": {
															"id": 1534,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1525,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "9937:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1530,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1526,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "9947:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1529,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1527,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "9956:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1528,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1493,
																					"src": "9960:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "9956:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9947:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1531,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9946:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1532,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "9971:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9946:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9937:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1535,
														"nodeType": "ExpressionStatement",
														"src": "9937:35:9"
													},
													{
														"expression": {
															"id": 1545,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1536,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "9986:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1544,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1541,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1537,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "9996:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1540,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1538,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "10005:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1539,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1493,
																					"src": "10009:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10005:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "9996:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1542,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "9995:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10020:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "9995:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "9986:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1546,
														"nodeType": "ExpressionStatement",
														"src": "9986:35:9"
													},
													{
														"expression": {
															"id": 1556,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1547,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "10035:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1555,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1552,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1548,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "10045:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1551,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1549,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "10054:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1550,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1493,
																					"src": "10058:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10054:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10045:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1553,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10044:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1554,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10069:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10044:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10035:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1557,
														"nodeType": "ExpressionStatement",
														"src": "10035:35:9"
													},
													{
														"expression": {
															"id": 1567,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1558,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "10084:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1566,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1563,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1559,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "10094:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1562,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1560,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "10103:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1561,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1493,
																					"src": "10107:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10103:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10094:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1564,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10093:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1565,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10118:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10093:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10084:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1568,
														"nodeType": "ExpressionStatement",
														"src": "10084:35:9"
													},
													{
														"expression": {
															"id": 1578,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftHandSide": {
																"id": 1569,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1493,
																"src": "10133:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "Assignment",
															"operator": "=",
															"rightHandSide": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1577,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 1574,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"id": 1570,
																				"name": "result",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1493,
																				"src": "10143:6:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "+",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1573,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"id": 1571,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1480,
																					"src": "10152:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "/",
																				"rightExpression": {
																					"id": 1572,
																					"name": "result",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1493,
																					"src": "10156:6:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10152:10:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "10143:19:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 1575,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "10142:21:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1576,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10167:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "10142:26:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "10133:35:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"id": 1579,
														"nodeType": "ExpressionStatement",
														"src": "10133:35:9"
													},
													{
														"expression": {
															"arguments": [
																{
																	"id": 1581,
																	"name": "result",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1493,
																	"src": "10193:6:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1584,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 1582,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1480,
																		"src": "10201:1:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"id": 1583,
																		"name": "result",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1493,
																		"src": "10205:6:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "10201:10:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1580,
																"name": "min",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1251,
																"src": "10189:3:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256,uint256) pure returns (uint256)"
																}
															},
															"id": 1585,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10189:23:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1484,
														"id": 1586,
														"nodeType": "Return",
														"src": "10182:30:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1478,
										"nodeType": "StructuredDocumentation",
										"src": "8359:223:9",
										"text": " @dev Returns the square root of a number. If the number is not a perfect square, the value is rounded\n towards zero.\n Inspired by Henry S. Warren, Jr.'s \"Hacker's Delight\" (Chapter 11)."
									},
									"id": 1589,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "8596:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1480,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "8609:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "8601:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1479,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8601:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8600:11:9"
									},
									"returnParameters": {
										"id": 1484,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1483,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1589,
												"src": "8635:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1482,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8635:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8634:9:9"
									},
									"scope": 2100,
									"src": "8587:1642:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1623,
										"nodeType": "Block",
										"src": "10405:164:9",
										"statements": [
											{
												"id": 1622,
												"nodeType": "UncheckedBlock",
												"src": "10415:148:9",
												"statements": [
													{
														"assignments": [
															1601
														],
														"declarations": [
															{
																"constant": false,
																"id": 1601,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "10447:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1622,
																"src": "10439:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1600,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "10439:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1605,
														"initialValue": {
															"arguments": [
																{
																	"id": 1603,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1592,
																	"src": "10461:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1602,
																"name": "sqrt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1589,
																	1624
																],
																"referencedDeclaration": 1589,
																"src": "10456:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1604,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10456:7:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "10439:24:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1620,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1606,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1601,
																"src": "10484:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1615,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1608,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1595,
																						"src": "10511:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1057",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1057",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1607,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2099,
																					"src": "10494:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1057_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1609,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "10494:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1614,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1612,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 1610,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1601,
																						"src": "10524:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "*",
																					"rightExpression": {
																						"id": 1611,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1601,
																						"src": "10533:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "10524:15:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1613,
																					"name": "a",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1592,
																					"src": "10542:1:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "10524:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "10494:49:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1617,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10550:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1618,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "10494:57:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1616,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10546:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1619,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "10493:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "10484:68:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1599,
														"id": 1621,
														"nodeType": "Return",
														"src": "10477:75:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1590,
										"nodeType": "StructuredDocumentation",
										"src": "10235:89:9",
										"text": " @notice Calculates sqrt(a), following the selected rounding direction."
									},
									"id": 1624,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "10338:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1596,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1592,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "10351:1:9",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "10343:9:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1591,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10343:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1595,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "10363:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "10354:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1057",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1594,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1593,
														"name": "Rounding",
														"nameLocations": [
															"10354:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1057,
														"src": "10354:8:9"
													},
													"referencedDeclaration": 1057,
													"src": "10354:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1057",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10342:30:9"
									},
									"returnParameters": {
										"id": 1599,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1598,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1624,
												"src": "10396:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1597,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10396:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10395:9:9"
									},
									"scope": 2100,
									"src": "10329:240:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1755,
										"nodeType": "Block",
										"src": "10760:922:9",
										"statements": [
											{
												"assignments": [
													1633
												],
												"declarations": [
													{
														"constant": false,
														"id": 1633,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "10778:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1755,
														"src": "10770:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1632,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "10770:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1635,
												"initialValue": {
													"hexValue": "30",
													"id": 1634,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "10787:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "10770:18:9"
											},
											{
												"id": 1752,
												"nodeType": "UncheckedBlock",
												"src": "10798:855:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1640,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1636,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "10826:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10835:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "10826:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1639,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10841:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10826:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1650,
														"nodeType": "IfStatement",
														"src": "10822:99:9",
														"trueBody": {
															"id": 1649,
															"nodeType": "Block",
															"src": "10844:77:9",
															"statements": [
																{
																	"expression": {
																		"id": 1643,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1641,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "10862:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1642,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10872:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10862:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1644,
																	"nodeType": "ExpressionStatement",
																	"src": "10862:13:9"
																},
																{
																	"expression": {
																		"id": 1647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1645,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "10893:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1646,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10903:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "10893:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1648,
																	"nodeType": "ExpressionStatement",
																	"src": "10893:13:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1655,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1653,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1651,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "10938:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1652,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "10947:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "10938:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10952:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "10938:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1665,
														"nodeType": "IfStatement",
														"src": "10934:96:9",
														"trueBody": {
															"id": 1664,
															"nodeType": "Block",
															"src": "10955:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1656,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "10973:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1657,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "10983:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "10973:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1659,
																	"nodeType": "ExpressionStatement",
																	"src": "10973:12:9"
																},
																{
																	"expression": {
																		"id": 1662,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1660,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "11003:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1661,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11013:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "11003:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1663,
																	"nodeType": "ExpressionStatement",
																	"src": "11003:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1670,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1668,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1666,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "11047:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1667,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11056:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "11047:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1669,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11061:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11047:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1680,
														"nodeType": "IfStatement",
														"src": "11043:96:9",
														"trueBody": {
															"id": 1679,
															"nodeType": "Block",
															"src": "11064:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 1673,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1671,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11082:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1672,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11092:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11082:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1674,
																	"nodeType": "ExpressionStatement",
																	"src": "11082:12:9"
																},
																{
																	"expression": {
																		"id": 1677,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1675,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "11112:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1676,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11122:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "11112:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1678,
																	"nodeType": "ExpressionStatement",
																	"src": "11112:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1685,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1683,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1681,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "11156:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1682,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11165:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "11156:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1684,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11170:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11156:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1695,
														"nodeType": "IfStatement",
														"src": "11152:96:9",
														"trueBody": {
															"id": 1694,
															"nodeType": "Block",
															"src": "11173:75:9",
															"statements": [
																{
																	"expression": {
																		"id": 1688,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1686,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11191:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1687,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11201:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11191:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1689,
																	"nodeType": "ExpressionStatement",
																	"src": "11191:12:9"
																},
																{
																	"expression": {
																		"id": 1692,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1690,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "11221:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1691,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11231:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "11221:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1693,
																	"nodeType": "ExpressionStatement",
																	"src": "11221:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1700,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1698,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1696,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "11265:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1697,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11274:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "11265:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1699,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11278:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11265:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1710,
														"nodeType": "IfStatement",
														"src": "11261:93:9",
														"trueBody": {
															"id": 1709,
															"nodeType": "Block",
															"src": "11281:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 1703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1701,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11299:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1702,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11309:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11299:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1704,
																	"nodeType": "ExpressionStatement",
																	"src": "11299:11:9"
																},
																{
																	"expression": {
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1705,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "11328:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1706,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11338:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "11328:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1708,
																	"nodeType": "ExpressionStatement",
																	"src": "11328:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1711,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "11371:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1712,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11380:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "11371:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1714,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11384:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11371:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1725,
														"nodeType": "IfStatement",
														"src": "11367:93:9",
														"trueBody": {
															"id": 1724,
															"nodeType": "Block",
															"src": "11387:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 1718,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1716,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11405:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1717,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11415:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11405:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1719,
																	"nodeType": "ExpressionStatement",
																	"src": "11405:11:9"
																},
																{
																	"expression": {
																		"id": 1722,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1720,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "11434:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1721,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11444:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "11434:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1723,
																	"nodeType": "ExpressionStatement",
																	"src": "11434:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1730,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1728,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1726,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "11477:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1727,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11486:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "11477:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1729,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11490:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11477:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1740,
														"nodeType": "IfStatement",
														"src": "11473:93:9",
														"trueBody": {
															"id": 1739,
															"nodeType": "Block",
															"src": "11493:73:9",
															"statements": [
																{
																	"expression": {
																		"id": 1733,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1731,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1627,
																			"src": "11511:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1732,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11521:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11511:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1734,
																	"nodeType": "ExpressionStatement",
																	"src": "11511:11:9"
																},
																{
																	"expression": {
																		"id": 1737,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1735,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "11540:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1736,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11550:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "11540:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1738,
																	"nodeType": "ExpressionStatement",
																	"src": "11540:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1745,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1743,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1741,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1627,
																	"src": "11583:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1742,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11592:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "11583:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1744,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11596:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "11583:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1751,
														"nodeType": "IfStatement",
														"src": "11579:64:9",
														"trueBody": {
															"id": 1750,
															"nodeType": "Block",
															"src": "11599:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 1748,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1746,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1633,
																			"src": "11617:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1747,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "11627:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "11617:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1749,
																	"nodeType": "ExpressionStatement",
																	"src": "11617:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1753,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1633,
													"src": "11669:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1631,
												"id": 1754,
												"nodeType": "Return",
												"src": "11662:13:9"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "10575:119:9",
										"text": " @dev Return the log in base 2 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1756,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "10708:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1627,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10721:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "10713:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1626,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10713:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10712:15:9"
									},
									"returnParameters": {
										"id": 1631,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1630,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1756,
												"src": "10751:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1629,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10751:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10750:9:9"
									},
									"scope": 2100,
									"src": "10699:983:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1790,
										"nodeType": "Block",
										"src": "11915:168:9",
										"statements": [
											{
												"id": 1789,
												"nodeType": "UncheckedBlock",
												"src": "11925:152:9",
												"statements": [
													{
														"assignments": [
															1768
														],
														"declarations": [
															{
																"constant": false,
																"id": 1768,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "11957:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1789,
																"src": "11949:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1767,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "11949:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1772,
														"initialValue": {
															"arguments": [
																{
																	"id": 1770,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1759,
																	"src": "11971:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1769,
																"name": "log2",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1756,
																	1791
																],
																"referencedDeclaration": 1756,
																"src": "11966:4:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1771,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11966:11:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "11949:28:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1773,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1768,
																"src": "11998:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1782,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1775,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1762,
																						"src": "12025:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1057",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1057",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1774,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2099,
																					"src": "12008:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1057_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1776,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "12008:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1781,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1779,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 1777,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "12038:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"id": 1778,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1768,
																						"src": "12043:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "12038:11:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1780,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1759,
																					"src": "12052:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "12038:19:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "12008:49:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1784,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12064:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1785,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "12008:57:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1783,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12060:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1786,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "12007:59:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "11998:68:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1766,
														"id": 1788,
														"nodeType": "Return",
														"src": "11991:75:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1757,
										"nodeType": "StructuredDocumentation",
										"src": "11688:142:9",
										"text": " @dev Return the log in base 2, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1791,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log2",
									"nameLocation": "11844:4:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1763,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1759,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11857:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "11849:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1758,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11849:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1762,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "11873:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "11864:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1057",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1761,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1760,
														"name": "Rounding",
														"nameLocations": [
															"11864:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1057,
														"src": "11864:8:9"
													},
													"referencedDeclaration": 1057,
													"src": "11864:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1057",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11848:34:9"
									},
									"returnParameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1791,
												"src": "11906:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1764,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11906:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11905:9:9"
									},
									"scope": 2100,
									"src": "11835:248:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1919,
										"nodeType": "Block",
										"src": "12276:854:9",
										"statements": [
											{
												"assignments": [
													1800
												],
												"declarations": [
													{
														"constant": false,
														"id": 1800,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "12294:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 1919,
														"src": "12286:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1799,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "12286:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1802,
												"initialValue": {
													"hexValue": "30",
													"id": 1801,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "12303:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12286:18:9"
											},
											{
												"id": 1916,
												"nodeType": "UncheckedBlock",
												"src": "12314:787:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1807,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1803,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1794,
																"src": "12342:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																},
																"id": 1806,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1804,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12351:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1805,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12357:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "12351:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(57 digits omitted)...0000"
																}
															},
															"src": "12342:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1819,
														"nodeType": "IfStatement",
														"src": "12338:103:9",
														"trueBody": {
															"id": 1818,
															"nodeType": "Block",
															"src": "12361:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 1812,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1808,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12379:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			},
																			"id": 1811,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1809,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12388:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3634",
																				"id": 1810,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12394:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_64_by_1",
																					"typeString": "int_const 64"
																				},
																				"value": "64"
																			},
																			"src": "12388:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000000000000000000000000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(57 digits omitted)...0000"
																			}
																		},
																		"src": "12379:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1813,
																	"nodeType": "ExpressionStatement",
																	"src": "12379:17:9"
																},
																{
																	"expression": {
																		"id": 1816,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1814,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1800,
																			"src": "12414:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1815,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12424:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "12414:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1817,
																	"nodeType": "ExpressionStatement",
																	"src": "12414:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1824,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1820,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1794,
																"src": "12458:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																},
																"id": 1823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1821,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12467:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1822,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12473:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "12467:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																	"typeString": "int_const 1000...(25 digits omitted)...0000"
																}
															},
															"src": "12458:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1836,
														"nodeType": "IfStatement",
														"src": "12454:103:9",
														"trueBody": {
															"id": 1835,
															"nodeType": "Block",
															"src": "12477:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 1829,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1825,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12495:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			},
																			"id": 1828,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1826,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12504:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3332",
																				"id": 1827,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12510:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_32_by_1",
																					"typeString": "int_const 32"
																				},
																				"value": "32"
																			},
																			"src": "12504:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000000000000000000000000000_by_1",
																				"typeString": "int_const 1000...(25 digits omitted)...0000"
																			}
																		},
																		"src": "12495:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1830,
																	"nodeType": "ExpressionStatement",
																	"src": "12495:17:9"
																},
																{
																	"expression": {
																		"id": 1833,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1831,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1800,
																			"src": "12530:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 1832,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12540:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "12530:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1834,
																	"nodeType": "ExpressionStatement",
																	"src": "12530:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1841,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1837,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1794,
																"src": "12574:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																},
																"id": 1840,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12583:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 1839,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12589:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "12583:8:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000000000000000_by_1",
																	"typeString": "int_const 10000000000000000"
																}
															},
															"src": "12574:17:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1853,
														"nodeType": "IfStatement",
														"src": "12570:103:9",
														"trueBody": {
															"id": 1852,
															"nodeType": "Block",
															"src": "12593:80:9",
															"statements": [
																{
																	"expression": {
																		"id": 1846,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1842,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12611:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			},
																			"id": 1845,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1843,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12620:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "3136",
																				"id": 1844,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12626:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_16_by_1",
																					"typeString": "int_const 16"
																				},
																				"value": "16"
																			},
																			"src": "12620:8:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000000000000000_by_1",
																				"typeString": "int_const 10000000000000000"
																			}
																		},
																		"src": "12611:17:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1847,
																	"nodeType": "ExpressionStatement",
																	"src": "12611:17:9"
																},
																{
																	"expression": {
																		"id": 1850,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1848,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1800,
																			"src": "12646:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1849,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12656:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "12646:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1851,
																	"nodeType": "ExpressionStatement",
																	"src": "12646:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1858,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1854,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1794,
																"src": "12690:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																},
																"id": 1857,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1855,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12699:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 1856,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12705:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "12699:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100000000_by_1",
																	"typeString": "int_const 100000000"
																}
															},
															"src": "12690:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1870,
														"nodeType": "IfStatement",
														"src": "12686:100:9",
														"trueBody": {
															"id": 1869,
															"nodeType": "Block",
															"src": "12708:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 1863,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1859,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12726:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			},
																			"id": 1862,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1860,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12735:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "38",
																				"id": 1861,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12741:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_8_by_1",
																					"typeString": "int_const 8"
																				},
																				"value": "8"
																			},
																			"src": "12735:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100000000_by_1",
																				"typeString": "int_const 100000000"
																			}
																		},
																		"src": "12726:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1864,
																	"nodeType": "ExpressionStatement",
																	"src": "12726:16:9"
																},
																{
																	"expression": {
																		"id": 1867,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1865,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1800,
																			"src": "12760:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1866,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12770:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "12760:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1868,
																	"nodeType": "ExpressionStatement",
																	"src": "12760:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1875,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1871,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1794,
																"src": "12803:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																},
																"id": 1874,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12812:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "34",
																	"id": 1873,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12818:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_4_by_1",
																		"typeString": "int_const 4"
																	},
																	"value": "4"
																},
																"src": "12812:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10000_by_1",
																	"typeString": "int_const 10000"
																}
															},
															"src": "12803:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1887,
														"nodeType": "IfStatement",
														"src": "12799:100:9",
														"trueBody": {
															"id": 1886,
															"nodeType": "Block",
															"src": "12821:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 1880,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1876,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12839:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			},
																			"id": 1879,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1877,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12848:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "34",
																				"id": 1878,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12854:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_4_by_1",
																					"typeString": "int_const 4"
																				},
																				"value": "4"
																			},
																			"src": "12848:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_10000_by_1",
																				"typeString": "int_const 10000"
																			}
																		},
																		"src": "12839:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1881,
																	"nodeType": "ExpressionStatement",
																	"src": "12839:16:9"
																},
																{
																	"expression": {
																		"id": 1884,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1882,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1800,
																			"src": "12873:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 1883,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12883:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "12873:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1885,
																	"nodeType": "ExpressionStatement",
																	"src": "12873:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1892,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1888,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1794,
																"src": "12916:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"id": 1891,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1889,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12925:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "32",
																	"id": 1890,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "12931:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_2_by_1",
																		"typeString": "int_const 2"
																	},
																	"value": "2"
																},
																"src": "12925:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																}
															},
															"src": "12916:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1904,
														"nodeType": "IfStatement",
														"src": "12912:100:9",
														"trueBody": {
															"id": 1903,
															"nodeType": "Block",
															"src": "12934:78:9",
															"statements": [
																{
																	"expression": {
																		"id": 1897,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1893,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1794,
																			"src": "12952:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "/=",
																		"rightHandSide": {
																			"commonType": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			},
																			"id": 1896,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"leftExpression": {
																				"hexValue": "3130",
																				"id": 1894,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12961:2:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_10_by_1",
																					"typeString": "int_const 10"
																				},
																				"value": "10"
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "**",
																			"rightExpression": {
																				"hexValue": "32",
																				"id": 1895,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "12967:1:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_2_by_1",
																					"typeString": "int_const 2"
																				},
																				"value": "2"
																			},
																			"src": "12961:7:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_100_by_1",
																				"typeString": "int_const 100"
																			}
																		},
																		"src": "12952:16:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1898,
																	"nodeType": "ExpressionStatement",
																	"src": "12952:16:9"
																},
																{
																	"expression": {
																		"id": 1901,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1899,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1800,
																			"src": "12986:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 1900,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "12996:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "12986:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1902,
																	"nodeType": "ExpressionStatement",
																	"src": "12986:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1909,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1905,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1794,
																"src": "13029:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"id": 1908,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "3130",
																	"id": 1906,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13038:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_10_by_1",
																		"typeString": "int_const 10"
																	},
																	"value": "10"
																},
																"nodeType": "BinaryOperation",
																"operator": "**",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 1907,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13044:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "13038:7:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																}
															},
															"src": "13029:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1915,
														"nodeType": "IfStatement",
														"src": "13025:66:9",
														"trueBody": {
															"id": 1914,
															"nodeType": "Block",
															"src": "13047:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 1912,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1910,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1800,
																			"src": "13065:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 1911,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13075:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "13065:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1913,
																	"nodeType": "ExpressionStatement",
																	"src": "13065:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 1917,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1800,
													"src": "13117:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1798,
												"id": 1918,
												"nodeType": "Return",
												"src": "13110:13:9"
											}
										]
									},
									"documentation": {
										"id": 1792,
										"nodeType": "StructuredDocumentation",
										"src": "12089:120:9",
										"text": " @dev Return the log in base 10 of a positive value rounded towards zero.\n Returns 0 if given 0."
									},
									"id": 1920,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "12223:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1795,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1794,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12237:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "12229:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1793,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12229:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12228:15:9"
									},
									"returnParameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1920,
												"src": "12267:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1796,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12267:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12266:9:9"
									},
									"scope": 2100,
									"src": "12214:916:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1954,
										"nodeType": "Block",
										"src": "13365:170:9",
										"statements": [
											{
												"id": 1953,
												"nodeType": "UncheckedBlock",
												"src": "13375:154:9",
												"statements": [
													{
														"assignments": [
															1932
														],
														"declarations": [
															{
																"constant": false,
																"id": 1932,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "13407:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 1953,
																"src": "13399:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 1931,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "13399:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 1936,
														"initialValue": {
															"arguments": [
																{
																	"id": 1934,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1923,
																	"src": "13422:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 1933,
																"name": "log10",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	1920,
																	1955
																],
																"referencedDeclaration": 1920,
																"src": "13416:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 1935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13416:12:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "13399:29:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1951,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 1937,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1932,
																"src": "13449:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 1946,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 1939,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1926,
																						"src": "13476:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1057",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1057",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 1938,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2099,
																					"src": "13459:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1057_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 1940,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "13459:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 1945,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 1943,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "3130",
																						"id": 1941,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "13489:2:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_10_by_1",
																							"typeString": "int_const 10"
																						},
																						"value": "10"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "**",
																					"rightExpression": {
																						"id": 1942,
																						"name": "result",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1932,
																						"src": "13495:6:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "13489:12:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 1944,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1923,
																					"src": "13504:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "13489:20:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "13459:50:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 1948,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13516:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 1949,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "13459:58:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 1947,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13512:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 1950,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "13458:60:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "13449:69:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 1930,
														"id": 1952,
														"nodeType": "Return",
														"src": "13442:76:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 1921,
										"nodeType": "StructuredDocumentation",
										"src": "13136:143:9",
										"text": " @dev Return the log in base 10, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 1955,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log10",
									"nameLocation": "13293:5:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1927,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13307:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "13299:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1922,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13299:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1926,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "13323:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "13314:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1057",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 1925,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1924,
														"name": "Rounding",
														"nameLocations": [
															"13314:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1057,
														"src": "13314:8:9"
													},
													"referencedDeclaration": 1057,
													"src": "13314:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1057",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13298:34:9"
									},
									"returnParameters": {
										"id": 1930,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1929,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1955,
												"src": "13356:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1928,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13356:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13355:9:9"
									},
									"scope": 2100,
									"src": "13284:251:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "13855:600:9",
										"statements": [
											{
												"assignments": [
													1964
												],
												"declarations": [
													{
														"constant": false,
														"id": 1964,
														"mutability": "mutable",
														"name": "result",
														"nameLocation": "13873:6:9",
														"nodeType": "VariableDeclaration",
														"scope": 2041,
														"src": "13865:14:9",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 1963,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13865:7:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1966,
												"initialValue": {
													"hexValue": "30",
													"id": 1965,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "13882:1:9",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13865:18:9"
											},
											{
												"id": 2038,
												"nodeType": "UncheckedBlock",
												"src": "13893:533:9",
												"statements": [
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1971,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1969,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1967,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1958,
																	"src": "13921:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "313238",
																	"id": 1968,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "13930:3:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_128_by_1",
																		"typeString": "int_const 128"
																	},
																	"value": "128"
																},
																"src": "13921:12:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1970,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "13936:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "13921:16:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1981,
														"nodeType": "IfStatement",
														"src": "13917:98:9",
														"trueBody": {
															"id": 1980,
															"nodeType": "Block",
															"src": "13939:76:9",
															"statements": [
																{
																	"expression": {
																		"id": 1974,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1972,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "13957:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "313238",
																			"id": 1973,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13967:3:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_128_by_1",
																				"typeString": "int_const 128"
																			},
																			"value": "128"
																		},
																		"src": "13957:13:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1975,
																	"nodeType": "ExpressionStatement",
																	"src": "13957:13:9"
																},
																{
																	"expression": {
																		"id": 1978,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1976,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1964,
																			"src": "13988:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 1977,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "13998:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "13988:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1979,
																	"nodeType": "ExpressionStatement",
																	"src": "13988:12:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 1986,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1984,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1982,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1958,
																	"src": "14032:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3634",
																	"id": 1983,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14041:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_64_by_1",
																		"typeString": "int_const 64"
																	},
																	"value": "64"
																},
																"src": "14032:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 1985,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14046:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14032:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 1996,
														"nodeType": "IfStatement",
														"src": "14028:95:9",
														"trueBody": {
															"id": 1995,
															"nodeType": "Block",
															"src": "14049:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 1989,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1987,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "14067:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3634",
																			"id": 1988,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14077:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_64_by_1",
																				"typeString": "int_const 64"
																			},
																			"value": "64"
																		},
																		"src": "14067:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1990,
																	"nodeType": "ExpressionStatement",
																	"src": "14067:12:9"
																},
																{
																	"expression": {
																		"id": 1993,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 1991,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1964,
																			"src": "14097:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "38",
																			"id": 1992,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14107:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_8_by_1",
																				"typeString": "int_const 8"
																			},
																			"value": "8"
																		},
																		"src": "14097:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 1994,
																	"nodeType": "ExpressionStatement",
																	"src": "14097:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2001,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 1999,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 1997,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1958,
																	"src": "14140:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3332",
																	"id": 1998,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14149:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_32_by_1",
																		"typeString": "int_const 32"
																	},
																	"value": "32"
																},
																"src": "14140:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2000,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14154:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14140:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2011,
														"nodeType": "IfStatement",
														"src": "14136:95:9",
														"trueBody": {
															"id": 2010,
															"nodeType": "Block",
															"src": "14157:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2004,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2002,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "14175:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3332",
																			"id": 2003,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14185:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_32_by_1",
																				"typeString": "int_const 32"
																			},
																			"value": "32"
																		},
																		"src": "14175:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2005,
																	"nodeType": "ExpressionStatement",
																	"src": "14175:12:9"
																},
																{
																	"expression": {
																		"id": 2008,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2006,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1964,
																			"src": "14205:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "34",
																			"id": 2007,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14215:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_4_by_1",
																				"typeString": "int_const 4"
																			},
																			"value": "4"
																		},
																		"src": "14205:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2009,
																	"nodeType": "ExpressionStatement",
																	"src": "14205:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2016,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2014,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2012,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1958,
																	"src": "14248:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "3136",
																	"id": 2013,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14257:2:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_16_by_1",
																		"typeString": "int_const 16"
																	},
																	"value": "16"
																},
																"src": "14248:11:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2015,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14262:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14248:15:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2026,
														"nodeType": "IfStatement",
														"src": "14244:95:9",
														"trueBody": {
															"id": 2025,
															"nodeType": "Block",
															"src": "14265:74:9",
															"statements": [
																{
																	"expression": {
																		"id": 2019,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2017,
																			"name": "value",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1958,
																			"src": "14283:5:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": ">>=",
																		"rightHandSide": {
																			"hexValue": "3136",
																			"id": 2018,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14293:2:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_16_by_1",
																				"typeString": "int_const 16"
																			},
																			"value": "16"
																		},
																		"src": "14283:12:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2020,
																	"nodeType": "ExpressionStatement",
																	"src": "14283:12:9"
																},
																{
																	"expression": {
																		"id": 2023,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2021,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1964,
																			"src": "14313:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "32",
																			"id": 2022,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14323:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_2_by_1",
																				"typeString": "int_const 2"
																			},
																			"value": "2"
																		},
																		"src": "14313:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2024,
																	"nodeType": "ExpressionStatement",
																	"src": "14313:11:9"
																}
															]
														}
													},
													{
														"condition": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2031,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2029,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2027,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1958,
																	"src": "14356:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">>",
																"rightExpression": {
																	"hexValue": "38",
																	"id": 2028,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "14365:1:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_8_by_1",
																		"typeString": "int_const 8"
																	},
																	"value": "8"
																},
																"src": "14356:10:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2030,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14369:1:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "14356:14:9",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"id": 2037,
														"nodeType": "IfStatement",
														"src": "14352:64:9",
														"trueBody": {
															"id": 2036,
															"nodeType": "Block",
															"src": "14372:44:9",
															"statements": [
																{
																	"expression": {
																		"id": 2034,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 2032,
																			"name": "result",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1964,
																			"src": "14390:6:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "+=",
																		"rightHandSide": {
																			"hexValue": "31",
																			"id": 2033,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14400:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"src": "14390:11:9",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"id": 2035,
																	"nodeType": "ExpressionStatement",
																	"src": "14390:11:9"
																}
															]
														}
													}
												]
											},
											{
												"expression": {
													"id": 2039,
													"name": "result",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1964,
													"src": "14442:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 1962,
												"id": 2040,
												"nodeType": "Return",
												"src": "14435:13:9"
											}
										]
									},
									"documentation": {
										"id": 1956,
										"nodeType": "StructuredDocumentation",
										"src": "13541:246:9",
										"text": " @dev Return the log in base 256 of a positive value rounded towards zero.\n Returns 0 if given 0.\n Adding one to the result gives the number of pairs of hex symbols needed to represent `value` as a hex string."
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "13801:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1958,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13816:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "13808:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1957,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13808:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13807:15:9"
									},
									"returnParameters": {
										"id": 1962,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "13846:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1960,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13846:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13845:9:9"
									},
									"scope": 2100,
									"src": "13792:663:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2079,
										"nodeType": "Block",
										"src": "14692:177:9",
										"statements": [
											{
												"id": 2078,
												"nodeType": "UncheckedBlock",
												"src": "14702:161:9",
												"statements": [
													{
														"assignments": [
															2054
														],
														"declarations": [
															{
																"constant": false,
																"id": 2054,
																"mutability": "mutable",
																"name": "result",
																"nameLocation": "14734:6:9",
																"nodeType": "VariableDeclaration",
																"scope": 2078,
																"src": "14726:14:9",
																"stateVariable": false,
																"storageLocation": "default",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"typeName": {
																	"id": 2053,
																	"name": "uint256",
																	"nodeType": "ElementaryTypeName",
																	"src": "14726:7:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"visibility": "internal"
															}
														],
														"id": 2058,
														"initialValue": {
															"arguments": [
																{
																	"id": 2056,
																	"name": "value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2045,
																	"src": "14750:5:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"id": 2055,
																"name": "log256",
																"nodeType": "Identifier",
																"overloadedDeclarations": [
																	2042,
																	2080
																],
																"referencedDeclaration": 2042,
																"src": "14743:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint256_$",
																	"typeString": "function (uint256) pure returns (uint256)"
																}
															},
															"id": 2057,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14743:13:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "VariableDeclarationStatement",
														"src": "14726:30:9"
													},
													{
														"expression": {
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2076,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2059,
																"name": "result",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2054,
																"src": "14777:6:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "+",
															"rightExpression": {
																"components": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			},
																			"id": 2071,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"arguments": [
																					{
																						"id": 2061,
																						"name": "rounding",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2048,
																						"src": "14804:8:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_enum$_Rounding_$1057",
																							"typeString": "enum Math.Rounding"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_enum$_Rounding_$1057",
																							"typeString": "enum Math.Rounding"
																						}
																					],
																					"id": 2060,
																					"name": "unsignedRoundsUp",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2099,
																					"src": "14787:16:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_internal_pure$_t_enum$_Rounding_$1057_$returns$_t_bool_$",
																						"typeString": "function (enum Math.Rounding) pure returns (bool)"
																					}
																				},
																				"id": 2062,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "14787:26:9",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "&&",
																			"rightExpression": {
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2070,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 2068,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"hexValue": "31",
																						"id": 2063,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "14817:1:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "<<",
																					"rightExpression": {
																						"components": [
																							{
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2066,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"id": 2064,
																									"name": "result",
																									"nodeType": "Identifier",
																									"overloadedDeclarations": [],
																									"referencedDeclaration": 2054,
																									"src": "14823:6:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "<<",
																								"rightExpression": {
																									"hexValue": "33",
																									"id": 2065,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "14833:1:9",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_3_by_1",
																										"typeString": "int_const 3"
																									},
																									"value": "3"
																								},
																								"src": "14823:11:9",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							}
																						],
																						"id": 2067,
																						"isConstant": false,
																						"isInlineArray": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "TupleExpression",
																						"src": "14822:13:9",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "14817:18:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "<",
																				"rightExpression": {
																					"id": 2069,
																					"name": "value",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2045,
																					"src": "14838:5:9",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "14817:26:9",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"src": "14787:56:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"falseExpression": {
																			"hexValue": "30",
																			"id": 2073,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14850:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_0_by_1",
																				"typeString": "int_const 0"
																			},
																			"value": "0"
																		},
																		"id": 2074,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "Conditional",
																		"src": "14787:64:9",
																		"trueExpression": {
																			"hexValue": "31",
																			"id": 2072,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "14846:1:9",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_1_by_1",
																				"typeString": "int_const 1"
																			},
																			"value": "1"
																		},
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	}
																],
																"id": 2075,
																"isConstant": false,
																"isInlineArray": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "TupleExpression",
																"src": "14786:66:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															},
															"src": "14777:75:9",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"functionReturnParameters": 2052,
														"id": 2077,
														"nodeType": "Return",
														"src": "14770:82:9"
													}
												]
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "14461:144:9",
										"text": " @dev Return the log in base 256, following the selected rounding direction, of a positive value.\n Returns 0 if given 0."
									},
									"id": 2080,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "log256",
									"nameLocation": "14619:6:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14634:5:9",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "14626:13:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2044,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14626:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2048,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "14650:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "14641:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1057",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2047,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2046,
														"name": "Rounding",
														"nameLocations": [
															"14641:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1057,
														"src": "14641:8:9"
													},
													"referencedDeclaration": 1057,
													"src": "14641:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1057",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14625:34:9"
									},
									"returnParameters": {
										"id": 2052,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2051,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2080,
												"src": "14683:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2050,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14683:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14682:9:9"
									},
									"scope": 2100,
									"src": "14610:259:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2098,
										"nodeType": "Block",
										"src": "15067:48:9",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													},
													"id": 2096,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"id": 2094,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 2091,
																	"name": "rounding",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2084,
																	"src": "15090:8:9",
																	"typeDescriptions": {
																		"typeIdentifier": "t_enum$_Rounding_$1057",
																		"typeString": "enum Math.Rounding"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_enum$_Rounding_$1057",
																		"typeString": "enum Math.Rounding"
																	}
																],
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "15084:5:9",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_uint8_$",
																	"typeString": "type(uint8)"
																},
																"typeName": {
																	"id": 2089,
																	"name": "uint8",
																	"nodeType": "ElementaryTypeName",
																	"src": "15084:5:9",
																	"typeDescriptions": {}
																}
															},
															"id": 2092,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15084:15:9",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "%",
														"rightExpression": {
															"hexValue": "32",
															"id": 2093,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "15102:1:9",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "15084:19:9",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "31",
														"id": 2095,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15107:1:9",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "15084:24:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 2088,
												"id": 2097,
												"nodeType": "Return",
												"src": "15077:31:9"
											}
										]
									},
									"documentation": {
										"id": 2081,
										"nodeType": "StructuredDocumentation",
										"src": "14875:113:9",
										"text": " @dev Returns whether a provided rounding mode is considered rounding up for unsigned integers."
									},
									"id": 2099,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "unsignedRoundsUp",
									"nameLocation": "15002:16:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2085,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2084,
												"mutability": "mutable",
												"name": "rounding",
												"nameLocation": "15028:8:9",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "15019:17:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Rounding_$1057",
													"typeString": "enum Math.Rounding"
												},
												"typeName": {
													"id": 2083,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2082,
														"name": "Rounding",
														"nameLocations": [
															"15019:8:9"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1057,
														"src": "15019:8:9"
													},
													"referencedDeclaration": 1057,
													"src": "15019:8:9",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Rounding_$1057",
														"typeString": "enum Math.Rounding"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15018:19:9"
									},
									"returnParameters": {
										"id": 2088,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2087,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2099,
												"src": "15061:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2086,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "15061:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15060:6:9"
									},
									"scope": 2100,
									"src": "14993:122:9",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2101,
							"src": "203:14914:9",
							"usedErrors": [
								1052
							],
							"usedEvents": []
						}
					],
					"src": "103:15015:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol",
					"exportedSymbols": {
						"SafeCast": [
							3855
						]
					},
					"id": 3856,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2102,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "192:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "SafeCast",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2103,
								"nodeType": "StructuredDocumentation",
								"src": "218:545:10",
								"text": " @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always."
							},
							"fullyImplemented": true,
							"id": 3855,
							"linearizedBaseContracts": [
								3855
							],
							"name": "SafeCast",
							"nameLocation": "772:8:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2104,
										"nodeType": "StructuredDocumentation",
										"src": "787:68:10",
										"text": " @dev Value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "6dfcc650",
									"id": 2110,
									"name": "SafeCastOverflowedUintDowncast",
									"nameLocation": "866:30:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "903:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "897:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2105,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "897:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "917:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2110,
												"src": "909:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "896:27:10"
									},
									"src": "860:64:10"
								},
								{
									"documentation": {
										"id": 2111,
										"nodeType": "StructuredDocumentation",
										"src": "930:75:10",
										"text": " @dev An int value doesn't fit in an uint of `bits` size."
									},
									"errorSelector": "a8ce4432",
									"id": 2115,
									"name": "SafeCastOverflowedIntToUint",
									"nameLocation": "1016:27:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2113,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1051:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2115,
												"src": "1044:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2112,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:14:10"
									},
									"src": "1010:48:10"
								},
								{
									"documentation": {
										"id": 2116,
										"nodeType": "StructuredDocumentation",
										"src": "1064:67:10",
										"text": " @dev Value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "327269a7",
									"id": 2122,
									"name": "SafeCastOverflowedIntDowncast",
									"nameLocation": "1142:29:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "bits",
												"nameLocation": "1178:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1172:10:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2117,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "1172:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1191:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2122,
												"src": "1184:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2119,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "1184:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1171:26:10"
									},
									"src": "1136:62:10"
								},
								{
									"documentation": {
										"id": 2123,
										"nodeType": "StructuredDocumentation",
										"src": "1204:75:10",
										"text": " @dev An uint value doesn't fit in an int of `bits` size."
									},
									"errorSelector": "24775e06",
									"id": 2127,
									"name": "SafeCastOverflowedUintToInt",
									"nameLocation": "1290:27:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 2126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2125,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1326:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2127,
												"src": "1318:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2124,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1318:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1317:15:10"
									},
									"src": "1284:49:10"
								},
								{
									"body": {
										"id": 2154,
										"nodeType": "Block",
										"src": "1690:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2135,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2130,
														"src": "1704:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2138,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1717:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	},
																	"typeName": {
																		"id": 2137,
																		"name": "uint248",
																		"nodeType": "ElementaryTypeName",
																		"src": "1717:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint248_$",
																		"typeString": "type(uint248)"
																	}
																],
																"id": 2136,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1712:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2139,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1712:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint248",
																"typeString": "type(uint248)"
															}
														},
														"id": 2140,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1726:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "1712:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint248",
															"typeString": "uint248"
														}
													},
													"src": "1704:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2148,
												"nodeType": "IfStatement",
												"src": "1700:105:10",
												"trueBody": {
													"id": 2147,
													"nodeType": "Block",
													"src": "1731:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 2143,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1783:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 2144,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2130,
																		"src": "1788:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2142,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "1752:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1752:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2146,
															"nodeType": "RevertStatement",
															"src": "1745:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2151,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2130,
															"src": "1829:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2150,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "1821:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint248_$",
															"typeString": "type(uint248)"
														},
														"typeName": {
															"id": 2149,
															"name": "uint248",
															"nodeType": "ElementaryTypeName",
															"src": "1821:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2152,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1821:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"functionReturnParameters": 2134,
												"id": 2153,
												"nodeType": "Return",
												"src": "1814:21:10"
											}
										]
									},
									"documentation": {
										"id": 2128,
										"nodeType": "StructuredDocumentation",
										"src": "1339:280:10",
										"text": " @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 2155,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint248",
									"nameLocation": "1633:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2131,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1651:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "1643:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2129,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1643:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1642:15:10"
									},
									"returnParameters": {
										"id": 2134,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2133,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2155,
												"src": "1681:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint248",
													"typeString": "uint248"
												},
												"typeName": {
													"id": 2132,
													"name": "uint248",
													"nodeType": "ElementaryTypeName",
													"src": "1681:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint248",
														"typeString": "uint248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1680:9:10"
									},
									"scope": 3855,
									"src": "1624:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2182,
										"nodeType": "Block",
										"src": "2199:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2169,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2163,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2158,
														"src": "2213:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2166,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2226:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	},
																	"typeName": {
																		"id": 2165,
																		"name": "uint240",
																		"nodeType": "ElementaryTypeName",
																		"src": "2226:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint240_$",
																		"typeString": "type(uint240)"
																	}
																],
																"id": 2164,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2221:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2167,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2221:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint240",
																"typeString": "type(uint240)"
															}
														},
														"id": 2168,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2235:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2221:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint240",
															"typeString": "uint240"
														}
													},
													"src": "2213:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2176,
												"nodeType": "IfStatement",
												"src": "2209:105:10",
												"trueBody": {
													"id": 2175,
													"nodeType": "Block",
													"src": "2240:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 2171,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2292:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 2172,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2158,
																		"src": "2297:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2170,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "2261:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2173,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2261:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2174,
															"nodeType": "RevertStatement",
															"src": "2254:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2179,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "2338:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2178,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2330:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint240_$",
															"typeString": "type(uint240)"
														},
														"typeName": {
															"id": 2177,
															"name": "uint240",
															"nodeType": "ElementaryTypeName",
															"src": "2330:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2330:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"functionReturnParameters": 2162,
												"id": 2181,
												"nodeType": "Return",
												"src": "2323:21:10"
											}
										]
									},
									"documentation": {
										"id": 2156,
										"nodeType": "StructuredDocumentation",
										"src": "1848:280:10",
										"text": " @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 2183,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint240",
									"nameLocation": "2142:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2160:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "2152:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2157,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2152:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2151:15:10"
									},
									"returnParameters": {
										"id": 2162,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2161,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2183,
												"src": "2190:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint240",
													"typeString": "uint240"
												},
												"typeName": {
													"id": 2160,
													"name": "uint240",
													"nodeType": "ElementaryTypeName",
													"src": "2190:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint240",
														"typeString": "uint240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2189:9:10"
									},
									"scope": 3855,
									"src": "2133:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2210,
										"nodeType": "Block",
										"src": "2708:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2191,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2186,
														"src": "2722:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2194,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2735:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	},
																	"typeName": {
																		"id": 2193,
																		"name": "uint232",
																		"nodeType": "ElementaryTypeName",
																		"src": "2735:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint232_$",
																		"typeString": "type(uint232)"
																	}
																],
																"id": 2192,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "2730:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2195,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2730:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint232",
																"typeString": "type(uint232)"
															}
														},
														"id": 2196,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "2744:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "2730:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint232",
															"typeString": "uint232"
														}
													},
													"src": "2722:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2204,
												"nodeType": "IfStatement",
												"src": "2718:105:10",
												"trueBody": {
													"id": 2203,
													"nodeType": "Block",
													"src": "2749:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 2199,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2801:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 2200,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2186,
																		"src": "2806:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2198,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "2770:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2201,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2770:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2202,
															"nodeType": "RevertStatement",
															"src": "2763:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2207,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "2847:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2206,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "2839:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint232_$",
															"typeString": "type(uint232)"
														},
														"typeName": {
															"id": 2205,
															"name": "uint232",
															"nodeType": "ElementaryTypeName",
															"src": "2839:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2208,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2839:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"functionReturnParameters": 2190,
												"id": 2209,
												"nodeType": "Return",
												"src": "2832:21:10"
											}
										]
									},
									"documentation": {
										"id": 2184,
										"nodeType": "StructuredDocumentation",
										"src": "2357:280:10",
										"text": " @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 2211,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint232",
									"nameLocation": "2651:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2186,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "2669:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "2661:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2185,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2661:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2660:15:10"
									},
									"returnParameters": {
										"id": 2190,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2189,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2211,
												"src": "2699:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint232",
													"typeString": "uint232"
												},
												"typeName": {
													"id": 2188,
													"name": "uint232",
													"nodeType": "ElementaryTypeName",
													"src": "2699:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint232",
														"typeString": "uint232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2698:9:10"
									},
									"scope": 3855,
									"src": "2642:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2238,
										"nodeType": "Block",
										"src": "3217:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2225,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2219,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2214,
														"src": "3231:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2222,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3244:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	},
																	"typeName": {
																		"id": 2221,
																		"name": "uint224",
																		"nodeType": "ElementaryTypeName",
																		"src": "3244:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint224_$",
																		"typeString": "type(uint224)"
																	}
																],
																"id": 2220,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3239:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2223,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3239:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint224",
																"typeString": "type(uint224)"
															}
														},
														"id": 2224,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3253:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3239:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint224",
															"typeString": "uint224"
														}
													},
													"src": "3231:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2232,
												"nodeType": "IfStatement",
												"src": "3227:105:10",
												"trueBody": {
													"id": 2231,
													"nodeType": "Block",
													"src": "3258:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 2227,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3310:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 2228,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2214,
																		"src": "3315:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2226,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "3279:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3279:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2230,
															"nodeType": "RevertStatement",
															"src": "3272:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2235,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2214,
															"src": "3356:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2234,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3348:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint224_$",
															"typeString": "type(uint224)"
														},
														"typeName": {
															"id": 2233,
															"name": "uint224",
															"nodeType": "ElementaryTypeName",
															"src": "3348:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2236,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3348:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"functionReturnParameters": 2218,
												"id": 2237,
												"nodeType": "Return",
												"src": "3341:21:10"
											}
										]
									},
									"documentation": {
										"id": 2212,
										"nodeType": "StructuredDocumentation",
										"src": "2866:280:10",
										"text": " @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 2239,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint224",
									"nameLocation": "3160:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2214,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3178:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "3170:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3170:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3169:15:10"
									},
									"returnParameters": {
										"id": 2218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2217,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2239,
												"src": "3208:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint224",
													"typeString": "uint224"
												},
												"typeName": {
													"id": 2216,
													"name": "uint224",
													"nodeType": "ElementaryTypeName",
													"src": "3208:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint224",
														"typeString": "uint224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3207:9:10"
									},
									"scope": 3855,
									"src": "3151:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2266,
										"nodeType": "Block",
										"src": "3726:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2253,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2247,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2242,
														"src": "3740:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2250,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "3753:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	},
																	"typeName": {
																		"id": 2249,
																		"name": "uint216",
																		"nodeType": "ElementaryTypeName",
																		"src": "3753:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint216_$",
																		"typeString": "type(uint216)"
																	}
																],
																"id": 2248,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "3748:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2251,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3748:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint216",
																"typeString": "type(uint216)"
															}
														},
														"id": 2252,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "3762:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "3748:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint216",
															"typeString": "uint216"
														}
													},
													"src": "3740:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2260,
												"nodeType": "IfStatement",
												"src": "3736:105:10",
												"trueBody": {
													"id": 2259,
													"nodeType": "Block",
													"src": "3767:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 2255,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3819:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 2256,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2242,
																		"src": "3824:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2254,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "3788:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2257,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3788:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2258,
															"nodeType": "RevertStatement",
															"src": "3781:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2263,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2242,
															"src": "3865:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2262,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "3857:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint216_$",
															"typeString": "type(uint216)"
														},
														"typeName": {
															"id": 2261,
															"name": "uint216",
															"nodeType": "ElementaryTypeName",
															"src": "3857:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2264,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3857:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"functionReturnParameters": 2246,
												"id": 2265,
												"nodeType": "Return",
												"src": "3850:21:10"
											}
										]
									},
									"documentation": {
										"id": 2240,
										"nodeType": "StructuredDocumentation",
										"src": "3375:280:10",
										"text": " @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 2267,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint216",
									"nameLocation": "3669:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2243,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2242,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3687:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "3679:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2241,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3679:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3678:15:10"
									},
									"returnParameters": {
										"id": 2246,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2245,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2267,
												"src": "3717:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint216",
													"typeString": "uint216"
												},
												"typeName": {
													"id": 2244,
													"name": "uint216",
													"nodeType": "ElementaryTypeName",
													"src": "3717:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint216",
														"typeString": "uint216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3716:9:10"
									},
									"scope": 3855,
									"src": "3660:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2294,
										"nodeType": "Block",
										"src": "4235:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2281,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2275,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2270,
														"src": "4249:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4262:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	},
																	"typeName": {
																		"id": 2277,
																		"name": "uint208",
																		"nodeType": "ElementaryTypeName",
																		"src": "4262:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint208_$",
																		"typeString": "type(uint208)"
																	}
																],
																"id": 2276,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4257:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2279,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4257:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint208",
																"typeString": "type(uint208)"
															}
														},
														"id": 2280,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4271:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4257:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint208",
															"typeString": "uint208"
														}
													},
													"src": "4249:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2288,
												"nodeType": "IfStatement",
												"src": "4245:105:10",
												"trueBody": {
													"id": 2287,
													"nodeType": "Block",
													"src": "4276:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 2283,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4328:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 2284,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2270,
																		"src": "4333:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2282,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "4297:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2285,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4297:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2286,
															"nodeType": "RevertStatement",
															"src": "4290:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2291,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2270,
															"src": "4374:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2290,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4366:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint208_$",
															"typeString": "type(uint208)"
														},
														"typeName": {
															"id": 2289,
															"name": "uint208",
															"nodeType": "ElementaryTypeName",
															"src": "4366:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2292,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4366:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"functionReturnParameters": 2274,
												"id": 2293,
												"nodeType": "Return",
												"src": "4359:21:10"
											}
										]
									},
									"documentation": {
										"id": 2268,
										"nodeType": "StructuredDocumentation",
										"src": "3884:280:10",
										"text": " @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 2295,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint208",
									"nameLocation": "4178:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2271,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2270,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4196:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "4188:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2269,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4188:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4187:15:10"
									},
									"returnParameters": {
										"id": 2274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2295,
												"src": "4226:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint208",
													"typeString": "uint208"
												},
												"typeName": {
													"id": 2272,
													"name": "uint208",
													"nodeType": "ElementaryTypeName",
													"src": "4226:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint208",
														"typeString": "uint208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4225:9:10"
									},
									"scope": 3855,
									"src": "4169:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2322,
										"nodeType": "Block",
										"src": "4744:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2309,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2303,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2298,
														"src": "4758:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2306,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4771:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	},
																	"typeName": {
																		"id": 2305,
																		"name": "uint200",
																		"nodeType": "ElementaryTypeName",
																		"src": "4771:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint200_$",
																		"typeString": "type(uint200)"
																	}
																],
																"id": 2304,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "4766:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2307,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4766:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint200",
																"typeString": "type(uint200)"
															}
														},
														"id": 2308,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "4780:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "4766:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint200",
															"typeString": "uint200"
														}
													},
													"src": "4758:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2316,
												"nodeType": "IfStatement",
												"src": "4754:105:10",
												"trueBody": {
													"id": 2315,
													"nodeType": "Block",
													"src": "4785:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 2311,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4837:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 2312,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2298,
																		"src": "4842:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2310,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "4806:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2313,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4806:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2314,
															"nodeType": "RevertStatement",
															"src": "4799:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2319,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2298,
															"src": "4883:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2318,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "4875:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint200_$",
															"typeString": "type(uint200)"
														},
														"typeName": {
															"id": 2317,
															"name": "uint200",
															"nodeType": "ElementaryTypeName",
															"src": "4875:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4875:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"functionReturnParameters": 2302,
												"id": 2321,
												"nodeType": "Return",
												"src": "4868:21:10"
											}
										]
									},
									"documentation": {
										"id": 2296,
										"nodeType": "StructuredDocumentation",
										"src": "4393:280:10",
										"text": " @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 2323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint200",
									"nameLocation": "4687:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2299,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2298,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "4705:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "4697:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2297,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4697:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4696:15:10"
									},
									"returnParameters": {
										"id": 2302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "4735:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint200",
													"typeString": "uint200"
												},
												"typeName": {
													"id": 2300,
													"name": "uint200",
													"nodeType": "ElementaryTypeName",
													"src": "4735:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint200",
														"typeString": "uint200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4734:9:10"
									},
									"scope": 3855,
									"src": "4678:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2350,
										"nodeType": "Block",
										"src": "5253:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2331,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2326,
														"src": "5267:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2334,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5280:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	},
																	"typeName": {
																		"id": 2333,
																		"name": "uint192",
																		"nodeType": "ElementaryTypeName",
																		"src": "5280:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint192_$",
																		"typeString": "type(uint192)"
																	}
																],
																"id": 2332,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5275:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5275:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint192",
																"typeString": "type(uint192)"
															}
														},
														"id": 2336,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5289:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5275:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint192",
															"typeString": "uint192"
														}
													},
													"src": "5267:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2344,
												"nodeType": "IfStatement",
												"src": "5263:105:10",
												"trueBody": {
													"id": 2343,
													"nodeType": "Block",
													"src": "5294:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 2339,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5346:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 2340,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2326,
																		"src": "5351:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2338,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "5315:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2341,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5315:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2342,
															"nodeType": "RevertStatement",
															"src": "5308:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2347,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2326,
															"src": "5392:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2346,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5384:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint192_$",
															"typeString": "type(uint192)"
														},
														"typeName": {
															"id": 2345,
															"name": "uint192",
															"nodeType": "ElementaryTypeName",
															"src": "5384:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2348,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5384:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"functionReturnParameters": 2330,
												"id": 2349,
												"nodeType": "Return",
												"src": "5377:21:10"
											}
										]
									},
									"documentation": {
										"id": 2324,
										"nodeType": "StructuredDocumentation",
										"src": "4902:280:10",
										"text": " @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 2351,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint192",
									"nameLocation": "5196:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2326,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5214:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "5206:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2325,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5206:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5205:15:10"
									},
									"returnParameters": {
										"id": 2330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2329,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2351,
												"src": "5244:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint192",
													"typeString": "uint192"
												},
												"typeName": {
													"id": 2328,
													"name": "uint192",
													"nodeType": "ElementaryTypeName",
													"src": "5244:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint192",
														"typeString": "uint192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5243:9:10"
									},
									"scope": 3855,
									"src": "5187:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2378,
										"nodeType": "Block",
										"src": "5762:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2359,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2354,
														"src": "5776:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2362,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "5789:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	},
																	"typeName": {
																		"id": 2361,
																		"name": "uint184",
																		"nodeType": "ElementaryTypeName",
																		"src": "5789:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint184_$",
																		"typeString": "type(uint184)"
																	}
																],
																"id": 2360,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "5784:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2363,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5784:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint184",
																"typeString": "type(uint184)"
															}
														},
														"id": 2364,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "5798:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "5784:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint184",
															"typeString": "uint184"
														}
													},
													"src": "5776:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2372,
												"nodeType": "IfStatement",
												"src": "5772:105:10",
												"trueBody": {
													"id": 2371,
													"nodeType": "Block",
													"src": "5803:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 2367,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5855:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 2368,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2354,
																		"src": "5860:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2366,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "5824:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2369,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5824:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2370,
															"nodeType": "RevertStatement",
															"src": "5817:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2375,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2354,
															"src": "5901:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2374,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "5893:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint184_$",
															"typeString": "type(uint184)"
														},
														"typeName": {
															"id": 2373,
															"name": "uint184",
															"nodeType": "ElementaryTypeName",
															"src": "5893:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2376,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5893:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"functionReturnParameters": 2358,
												"id": 2377,
												"nodeType": "Return",
												"src": "5886:21:10"
											}
										]
									},
									"documentation": {
										"id": 2352,
										"nodeType": "StructuredDocumentation",
										"src": "5411:280:10",
										"text": " @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 2379,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint184",
									"nameLocation": "5705:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2355,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2354,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "5723:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "5715:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2353,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5715:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5714:15:10"
									},
									"returnParameters": {
										"id": 2358,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2357,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2379,
												"src": "5753:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint184",
													"typeString": "uint184"
												},
												"typeName": {
													"id": 2356,
													"name": "uint184",
													"nodeType": "ElementaryTypeName",
													"src": "5753:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint184",
														"typeString": "uint184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5752:9:10"
									},
									"scope": 3855,
									"src": "5696:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2406,
										"nodeType": "Block",
										"src": "6271:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2393,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2387,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2382,
														"src": "6285:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2390,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6298:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	},
																	"typeName": {
																		"id": 2389,
																		"name": "uint176",
																		"nodeType": "ElementaryTypeName",
																		"src": "6298:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint176_$",
																		"typeString": "type(uint176)"
																	}
																],
																"id": 2388,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6293:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2391,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6293:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint176",
																"typeString": "type(uint176)"
															}
														},
														"id": 2392,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6307:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6293:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint176",
															"typeString": "uint176"
														}
													},
													"src": "6285:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2400,
												"nodeType": "IfStatement",
												"src": "6281:105:10",
												"trueBody": {
													"id": 2399,
													"nodeType": "Block",
													"src": "6312:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 2395,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6364:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 2396,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2382,
																		"src": "6369:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2394,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "6333:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2397,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6333:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2398,
															"nodeType": "RevertStatement",
															"src": "6326:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2403,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2382,
															"src": "6410:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2402,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6402:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint176_$",
															"typeString": "type(uint176)"
														},
														"typeName": {
															"id": 2401,
															"name": "uint176",
															"nodeType": "ElementaryTypeName",
															"src": "6402:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2404,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6402:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"functionReturnParameters": 2386,
												"id": 2405,
												"nodeType": "Return",
												"src": "6395:21:10"
											}
										]
									},
									"documentation": {
										"id": 2380,
										"nodeType": "StructuredDocumentation",
										"src": "5920:280:10",
										"text": " @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 2407,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint176",
									"nameLocation": "6214:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2383,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2382,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6232:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "6224:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2381,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6224:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6223:15:10"
									},
									"returnParameters": {
										"id": 2386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2385,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2407,
												"src": "6262:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint176",
													"typeString": "uint176"
												},
												"typeName": {
													"id": 2384,
													"name": "uint176",
													"nodeType": "ElementaryTypeName",
													"src": "6262:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint176",
														"typeString": "uint176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6261:9:10"
									},
									"scope": 3855,
									"src": "6205:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2434,
										"nodeType": "Block",
										"src": "6780:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2415,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2410,
														"src": "6794:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2418,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6807:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	},
																	"typeName": {
																		"id": 2417,
																		"name": "uint168",
																		"nodeType": "ElementaryTypeName",
																		"src": "6807:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint168_$",
																		"typeString": "type(uint168)"
																	}
																],
																"id": 2416,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "6802:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6802:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint168",
																"typeString": "type(uint168)"
															}
														},
														"id": 2420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "6816:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "6802:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint168",
															"typeString": "uint168"
														}
													},
													"src": "6794:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2428,
												"nodeType": "IfStatement",
												"src": "6790:105:10",
												"trueBody": {
													"id": 2427,
													"nodeType": "Block",
													"src": "6821:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 2423,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "6873:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 2424,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2410,
																		"src": "6878:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2422,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "6842:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2425,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6842:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2426,
															"nodeType": "RevertStatement",
															"src": "6835:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2431,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2410,
															"src": "6919:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2430,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "6911:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint168_$",
															"typeString": "type(uint168)"
														},
														"typeName": {
															"id": 2429,
															"name": "uint168",
															"nodeType": "ElementaryTypeName",
															"src": "6911:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6911:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"functionReturnParameters": 2414,
												"id": 2433,
												"nodeType": "Return",
												"src": "6904:21:10"
											}
										]
									},
									"documentation": {
										"id": 2408,
										"nodeType": "StructuredDocumentation",
										"src": "6429:280:10",
										"text": " @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 2435,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint168",
									"nameLocation": "6723:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2411,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2410,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "6741:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "6733:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2409,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6733:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6732:15:10"
									},
									"returnParameters": {
										"id": 2414,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2413,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2435,
												"src": "6771:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint168",
													"typeString": "uint168"
												},
												"typeName": {
													"id": 2412,
													"name": "uint168",
													"nodeType": "ElementaryTypeName",
													"src": "6771:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint168",
														"typeString": "uint168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6770:9:10"
									},
									"scope": 3855,
									"src": "6714:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2462,
										"nodeType": "Block",
										"src": "7289:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2443,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2438,
														"src": "7303:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2446,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7316:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	},
																	"typeName": {
																		"id": 2445,
																		"name": "uint160",
																		"nodeType": "ElementaryTypeName",
																		"src": "7316:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint160_$",
																		"typeString": "type(uint160)"
																	}
																],
																"id": 2444,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7311:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2447,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7311:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint160",
																"typeString": "type(uint160)"
															}
														},
														"id": 2448,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7325:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7311:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint160",
															"typeString": "uint160"
														}
													},
													"src": "7303:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2456,
												"nodeType": "IfStatement",
												"src": "7299:105:10",
												"trueBody": {
													"id": 2455,
													"nodeType": "Block",
													"src": "7330:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 2451,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7382:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 2452,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2438,
																		"src": "7387:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2450,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "7351:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2453,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7351:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2454,
															"nodeType": "RevertStatement",
															"src": "7344:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2459,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2438,
															"src": "7428:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2458,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7420:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint160_$",
															"typeString": "type(uint160)"
														},
														"typeName": {
															"id": 2457,
															"name": "uint160",
															"nodeType": "ElementaryTypeName",
															"src": "7420:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2460,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7420:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"functionReturnParameters": 2442,
												"id": 2461,
												"nodeType": "Return",
												"src": "7413:21:10"
											}
										]
									},
									"documentation": {
										"id": 2436,
										"nodeType": "StructuredDocumentation",
										"src": "6938:280:10",
										"text": " @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 2463,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint160",
									"nameLocation": "7232:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2439,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2438,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7250:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "7242:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2437,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7242:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7241:15:10"
									},
									"returnParameters": {
										"id": 2442,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2441,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2463,
												"src": "7280:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint160",
													"typeString": "uint160"
												},
												"typeName": {
													"id": 2440,
													"name": "uint160",
													"nodeType": "ElementaryTypeName",
													"src": "7280:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint160",
														"typeString": "uint160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7279:9:10"
									},
									"scope": 3855,
									"src": "7223:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2490,
										"nodeType": "Block",
										"src": "7798:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2471,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2466,
														"src": "7812:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2474,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7825:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	},
																	"typeName": {
																		"id": 2473,
																		"name": "uint152",
																		"nodeType": "ElementaryTypeName",
																		"src": "7825:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint152_$",
																		"typeString": "type(uint152)"
																	}
																],
																"id": 2472,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "7820:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2475,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7820:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint152",
																"typeString": "type(uint152)"
															}
														},
														"id": 2476,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "7834:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "7820:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint152",
															"typeString": "uint152"
														}
													},
													"src": "7812:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2484,
												"nodeType": "IfStatement",
												"src": "7808:105:10",
												"trueBody": {
													"id": 2483,
													"nodeType": "Block",
													"src": "7839:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 2479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "7891:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 2480,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2466,
																		"src": "7896:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2478,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "7860:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7860:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2482,
															"nodeType": "RevertStatement",
															"src": "7853:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2487,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2466,
															"src": "7937:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2486,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "7929:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint152_$",
															"typeString": "type(uint152)"
														},
														"typeName": {
															"id": 2485,
															"name": "uint152",
															"nodeType": "ElementaryTypeName",
															"src": "7929:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7929:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"functionReturnParameters": 2470,
												"id": 2489,
												"nodeType": "Return",
												"src": "7922:21:10"
											}
										]
									},
									"documentation": {
										"id": 2464,
										"nodeType": "StructuredDocumentation",
										"src": "7447:280:10",
										"text": " @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 2491,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint152",
									"nameLocation": "7741:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2466,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "7759:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "7751:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2465,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7751:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7750:15:10"
									},
									"returnParameters": {
										"id": 2470,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2469,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2491,
												"src": "7789:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint152",
													"typeString": "uint152"
												},
												"typeName": {
													"id": 2468,
													"name": "uint152",
													"nodeType": "ElementaryTypeName",
													"src": "7789:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint152",
														"typeString": "uint152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7788:9:10"
									},
									"scope": 3855,
									"src": "7732:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2518,
										"nodeType": "Block",
										"src": "8307:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2505,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2499,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2494,
														"src": "8321:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8334:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	},
																	"typeName": {
																		"id": 2501,
																		"name": "uint144",
																		"nodeType": "ElementaryTypeName",
																		"src": "8334:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint144_$",
																		"typeString": "type(uint144)"
																	}
																],
																"id": 2500,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8329:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2503,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8329:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint144",
																"typeString": "type(uint144)"
															}
														},
														"id": 2504,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8343:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8329:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint144",
															"typeString": "uint144"
														}
													},
													"src": "8321:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2512,
												"nodeType": "IfStatement",
												"src": "8317:105:10",
												"trueBody": {
													"id": 2511,
													"nodeType": "Block",
													"src": "8348:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 2507,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8400:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 2508,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2494,
																		"src": "8405:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2506,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "8369:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2509,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8369:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2510,
															"nodeType": "RevertStatement",
															"src": "8362:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2515,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2494,
															"src": "8446:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2514,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8438:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint144_$",
															"typeString": "type(uint144)"
														},
														"typeName": {
															"id": 2513,
															"name": "uint144",
															"nodeType": "ElementaryTypeName",
															"src": "8438:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8438:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"functionReturnParameters": 2498,
												"id": 2517,
												"nodeType": "Return",
												"src": "8431:21:10"
											}
										]
									},
									"documentation": {
										"id": 2492,
										"nodeType": "StructuredDocumentation",
										"src": "7956:280:10",
										"text": " @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 2519,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint144",
									"nameLocation": "8250:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2495,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2494,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8268:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "8260:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2493,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8260:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8259:15:10"
									},
									"returnParameters": {
										"id": 2498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2497,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2519,
												"src": "8298:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint144",
													"typeString": "uint144"
												},
												"typeName": {
													"id": 2496,
													"name": "uint144",
													"nodeType": "ElementaryTypeName",
													"src": "8298:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint144",
														"typeString": "uint144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8297:9:10"
									},
									"scope": 3855,
									"src": "8241:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2546,
										"nodeType": "Block",
										"src": "8816:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2533,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2527,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2522,
														"src": "8830:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8843:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	},
																	"typeName": {
																		"id": 2529,
																		"name": "uint136",
																		"nodeType": "ElementaryTypeName",
																		"src": "8843:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint136_$",
																		"typeString": "type(uint136)"
																	}
																],
																"id": 2528,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8838:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2531,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8838:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint136",
																"typeString": "type(uint136)"
															}
														},
														"id": 2532,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8852:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8838:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint136",
															"typeString": "uint136"
														}
													},
													"src": "8830:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2540,
												"nodeType": "IfStatement",
												"src": "8826:105:10",
												"trueBody": {
													"id": 2539,
													"nodeType": "Block",
													"src": "8857:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 2535,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8909:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 2536,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2522,
																		"src": "8914:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2534,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "8878:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2537,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8878:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2538,
															"nodeType": "RevertStatement",
															"src": "8871:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2543,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2522,
															"src": "8955:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2542,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "8947:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint136_$",
															"typeString": "type(uint136)"
														},
														"typeName": {
															"id": 2541,
															"name": "uint136",
															"nodeType": "ElementaryTypeName",
															"src": "8947:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2544,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8947:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"functionReturnParameters": 2526,
												"id": 2545,
												"nodeType": "Return",
												"src": "8940:21:10"
											}
										]
									},
									"documentation": {
										"id": 2520,
										"nodeType": "StructuredDocumentation",
										"src": "8465:280:10",
										"text": " @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 2547,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint136",
									"nameLocation": "8759:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2523,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2522,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "8777:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "8769:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2521,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8769:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8768:15:10"
									},
									"returnParameters": {
										"id": 2526,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2525,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2547,
												"src": "8807:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint136",
													"typeString": "uint136"
												},
												"typeName": {
													"id": 2524,
													"name": "uint136",
													"nodeType": "ElementaryTypeName",
													"src": "8807:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint136",
														"typeString": "uint136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8806:9:10"
									},
									"scope": 3855,
									"src": "8750:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2574,
										"nodeType": "Block",
										"src": "9325:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2561,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2555,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2550,
														"src": "9339:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2558,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9352:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	},
																	"typeName": {
																		"id": 2557,
																		"name": "uint128",
																		"nodeType": "ElementaryTypeName",
																		"src": "9352:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint128_$",
																		"typeString": "type(uint128)"
																	}
																],
																"id": 2556,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9347:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2559,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9347:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint128",
																"typeString": "type(uint128)"
															}
														},
														"id": 2560,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9361:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9347:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint128",
															"typeString": "uint128"
														}
													},
													"src": "9339:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2568,
												"nodeType": "IfStatement",
												"src": "9335:105:10",
												"trueBody": {
													"id": 2567,
													"nodeType": "Block",
													"src": "9366:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 2563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9418:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 2564,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2550,
																		"src": "9423:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2562,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "9387:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2565,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9387:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2566,
															"nodeType": "RevertStatement",
															"src": "9380:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2571,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2550,
															"src": "9464:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2570,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9456:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint128_$",
															"typeString": "type(uint128)"
														},
														"typeName": {
															"id": 2569,
															"name": "uint128",
															"nodeType": "ElementaryTypeName",
															"src": "9456:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2572,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9456:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"functionReturnParameters": 2554,
												"id": 2573,
												"nodeType": "Return",
												"src": "9449:21:10"
											}
										]
									},
									"documentation": {
										"id": 2548,
										"nodeType": "StructuredDocumentation",
										"src": "8974:280:10",
										"text": " @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 2575,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint128",
									"nameLocation": "9268:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2550,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9286:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "9278:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2549,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9278:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9277:15:10"
									},
									"returnParameters": {
										"id": 2554,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2553,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2575,
												"src": "9316:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint128",
													"typeString": "uint128"
												},
												"typeName": {
													"id": 2552,
													"name": "uint128",
													"nodeType": "ElementaryTypeName",
													"src": "9316:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint128",
														"typeString": "uint128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9315:9:10"
									},
									"scope": 3855,
									"src": "9259:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2602,
										"nodeType": "Block",
										"src": "9834:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2589,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2583,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2578,
														"src": "9848:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2586,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "9861:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	},
																	"typeName": {
																		"id": 2585,
																		"name": "uint120",
																		"nodeType": "ElementaryTypeName",
																		"src": "9861:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint120_$",
																		"typeString": "type(uint120)"
																	}
																],
																"id": 2584,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "9856:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2587,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9856:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint120",
																"typeString": "type(uint120)"
															}
														},
														"id": 2588,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "9870:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "9856:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint120",
															"typeString": "uint120"
														}
													},
													"src": "9848:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2596,
												"nodeType": "IfStatement",
												"src": "9844:105:10",
												"trueBody": {
													"id": 2595,
													"nodeType": "Block",
													"src": "9875:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 2591,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "9927:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 2592,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2578,
																		"src": "9932:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2590,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "9896:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2593,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "9896:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2594,
															"nodeType": "RevertStatement",
															"src": "9889:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2599,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2578,
															"src": "9973:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2598,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "9965:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint120_$",
															"typeString": "type(uint120)"
														},
														"typeName": {
															"id": 2597,
															"name": "uint120",
															"nodeType": "ElementaryTypeName",
															"src": "9965:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9965:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"functionReturnParameters": 2582,
												"id": 2601,
												"nodeType": "Return",
												"src": "9958:21:10"
											}
										]
									},
									"documentation": {
										"id": 2576,
										"nodeType": "StructuredDocumentation",
										"src": "9483:280:10",
										"text": " @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 2603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint120",
									"nameLocation": "9777:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2579,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2578,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "9795:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "9787:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2577,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "9787:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9786:15:10"
									},
									"returnParameters": {
										"id": 2582,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2581,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2603,
												"src": "9825:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint120",
													"typeString": "uint120"
												},
												"typeName": {
													"id": 2580,
													"name": "uint120",
													"nodeType": "ElementaryTypeName",
													"src": "9825:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint120",
														"typeString": "uint120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9824:9:10"
									},
									"scope": 3855,
									"src": "9768:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2630,
										"nodeType": "Block",
										"src": "10343:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2611,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2606,
														"src": "10357:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10370:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	},
																	"typeName": {
																		"id": 2613,
																		"name": "uint112",
																		"nodeType": "ElementaryTypeName",
																		"src": "10370:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint112_$",
																		"typeString": "type(uint112)"
																	}
																],
																"id": 2612,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10365:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2615,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10365:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint112",
																"typeString": "type(uint112)"
															}
														},
														"id": 2616,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10379:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10365:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint112",
															"typeString": "uint112"
														}
													},
													"src": "10357:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2624,
												"nodeType": "IfStatement",
												"src": "10353:105:10",
												"trueBody": {
													"id": 2623,
													"nodeType": "Block",
													"src": "10384:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 2619,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10436:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 2620,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2606,
																		"src": "10441:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2618,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "10405:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2621,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10405:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2622,
															"nodeType": "RevertStatement",
															"src": "10398:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2627,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2606,
															"src": "10482:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2626,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10474:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint112_$",
															"typeString": "type(uint112)"
														},
														"typeName": {
															"id": 2625,
															"name": "uint112",
															"nodeType": "ElementaryTypeName",
															"src": "10474:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10474:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"functionReturnParameters": 2610,
												"id": 2629,
												"nodeType": "Return",
												"src": "10467:21:10"
											}
										]
									},
									"documentation": {
										"id": 2604,
										"nodeType": "StructuredDocumentation",
										"src": "9992:280:10",
										"text": " @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 2631,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint112",
									"nameLocation": "10286:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2606,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10304:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "10296:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2605,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10296:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10295:15:10"
									},
									"returnParameters": {
										"id": 2610,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2609,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2631,
												"src": "10334:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint112",
													"typeString": "uint112"
												},
												"typeName": {
													"id": 2608,
													"name": "uint112",
													"nodeType": "ElementaryTypeName",
													"src": "10334:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint112",
														"typeString": "uint112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10333:9:10"
									},
									"scope": 3855,
									"src": "10277:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2658,
										"nodeType": "Block",
										"src": "10852:152:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2639,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2634,
														"src": "10866:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2642,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "10879:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	},
																	"typeName": {
																		"id": 2641,
																		"name": "uint104",
																		"nodeType": "ElementaryTypeName",
																		"src": "10879:7:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint104_$",
																		"typeString": "type(uint104)"
																	}
																],
																"id": 2640,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "10874:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2643,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "10874:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint104",
																"typeString": "type(uint104)"
															}
														},
														"id": 2644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "10888:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "10874:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint104",
															"typeString": "uint104"
														}
													},
													"src": "10866:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2652,
												"nodeType": "IfStatement",
												"src": "10862:105:10",
												"trueBody": {
													"id": 2651,
													"nodeType": "Block",
													"src": "10893:74:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 2647,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "10945:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 2648,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2634,
																		"src": "10950:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2646,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "10914:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2649,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "10914:42:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2650,
															"nodeType": "RevertStatement",
															"src": "10907:49:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2655,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2634,
															"src": "10991:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2654,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "10983:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint104_$",
															"typeString": "type(uint104)"
														},
														"typeName": {
															"id": 2653,
															"name": "uint104",
															"nodeType": "ElementaryTypeName",
															"src": "10983:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 2656,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10983:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"functionReturnParameters": 2638,
												"id": 2657,
												"nodeType": "Return",
												"src": "10976:21:10"
											}
										]
									},
									"documentation": {
										"id": 2632,
										"nodeType": "StructuredDocumentation",
										"src": "10501:280:10",
										"text": " @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 2659,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint104",
									"nameLocation": "10795:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2635,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2634,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "10813:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "10805:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2633,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "10805:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10804:15:10"
									},
									"returnParameters": {
										"id": 2638,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2637,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2659,
												"src": "10843:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint104",
													"typeString": "uint104"
												},
												"typeName": {
													"id": 2636,
													"name": "uint104",
													"nodeType": "ElementaryTypeName",
													"src": "10843:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint104",
														"typeString": "uint104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "10842:9:10"
									},
									"scope": 3855,
									"src": "10786:218:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2686,
										"nodeType": "Block",
										"src": "11355:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2667,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2662,
														"src": "11369:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11382:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 2669,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "11382:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 2668,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11377:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2671,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11377:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 2672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11390:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11377:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11369:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2680,
												"nodeType": "IfStatement",
												"src": "11365:103:10",
												"trueBody": {
													"id": 2679,
													"nodeType": "Block",
													"src": "11395:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 2675,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11447:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 2676,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2662,
																		"src": "11451:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2674,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "11416:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2677,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11416:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2678,
															"nodeType": "RevertStatement",
															"src": "11409:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2683,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2662,
															"src": "11491:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2682,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11484:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint96_$",
															"typeString": "type(uint96)"
														},
														"typeName": {
															"id": 2681,
															"name": "uint96",
															"nodeType": "ElementaryTypeName",
															"src": "11484:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11484:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"functionReturnParameters": 2666,
												"id": 2685,
												"nodeType": "Return",
												"src": "11477:20:10"
											}
										]
									},
									"documentation": {
										"id": 2660,
										"nodeType": "StructuredDocumentation",
										"src": "11010:276:10",
										"text": " @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 2687,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint96",
									"nameLocation": "11300:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2663,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2662,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11317:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "11309:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2661,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11309:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11308:15:10"
									},
									"returnParameters": {
										"id": 2666,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2665,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "11347:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												},
												"typeName": {
													"id": 2664,
													"name": "uint96",
													"nodeType": "ElementaryTypeName",
													"src": "11347:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11346:8:10"
									},
									"scope": 3855,
									"src": "11291:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2714,
										"nodeType": "Block",
										"src": "11855:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2701,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2695,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2690,
														"src": "11869:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2698,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "11882:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	},
																	"typeName": {
																		"id": 2697,
																		"name": "uint88",
																		"nodeType": "ElementaryTypeName",
																		"src": "11882:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint88_$",
																		"typeString": "type(uint88)"
																	}
																],
																"id": 2696,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "11877:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11877:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint88",
																"typeString": "type(uint88)"
															}
														},
														"id": 2700,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11890:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "11877:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint88",
															"typeString": "uint88"
														}
													},
													"src": "11869:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2708,
												"nodeType": "IfStatement",
												"src": "11865:103:10",
												"trueBody": {
													"id": 2707,
													"nodeType": "Block",
													"src": "11895:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 2703,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "11947:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 2704,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2690,
																		"src": "11951:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2702,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "11916:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2705,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "11916:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2706,
															"nodeType": "RevertStatement",
															"src": "11909:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2711,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2690,
															"src": "11991:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2710,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "11984:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint88_$",
															"typeString": "type(uint88)"
														},
														"typeName": {
															"id": 2709,
															"name": "uint88",
															"nodeType": "ElementaryTypeName",
															"src": "11984:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2712,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "11984:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"functionReturnParameters": 2694,
												"id": 2713,
												"nodeType": "Return",
												"src": "11977:20:10"
											}
										]
									},
									"documentation": {
										"id": 2688,
										"nodeType": "StructuredDocumentation",
										"src": "11510:276:10",
										"text": " @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 2715,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint88",
									"nameLocation": "11800:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2691,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2690,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "11817:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "11809:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2689,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11809:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11808:15:10"
									},
									"returnParameters": {
										"id": 2694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2693,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2715,
												"src": "11847:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint88",
													"typeString": "uint88"
												},
												"typeName": {
													"id": 2692,
													"name": "uint88",
													"nodeType": "ElementaryTypeName",
													"src": "11847:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint88",
														"typeString": "uint88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11846:8:10"
									},
									"scope": 3855,
									"src": "11791:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2742,
										"nodeType": "Block",
										"src": "12355:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2723,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2718,
														"src": "12369:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2726,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12382:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	},
																	"typeName": {
																		"id": 2725,
																		"name": "uint80",
																		"nodeType": "ElementaryTypeName",
																		"src": "12382:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint80_$",
																		"typeString": "type(uint80)"
																	}
																],
																"id": 2724,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12377:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2727,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12377:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint80",
																"typeString": "type(uint80)"
															}
														},
														"id": 2728,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12390:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12377:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint80",
															"typeString": "uint80"
														}
													},
													"src": "12369:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2736,
												"nodeType": "IfStatement",
												"src": "12365:103:10",
												"trueBody": {
													"id": 2735,
													"nodeType": "Block",
													"src": "12395:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 2731,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12447:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 2732,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2718,
																		"src": "12451:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2730,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "12416:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2733,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12416:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2734,
															"nodeType": "RevertStatement",
															"src": "12409:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2739,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2718,
															"src": "12491:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2738,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12484:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint80_$",
															"typeString": "type(uint80)"
														},
														"typeName": {
															"id": 2737,
															"name": "uint80",
															"nodeType": "ElementaryTypeName",
															"src": "12484:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2740,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12484:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"functionReturnParameters": 2722,
												"id": 2741,
												"nodeType": "Return",
												"src": "12477:20:10"
											}
										]
									},
									"documentation": {
										"id": 2716,
										"nodeType": "StructuredDocumentation",
										"src": "12010:276:10",
										"text": " @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 2743,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint80",
									"nameLocation": "12300:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2719,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2718,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12317:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "12309:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2717,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12309:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12308:15:10"
									},
									"returnParameters": {
										"id": 2722,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2721,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2743,
												"src": "12347:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint80",
													"typeString": "uint80"
												},
												"typeName": {
													"id": 2720,
													"name": "uint80",
													"nodeType": "ElementaryTypeName",
													"src": "12347:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint80",
														"typeString": "uint80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12346:8:10"
									},
									"scope": 3855,
									"src": "12291:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2770,
										"nodeType": "Block",
										"src": "12855:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2751,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2746,
														"src": "12869:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2754,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "12882:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	},
																	"typeName": {
																		"id": 2753,
																		"name": "uint72",
																		"nodeType": "ElementaryTypeName",
																		"src": "12882:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint72_$",
																		"typeString": "type(uint72)"
																	}
																],
																"id": 2752,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "12877:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2755,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12877:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint72",
																"typeString": "type(uint72)"
															}
														},
														"id": 2756,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12890:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "12877:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint72",
															"typeString": "uint72"
														}
													},
													"src": "12869:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2764,
												"nodeType": "IfStatement",
												"src": "12865:103:10",
												"trueBody": {
													"id": 2763,
													"nodeType": "Block",
													"src": "12895:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 2759,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "12947:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 2760,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2746,
																		"src": "12951:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2758,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "12916:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2761,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "12916:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2762,
															"nodeType": "RevertStatement",
															"src": "12909:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2767,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2746,
															"src": "12991:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2766,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "12984:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint72_$",
															"typeString": "type(uint72)"
														},
														"typeName": {
															"id": 2765,
															"name": "uint72",
															"nodeType": "ElementaryTypeName",
															"src": "12984:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12984:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"functionReturnParameters": 2750,
												"id": 2769,
												"nodeType": "Return",
												"src": "12977:20:10"
											}
										]
									},
									"documentation": {
										"id": 2744,
										"nodeType": "StructuredDocumentation",
										"src": "12510:276:10",
										"text": " @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 2771,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint72",
									"nameLocation": "12800:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2747,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2746,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "12817:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2771,
												"src": "12809:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2745,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12809:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12808:15:10"
									},
									"returnParameters": {
										"id": 2750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2749,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2771,
												"src": "12847:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint72",
													"typeString": "uint72"
												},
												"typeName": {
													"id": 2748,
													"name": "uint72",
													"nodeType": "ElementaryTypeName",
													"src": "12847:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint72",
														"typeString": "uint72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12846:8:10"
									},
									"scope": 3855,
									"src": "12791:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2798,
										"nodeType": "Block",
										"src": "13355:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2779,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2774,
														"src": "13369:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13382:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 2781,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "13382:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 2780,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13377:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2783,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13377:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 2784,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13390:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13377:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "13369:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2792,
												"nodeType": "IfStatement",
												"src": "13365:103:10",
												"trueBody": {
													"id": 2791,
													"nodeType": "Block",
													"src": "13395:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 2787,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13447:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 2788,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2774,
																		"src": "13451:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2786,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "13416:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2789,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13416:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2790,
															"nodeType": "RevertStatement",
															"src": "13409:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2795,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2774,
															"src": "13491:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2794,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13484:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint64_$",
															"typeString": "type(uint64)"
														},
														"typeName": {
															"id": 2793,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "13484:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13484:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 2778,
												"id": 2797,
												"nodeType": "Return",
												"src": "13477:20:10"
											}
										]
									},
									"documentation": {
										"id": 2772,
										"nodeType": "StructuredDocumentation",
										"src": "13010:276:10",
										"text": " @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 2799,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint64",
									"nameLocation": "13300:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2775,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2774,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13317:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "13309:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2773,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13309:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13308:15:10"
									},
									"returnParameters": {
										"id": 2778,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2777,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2799,
												"src": "13347:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 2776,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "13347:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13346:8:10"
									},
									"scope": 3855,
									"src": "13291:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2826,
										"nodeType": "Block",
										"src": "13855:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2813,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2807,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2802,
														"src": "13869:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2810,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13882:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	},
																	"typeName": {
																		"id": 2809,
																		"name": "uint56",
																		"nodeType": "ElementaryTypeName",
																		"src": "13882:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint56_$",
																		"typeString": "type(uint56)"
																	}
																],
																"id": 2808,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13877:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2811,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13877:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint56",
																"typeString": "type(uint56)"
															}
														},
														"id": 2812,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13890:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13877:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint56",
															"typeString": "uint56"
														}
													},
													"src": "13869:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2820,
												"nodeType": "IfStatement",
												"src": "13865:103:10",
												"trueBody": {
													"id": 2819,
													"nodeType": "Block",
													"src": "13895:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 2815,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "13947:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 2816,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2802,
																		"src": "13951:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2814,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "13916:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2817,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "13916:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2818,
															"nodeType": "RevertStatement",
															"src": "13909:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2823,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2802,
															"src": "13991:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2822,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "13984:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint56_$",
															"typeString": "type(uint56)"
														},
														"typeName": {
															"id": 2821,
															"name": "uint56",
															"nodeType": "ElementaryTypeName",
															"src": "13984:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2824,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13984:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"functionReturnParameters": 2806,
												"id": 2825,
												"nodeType": "Return",
												"src": "13977:20:10"
											}
										]
									},
									"documentation": {
										"id": 2800,
										"nodeType": "StructuredDocumentation",
										"src": "13510:276:10",
										"text": " @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 2827,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint56",
									"nameLocation": "13800:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2802,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "13817:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "13809:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2801,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "13809:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13808:15:10"
									},
									"returnParameters": {
										"id": 2806,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2805,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2827,
												"src": "13847:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint56",
													"typeString": "uint56"
												},
												"typeName": {
													"id": 2804,
													"name": "uint56",
													"nodeType": "ElementaryTypeName",
													"src": "13847:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint56",
														"typeString": "uint56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13846:8:10"
									},
									"scope": 3855,
									"src": "13791:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2854,
										"nodeType": "Block",
										"src": "14355:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2835,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2830,
														"src": "14369:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14382:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	},
																	"typeName": {
																		"id": 2837,
																		"name": "uint48",
																		"nodeType": "ElementaryTypeName",
																		"src": "14382:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint48_$",
																		"typeString": "type(uint48)"
																	}
																],
																"id": 2836,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14377:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2839,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14377:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint48",
																"typeString": "type(uint48)"
															}
														},
														"id": 2840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14390:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14377:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint48",
															"typeString": "uint48"
														}
													},
													"src": "14369:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2848,
												"nodeType": "IfStatement",
												"src": "14365:103:10",
												"trueBody": {
													"id": 2847,
													"nodeType": "Block",
													"src": "14395:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 2843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14447:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 2844,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2830,
																		"src": "14451:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2842,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "14416:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2845,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14416:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2846,
															"nodeType": "RevertStatement",
															"src": "14409:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2851,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2830,
															"src": "14491:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2850,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14484:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint48_$",
															"typeString": "type(uint48)"
														},
														"typeName": {
															"id": 2849,
															"name": "uint48",
															"nodeType": "ElementaryTypeName",
															"src": "14484:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14484:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"functionReturnParameters": 2834,
												"id": 2853,
												"nodeType": "Return",
												"src": "14477:20:10"
											}
										]
									},
									"documentation": {
										"id": 2828,
										"nodeType": "StructuredDocumentation",
										"src": "14010:276:10",
										"text": " @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 2855,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint48",
									"nameLocation": "14300:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2830,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14317:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "14309:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2829,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14309:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14308:15:10"
									},
									"returnParameters": {
										"id": 2834,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2833,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2855,
												"src": "14347:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint48",
													"typeString": "uint48"
												},
												"typeName": {
													"id": 2832,
													"name": "uint48",
													"nodeType": "ElementaryTypeName",
													"src": "14347:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint48",
														"typeString": "uint48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14346:8:10"
									},
									"scope": 3855,
									"src": "14291:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2882,
										"nodeType": "Block",
										"src": "14855:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2869,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2863,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2858,
														"src": "14869:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "14882:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	},
																	"typeName": {
																		"id": 2865,
																		"name": "uint40",
																		"nodeType": "ElementaryTypeName",
																		"src": "14882:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint40_$",
																		"typeString": "type(uint40)"
																	}
																],
																"id": 2864,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "14877:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2867,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "14877:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint40",
																"typeString": "type(uint40)"
															}
														},
														"id": 2868,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14890:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "14877:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint40",
															"typeString": "uint40"
														}
													},
													"src": "14869:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2876,
												"nodeType": "IfStatement",
												"src": "14865:103:10",
												"trueBody": {
													"id": 2875,
													"nodeType": "Block",
													"src": "14895:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 2871,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "14947:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 2872,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2858,
																		"src": "14951:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2870,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "14916:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "14916:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2874,
															"nodeType": "RevertStatement",
															"src": "14909:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2879,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2858,
															"src": "14991:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2878,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "14984:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint40_$",
															"typeString": "type(uint40)"
														},
														"typeName": {
															"id": 2877,
															"name": "uint40",
															"nodeType": "ElementaryTypeName",
															"src": "14984:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14984:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"functionReturnParameters": 2862,
												"id": 2881,
												"nodeType": "Return",
												"src": "14977:20:10"
											}
										]
									},
									"documentation": {
										"id": 2856,
										"nodeType": "StructuredDocumentation",
										"src": "14510:276:10",
										"text": " @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 2883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint40",
									"nameLocation": "14800:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2858,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "14817:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "14809:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "14809:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14808:15:10"
									},
									"returnParameters": {
										"id": 2862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "14847:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint40",
													"typeString": "uint40"
												},
												"typeName": {
													"id": 2860,
													"name": "uint40",
													"nodeType": "ElementaryTypeName",
													"src": "14847:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint40",
														"typeString": "uint40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14846:8:10"
									},
									"scope": 3855,
									"src": "14791:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2910,
										"nodeType": "Block",
										"src": "15355:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2897,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2891,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2886,
														"src": "15369:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2894,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15382:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	},
																	"typeName": {
																		"id": 2893,
																		"name": "uint32",
																		"nodeType": "ElementaryTypeName",
																		"src": "15382:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint32_$",
																		"typeString": "type(uint32)"
																	}
																],
																"id": 2892,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15377:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2895,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15377:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint32",
																"typeString": "type(uint32)"
															}
														},
														"id": 2896,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15390:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15377:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint32",
															"typeString": "uint32"
														}
													},
													"src": "15369:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2904,
												"nodeType": "IfStatement",
												"src": "15365:103:10",
												"trueBody": {
													"id": 2903,
													"nodeType": "Block",
													"src": "15395:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 2899,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15447:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 2900,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2886,
																		"src": "15451:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2898,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "15416:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2901,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15416:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2902,
															"nodeType": "RevertStatement",
															"src": "15409:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2907,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2886,
															"src": "15491:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2906,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15484:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint32_$",
															"typeString": "type(uint32)"
														},
														"typeName": {
															"id": 2905,
															"name": "uint32",
															"nodeType": "ElementaryTypeName",
															"src": "15484:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2908,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15484:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"functionReturnParameters": 2890,
												"id": 2909,
												"nodeType": "Return",
												"src": "15477:20:10"
											}
										]
									},
									"documentation": {
										"id": 2884,
										"nodeType": "StructuredDocumentation",
										"src": "15010:276:10",
										"text": " @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 2911,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint32",
									"nameLocation": "15300:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2887,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2886,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15317:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2911,
												"src": "15309:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2885,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15309:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15308:15:10"
									},
									"returnParameters": {
										"id": 2890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2889,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2911,
												"src": "15347:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint32",
													"typeString": "uint32"
												},
												"typeName": {
													"id": 2888,
													"name": "uint32",
													"nodeType": "ElementaryTypeName",
													"src": "15347:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint32",
														"typeString": "uint32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15346:8:10"
									},
									"scope": 3855,
									"src": "15291:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2938,
										"nodeType": "Block",
										"src": "15855:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2925,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2919,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2914,
														"src": "15869:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2922,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "15882:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	},
																	"typeName": {
																		"id": 2921,
																		"name": "uint24",
																		"nodeType": "ElementaryTypeName",
																		"src": "15882:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint24_$",
																		"typeString": "type(uint24)"
																	}
																],
																"id": 2920,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "15877:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2923,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "15877:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint24",
																"typeString": "type(uint24)"
															}
														},
														"id": 2924,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15890:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "15877:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint24",
															"typeString": "uint24"
														}
													},
													"src": "15869:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2932,
												"nodeType": "IfStatement",
												"src": "15865:103:10",
												"trueBody": {
													"id": 2931,
													"nodeType": "Block",
													"src": "15895:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 2927,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "15947:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 2928,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2914,
																		"src": "15951:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2926,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "15916:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2929,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "15916:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2930,
															"nodeType": "RevertStatement",
															"src": "15909:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2935,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2914,
															"src": "15991:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2934,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "15984:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint24_$",
															"typeString": "type(uint24)"
														},
														"typeName": {
															"id": 2933,
															"name": "uint24",
															"nodeType": "ElementaryTypeName",
															"src": "15984:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2936,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15984:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"functionReturnParameters": 2918,
												"id": 2937,
												"nodeType": "Return",
												"src": "15977:20:10"
											}
										]
									},
									"documentation": {
										"id": 2912,
										"nodeType": "StructuredDocumentation",
										"src": "15510:276:10",
										"text": " @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 2939,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint24",
									"nameLocation": "15800:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2915,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2914,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "15817:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "15809:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2913,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "15809:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15808:15:10"
									},
									"returnParameters": {
										"id": 2918,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2917,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2939,
												"src": "15847:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint24",
													"typeString": "uint24"
												},
												"typeName": {
													"id": 2916,
													"name": "uint24",
													"nodeType": "ElementaryTypeName",
													"src": "15847:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint24",
														"typeString": "uint24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15846:8:10"
									},
									"scope": 3855,
									"src": "15791:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2966,
										"nodeType": "Block",
										"src": "16355:149:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2953,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2947,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2942,
														"src": "16369:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2950,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16382:6:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	},
																	"typeName": {
																		"id": 2949,
																		"name": "uint16",
																		"nodeType": "ElementaryTypeName",
																		"src": "16382:6:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint16_$",
																		"typeString": "type(uint16)"
																	}
																],
																"id": 2948,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16377:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2951,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16377:12:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint16",
																"typeString": "type(uint16)"
															}
														},
														"id": 2952,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16390:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16377:16:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "16369:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2960,
												"nodeType": "IfStatement",
												"src": "16365:103:10",
												"trueBody": {
													"id": 2959,
													"nodeType": "Block",
													"src": "16395:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 2955,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16447:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 2956,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2942,
																		"src": "16451:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2954,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "16416:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2957,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16416:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2958,
															"nodeType": "RevertStatement",
															"src": "16409:48:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2963,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2942,
															"src": "16491:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2962,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16484:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint16_$",
															"typeString": "type(uint16)"
														},
														"typeName": {
															"id": 2961,
															"name": "uint16",
															"nodeType": "ElementaryTypeName",
															"src": "16484:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 2964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16484:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"functionReturnParameters": 2946,
												"id": 2965,
												"nodeType": "Return",
												"src": "16477:20:10"
											}
										]
									},
									"documentation": {
										"id": 2940,
										"nodeType": "StructuredDocumentation",
										"src": "16010:276:10",
										"text": " @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 2967,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint16",
									"nameLocation": "16300:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2943,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2942,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16317:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "16309:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2941,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16309:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16308:15:10"
									},
									"returnParameters": {
										"id": 2946,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2945,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2967,
												"src": "16347:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 2944,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "16347:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16346:8:10"
									},
									"scope": 3855,
									"src": "16291:213:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2994,
										"nodeType": "Block",
										"src": "16849:146:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2975,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2970,
														"src": "16863:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 2978,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "16876:5:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	},
																	"typeName": {
																		"id": 2977,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "16876:5:10",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint8_$",
																		"typeString": "type(uint8)"
																	}
																],
																"id": 2976,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "16871:4:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 2979,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "16871:11:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint8",
																"typeString": "type(uint8)"
															}
														},
														"id": 2980,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "16883:3:10",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "16871:15:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "16863:23:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2988,
												"nodeType": "IfStatement",
												"src": "16859:101:10",
												"trueBody": {
													"id": 2987,
													"nodeType": "Block",
													"src": "16888:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 2983,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "16940:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 2984,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2970,
																		"src": "16943:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 2982,
																	"name": "SafeCastOverflowedUintDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2110,
																	"src": "16909:30:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint8,uint256) pure returns (error)"
																	}
																},
																"id": 2985,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "16909:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 2986,
															"nodeType": "RevertStatement",
															"src": "16902:47:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2991,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2970,
															"src": "16982:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2990,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "16976:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint8_$",
															"typeString": "type(uint8)"
														},
														"typeName": {
															"id": 2989,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "16976:5:10",
															"typeDescriptions": {}
														}
													},
													"id": 2992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "16976:12:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 2974,
												"id": 2993,
												"nodeType": "Return",
												"src": "16969:19:10"
											}
										]
									},
									"documentation": {
										"id": 2968,
										"nodeType": "StructuredDocumentation",
										"src": "16510:272:10",
										"text": " @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 2995,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint8",
									"nameLocation": "16796:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2970,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "16812:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 2995,
												"src": "16804:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2969,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "16804:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16803:15:10"
									},
									"returnParameters": {
										"id": 2974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2973,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2995,
												"src": "16842:5:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 2972,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16842:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16841:7:10"
									},
									"scope": 3855,
									"src": "16787:208:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3017,
										"nodeType": "Block",
										"src": "17231:128:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3003,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2998,
														"src": "17245:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"hexValue": "30",
														"id": 3004,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "17253:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "17245:9:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3011,
												"nodeType": "IfStatement",
												"src": "17241:81:10",
												"trueBody": {
													"id": 3010,
													"nodeType": "Block",
													"src": "17256:66:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3007,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2998,
																		"src": "17305:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3006,
																	"name": "SafeCastOverflowedIntToUint",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2115,
																	"src": "17277:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_int256_$returns$_t_error_$",
																		"typeString": "function (int256) pure returns (error)"
																	}
																},
																"id": 3008,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17277:34:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3009,
															"nodeType": "RevertStatement",
															"src": "17270:41:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3014,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2998,
															"src": "17346:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_int256",
																"typeString": "int256"
															}
														],
														"id": 3013,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "17338:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_uint256_$",
															"typeString": "type(uint256)"
														},
														"typeName": {
															"id": 3012,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "17338:7:10",
															"typeDescriptions": {}
														}
													},
													"id": 3015,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "17338:14:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 3002,
												"id": 3016,
												"nodeType": "Return",
												"src": "17331:21:10"
											}
										]
									},
									"documentation": {
										"id": 2996,
										"nodeType": "StructuredDocumentation",
										"src": "17001:160:10",
										"text": " @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0."
									},
									"id": 3018,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toUint256",
									"nameLocation": "17175:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2999,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2998,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17192:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "17185:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 2997,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17185:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17184:14:10"
									},
									"returnParameters": {
										"id": 3002,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3001,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3018,
												"src": "17222:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3000,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "17222:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17221:9:10"
									},
									"scope": 3855,
									"src": "17166:193:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3043,
										"nodeType": "Block",
										"src": "17756:150:10",
										"statements": [
											{
												"expression": {
													"id": 3031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3026,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3024,
														"src": "17766:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3029,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3021,
																"src": "17786:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3028,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "17779:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int248_$",
																"typeString": "type(int248)"
															},
															"typeName": {
																"id": 3027,
																"name": "int248",
																"nodeType": "ElementaryTypeName",
																"src": "17779:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3030,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "17779:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"src": "17766:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"id": 3032,
												"nodeType": "ExpressionStatement",
												"src": "17766:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3035,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3033,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3024,
														"src": "17806:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int248",
															"typeString": "int248"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3034,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3021,
														"src": "17820:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "17806:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3042,
												"nodeType": "IfStatement",
												"src": "17802:98:10",
												"trueBody": {
													"id": 3041,
													"nodeType": "Block",
													"src": "17827:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323438",
																		"id": 3037,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "17878:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		"value": "248"
																	},
																	{
																		"id": 3038,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3021,
																		"src": "17883:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_248_by_1",
																			"typeString": "int_const 248"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3036,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "17848:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3039,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "17848:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3040,
															"nodeType": "RevertStatement",
															"src": "17841:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3019,
										"nodeType": "StructuredDocumentation",
										"src": "17365:312:10",
										"text": " @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits"
									},
									"id": 3044,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt248",
									"nameLocation": "17691:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3022,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3021,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "17707:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "17700:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3020,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "17700:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17699:14:10"
									},
									"returnParameters": {
										"id": 3025,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3024,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "17744:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3044,
												"src": "17737:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int248",
													"typeString": "int248"
												},
												"typeName": {
													"id": 3023,
													"name": "int248",
													"nodeType": "ElementaryTypeName",
													"src": "17737:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int248",
														"typeString": "int248"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "17736:19:10"
									},
									"scope": 3855,
									"src": "17682:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3069,
										"nodeType": "Block",
										"src": "18303:150:10",
										"statements": [
											{
												"expression": {
													"id": 3057,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3052,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3050,
														"src": "18313:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3055,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3047,
																"src": "18333:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18326:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int240_$",
																"typeString": "type(int240)"
															},
															"typeName": {
																"id": 3053,
																"name": "int240",
																"nodeType": "ElementaryTypeName",
																"src": "18326:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3056,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18326:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"src": "18313:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"id": 3058,
												"nodeType": "ExpressionStatement",
												"src": "18313:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3061,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3059,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3050,
														"src": "18353:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int240",
															"typeString": "int240"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3060,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3047,
														"src": "18367:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18353:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3068,
												"nodeType": "IfStatement",
												"src": "18349:98:10",
												"trueBody": {
													"id": 3067,
													"nodeType": "Block",
													"src": "18374:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323430",
																		"id": 3063,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18425:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		"value": "240"
																	},
																	{
																		"id": 3064,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3047,
																		"src": "18430:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_240_by_1",
																			"typeString": "int_const 240"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3062,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "18395:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3065,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18395:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3066,
															"nodeType": "RevertStatement",
															"src": "18388:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3045,
										"nodeType": "StructuredDocumentation",
										"src": "17912:312:10",
										"text": " @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits"
									},
									"id": 3070,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt240",
									"nameLocation": "18238:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3048,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3047,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18254:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "18247:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3046,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18247:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18246:14:10"
									},
									"returnParameters": {
										"id": 3051,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3050,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18291:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3070,
												"src": "18284:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int240",
													"typeString": "int240"
												},
												"typeName": {
													"id": 3049,
													"name": "int240",
													"nodeType": "ElementaryTypeName",
													"src": "18284:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int240",
														"typeString": "int240"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18283:19:10"
									},
									"scope": 3855,
									"src": "18229:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3095,
										"nodeType": "Block",
										"src": "18850:150:10",
										"statements": [
											{
												"expression": {
													"id": 3083,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3078,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3076,
														"src": "18860:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3081,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3073,
																"src": "18880:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3080,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "18873:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int232_$",
																"typeString": "type(int232)"
															},
															"typeName": {
																"id": 3079,
																"name": "int232",
																"nodeType": "ElementaryTypeName",
																"src": "18873:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3082,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "18873:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"src": "18860:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"id": 3084,
												"nodeType": "ExpressionStatement",
												"src": "18860:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3085,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3076,
														"src": "18900:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int232",
															"typeString": "int232"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3086,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3073,
														"src": "18914:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "18900:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3094,
												"nodeType": "IfStatement",
												"src": "18896:98:10",
												"trueBody": {
													"id": 3093,
													"nodeType": "Block",
													"src": "18921:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323332",
																		"id": 3089,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "18972:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		"value": "232"
																	},
																	{
																		"id": 3090,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3073,
																		"src": "18977:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_232_by_1",
																			"typeString": "int_const 232"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3088,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "18942:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3091,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "18942:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3092,
															"nodeType": "RevertStatement",
															"src": "18935:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3071,
										"nodeType": "StructuredDocumentation",
										"src": "18459:312:10",
										"text": " @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits"
									},
									"id": 3096,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt232",
									"nameLocation": "18785:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3073,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "18801:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "18794:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3072,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "18794:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18793:14:10"
									},
									"returnParameters": {
										"id": 3077,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3076,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "18838:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3096,
												"src": "18831:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int232",
													"typeString": "int232"
												},
												"typeName": {
													"id": 3075,
													"name": "int232",
													"nodeType": "ElementaryTypeName",
													"src": "18831:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int232",
														"typeString": "int232"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "18830:19:10"
									},
									"scope": 3855,
									"src": "18776:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3121,
										"nodeType": "Block",
										"src": "19397:150:10",
										"statements": [
											{
												"expression": {
													"id": 3109,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3104,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3102,
														"src": "19407:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3107,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3099,
																"src": "19427:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3106,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19420:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int224_$",
																"typeString": "type(int224)"
															},
															"typeName": {
																"id": 3105,
																"name": "int224",
																"nodeType": "ElementaryTypeName",
																"src": "19420:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3108,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19420:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"src": "19407:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"id": 3110,
												"nodeType": "ExpressionStatement",
												"src": "19407:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3113,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3111,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3102,
														"src": "19447:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int224",
															"typeString": "int224"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3112,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3099,
														"src": "19461:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19447:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3120,
												"nodeType": "IfStatement",
												"src": "19443:98:10",
												"trueBody": {
													"id": 3119,
													"nodeType": "Block",
													"src": "19468:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323234",
																		"id": 3115,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "19519:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		"value": "224"
																	},
																	{
																		"id": 3116,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3099,
																		"src": "19524:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_224_by_1",
																			"typeString": "int_const 224"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3114,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "19489:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3117,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "19489:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3118,
															"nodeType": "RevertStatement",
															"src": "19482:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3097,
										"nodeType": "StructuredDocumentation",
										"src": "19006:312:10",
										"text": " @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits"
									},
									"id": 3122,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt224",
									"nameLocation": "19332:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3099,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19348:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "19341:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3098,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19341:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19340:14:10"
									},
									"returnParameters": {
										"id": 3103,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3102,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19385:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3122,
												"src": "19378:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int224",
													"typeString": "int224"
												},
												"typeName": {
													"id": 3101,
													"name": "int224",
													"nodeType": "ElementaryTypeName",
													"src": "19378:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int224",
														"typeString": "int224"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19377:19:10"
									},
									"scope": 3855,
									"src": "19323:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3147,
										"nodeType": "Block",
										"src": "19944:150:10",
										"statements": [
											{
												"expression": {
													"id": 3135,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3130,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3128,
														"src": "19954:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3133,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3125,
																"src": "19974:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3132,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "19967:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int216_$",
																"typeString": "type(int216)"
															},
															"typeName": {
																"id": 3131,
																"name": "int216",
																"nodeType": "ElementaryTypeName",
																"src": "19967:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3134,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "19967:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"src": "19954:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"id": 3136,
												"nodeType": "ExpressionStatement",
												"src": "19954:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3139,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3137,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3128,
														"src": "19994:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int216",
															"typeString": "int216"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3138,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3125,
														"src": "20008:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "19994:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3146,
												"nodeType": "IfStatement",
												"src": "19990:98:10",
												"trueBody": {
													"id": 3145,
													"nodeType": "Block",
													"src": "20015:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323136",
																		"id": 3141,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20066:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		"value": "216"
																	},
																	{
																		"id": 3142,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3125,
																		"src": "20071:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_216_by_1",
																			"typeString": "int_const 216"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3140,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "20036:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3143,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20036:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3144,
															"nodeType": "RevertStatement",
															"src": "20029:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3123,
										"nodeType": "StructuredDocumentation",
										"src": "19553:312:10",
										"text": " @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits"
									},
									"id": 3148,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt216",
									"nameLocation": "19879:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3126,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3125,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "19895:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3148,
												"src": "19888:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3124,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "19888:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19887:14:10"
									},
									"returnParameters": {
										"id": 3129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3128,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "19932:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3148,
												"src": "19925:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int216",
													"typeString": "int216"
												},
												"typeName": {
													"id": 3127,
													"name": "int216",
													"nodeType": "ElementaryTypeName",
													"src": "19925:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int216",
														"typeString": "int216"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "19924:19:10"
									},
									"scope": 3855,
									"src": "19870:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3173,
										"nodeType": "Block",
										"src": "20491:150:10",
										"statements": [
											{
												"expression": {
													"id": 3161,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3156,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3154,
														"src": "20501:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3159,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3151,
																"src": "20521:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3158,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "20514:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int208_$",
																"typeString": "type(int208)"
															},
															"typeName": {
																"id": 3157,
																"name": "int208",
																"nodeType": "ElementaryTypeName",
																"src": "20514:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3160,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "20514:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"src": "20501:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"id": 3162,
												"nodeType": "ExpressionStatement",
												"src": "20501:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3165,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3163,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3154,
														"src": "20541:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int208",
															"typeString": "int208"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3164,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3151,
														"src": "20555:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "20541:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3172,
												"nodeType": "IfStatement",
												"src": "20537:98:10",
												"trueBody": {
													"id": 3171,
													"nodeType": "Block",
													"src": "20562:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323038",
																		"id": 3167,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "20613:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		"value": "208"
																	},
																	{
																		"id": 3168,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3151,
																		"src": "20618:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_208_by_1",
																			"typeString": "int_const 208"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3166,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "20583:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3169,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "20583:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3170,
															"nodeType": "RevertStatement",
															"src": "20576:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3149,
										"nodeType": "StructuredDocumentation",
										"src": "20100:312:10",
										"text": " @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits"
									},
									"id": 3174,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt208",
									"nameLocation": "20426:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3152,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3151,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20442:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "20435:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3150,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20435:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20434:14:10"
									},
									"returnParameters": {
										"id": 3155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3154,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "20479:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3174,
												"src": "20472:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int208",
													"typeString": "int208"
												},
												"typeName": {
													"id": 3153,
													"name": "int208",
													"nodeType": "ElementaryTypeName",
													"src": "20472:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int208",
														"typeString": "int208"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20471:19:10"
									},
									"scope": 3855,
									"src": "20417:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3199,
										"nodeType": "Block",
										"src": "21038:150:10",
										"statements": [
											{
												"expression": {
													"id": 3187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3182,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3180,
														"src": "21048:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3185,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3177,
																"src": "21068:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3184,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21061:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int200_$",
																"typeString": "type(int200)"
															},
															"typeName": {
																"id": 3183,
																"name": "int200",
																"nodeType": "ElementaryTypeName",
																"src": "21061:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3186,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21061:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"src": "21048:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"id": 3188,
												"nodeType": "ExpressionStatement",
												"src": "21048:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3189,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3180,
														"src": "21088:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int200",
															"typeString": "int200"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3190,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3177,
														"src": "21102:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21088:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3198,
												"nodeType": "IfStatement",
												"src": "21084:98:10",
												"trueBody": {
													"id": 3197,
													"nodeType": "Block",
													"src": "21109:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "323030",
																		"id": 3193,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21160:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		"value": "200"
																	},
																	{
																		"id": 3194,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3177,
																		"src": "21165:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_200_by_1",
																			"typeString": "int_const 200"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3192,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "21130:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3195,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21130:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3196,
															"nodeType": "RevertStatement",
															"src": "21123:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3175,
										"nodeType": "StructuredDocumentation",
										"src": "20647:312:10",
										"text": " @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits"
									},
									"id": 3200,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt200",
									"nameLocation": "20973:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3177,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "20989:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3200,
												"src": "20982:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3176,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "20982:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "20981:14:10"
									},
									"returnParameters": {
										"id": 3181,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3180,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21026:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3200,
												"src": "21019:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int200",
													"typeString": "int200"
												},
												"typeName": {
													"id": 3179,
													"name": "int200",
													"nodeType": "ElementaryTypeName",
													"src": "21019:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int200",
														"typeString": "int200"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21018:19:10"
									},
									"scope": 3855,
									"src": "20964:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3225,
										"nodeType": "Block",
										"src": "21585:150:10",
										"statements": [
											{
												"expression": {
													"id": 3213,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3208,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3206,
														"src": "21595:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3211,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3203,
																"src": "21615:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3210,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "21608:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int192_$",
																"typeString": "type(int192)"
															},
															"typeName": {
																"id": 3209,
																"name": "int192",
																"nodeType": "ElementaryTypeName",
																"src": "21608:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3212,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "21608:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"src": "21595:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"id": 3214,
												"nodeType": "ExpressionStatement",
												"src": "21595:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3217,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3215,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3206,
														"src": "21635:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int192",
															"typeString": "int192"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3216,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3203,
														"src": "21649:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "21635:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3224,
												"nodeType": "IfStatement",
												"src": "21631:98:10",
												"trueBody": {
													"id": 3223,
													"nodeType": "Block",
													"src": "21656:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313932",
																		"id": 3219,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "21707:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		"value": "192"
																	},
																	{
																		"id": 3220,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3203,
																		"src": "21712:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_192_by_1",
																			"typeString": "int_const 192"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3218,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "21677:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3221,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "21677:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3222,
															"nodeType": "RevertStatement",
															"src": "21670:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3201,
										"nodeType": "StructuredDocumentation",
										"src": "21194:312:10",
										"text": " @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits"
									},
									"id": 3226,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt192",
									"nameLocation": "21520:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3203,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "21536:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3226,
												"src": "21529:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3202,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "21529:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21528:14:10"
									},
									"returnParameters": {
										"id": 3207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3206,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "21573:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3226,
												"src": "21566:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int192",
													"typeString": "int192"
												},
												"typeName": {
													"id": 3205,
													"name": "int192",
													"nodeType": "ElementaryTypeName",
													"src": "21566:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int192",
														"typeString": "int192"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "21565:19:10"
									},
									"scope": 3855,
									"src": "21511:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3251,
										"nodeType": "Block",
										"src": "22132:150:10",
										"statements": [
											{
												"expression": {
													"id": 3239,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3234,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3232,
														"src": "22142:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3237,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3229,
																"src": "22162:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3236,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22155:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int184_$",
																"typeString": "type(int184)"
															},
															"typeName": {
																"id": 3235,
																"name": "int184",
																"nodeType": "ElementaryTypeName",
																"src": "22155:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3238,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22155:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"src": "22142:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"id": 3240,
												"nodeType": "ExpressionStatement",
												"src": "22142:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3243,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3241,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3232,
														"src": "22182:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int184",
															"typeString": "int184"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3242,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3229,
														"src": "22196:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22182:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3250,
												"nodeType": "IfStatement",
												"src": "22178:98:10",
												"trueBody": {
													"id": 3249,
													"nodeType": "Block",
													"src": "22203:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313834",
																		"id": 3245,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22254:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		"value": "184"
																	},
																	{
																		"id": 3246,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3229,
																		"src": "22259:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_184_by_1",
																			"typeString": "int_const 184"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3244,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "22224:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3247,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22224:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3248,
															"nodeType": "RevertStatement",
															"src": "22217:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3227,
										"nodeType": "StructuredDocumentation",
										"src": "21741:312:10",
										"text": " @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits"
									},
									"id": 3252,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt184",
									"nameLocation": "22067:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3229,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22083:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3252,
												"src": "22076:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3228,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22076:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22075:14:10"
									},
									"returnParameters": {
										"id": 3233,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3232,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22120:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3252,
												"src": "22113:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int184",
													"typeString": "int184"
												},
												"typeName": {
													"id": 3231,
													"name": "int184",
													"nodeType": "ElementaryTypeName",
													"src": "22113:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int184",
														"typeString": "int184"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22112:19:10"
									},
									"scope": 3855,
									"src": "22058:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3277,
										"nodeType": "Block",
										"src": "22679:150:10",
										"statements": [
											{
												"expression": {
													"id": 3265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3260,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3258,
														"src": "22689:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3263,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3255,
																"src": "22709:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3262,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "22702:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int176_$",
																"typeString": "type(int176)"
															},
															"typeName": {
																"id": 3261,
																"name": "int176",
																"nodeType": "ElementaryTypeName",
																"src": "22702:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "22702:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"src": "22689:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"id": 3266,
												"nodeType": "ExpressionStatement",
												"src": "22689:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3267,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3258,
														"src": "22729:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int176",
															"typeString": "int176"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3268,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3255,
														"src": "22743:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "22729:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3276,
												"nodeType": "IfStatement",
												"src": "22725:98:10",
												"trueBody": {
													"id": 3275,
													"nodeType": "Block",
													"src": "22750:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313736",
																		"id": 3271,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "22801:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		"value": "176"
																	},
																	{
																		"id": 3272,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3255,
																		"src": "22806:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_176_by_1",
																			"typeString": "int_const 176"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3270,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "22771:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3273,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "22771:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3274,
															"nodeType": "RevertStatement",
															"src": "22764:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3253,
										"nodeType": "StructuredDocumentation",
										"src": "22288:312:10",
										"text": " @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits"
									},
									"id": 3278,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt176",
									"nameLocation": "22614:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3256,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3255,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "22630:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "22623:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3254,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "22623:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22622:14:10"
									},
									"returnParameters": {
										"id": 3259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3258,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "22667:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3278,
												"src": "22660:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int176",
													"typeString": "int176"
												},
												"typeName": {
													"id": 3257,
													"name": "int176",
													"nodeType": "ElementaryTypeName",
													"src": "22660:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int176",
														"typeString": "int176"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "22659:19:10"
									},
									"scope": 3855,
									"src": "22605:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3303,
										"nodeType": "Block",
										"src": "23226:150:10",
										"statements": [
											{
												"expression": {
													"id": 3291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3286,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3284,
														"src": "23236:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3289,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3281,
																"src": "23256:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23249:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int168_$",
																"typeString": "type(int168)"
															},
															"typeName": {
																"id": 3287,
																"name": "int168",
																"nodeType": "ElementaryTypeName",
																"src": "23249:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23249:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"src": "23236:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"id": 3292,
												"nodeType": "ExpressionStatement",
												"src": "23236:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3293,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3284,
														"src": "23276:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int168",
															"typeString": "int168"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3294,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3281,
														"src": "23290:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23276:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3302,
												"nodeType": "IfStatement",
												"src": "23272:98:10",
												"trueBody": {
													"id": 3301,
													"nodeType": "Block",
													"src": "23297:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313638",
																		"id": 3297,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23348:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		"value": "168"
																	},
																	{
																		"id": 3298,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3281,
																		"src": "23353:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_168_by_1",
																			"typeString": "int_const 168"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3296,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "23318:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23318:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3300,
															"nodeType": "RevertStatement",
															"src": "23311:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3279,
										"nodeType": "StructuredDocumentation",
										"src": "22835:312:10",
										"text": " @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits"
									},
									"id": 3304,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt168",
									"nameLocation": "23161:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3282,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3281,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23177:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3304,
												"src": "23170:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3280,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23170:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23169:14:10"
									},
									"returnParameters": {
										"id": 3285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3284,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23214:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3304,
												"src": "23207:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int168",
													"typeString": "int168"
												},
												"typeName": {
													"id": 3283,
													"name": "int168",
													"nodeType": "ElementaryTypeName",
													"src": "23207:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int168",
														"typeString": "int168"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23206:19:10"
									},
									"scope": 3855,
									"src": "23152:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3329,
										"nodeType": "Block",
										"src": "23773:150:10",
										"statements": [
											{
												"expression": {
													"id": 3317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3312,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "23783:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3315,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3307,
																"src": "23803:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3314,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "23796:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int160_$",
																"typeString": "type(int160)"
															},
															"typeName": {
																"id": 3313,
																"name": "int160",
																"nodeType": "ElementaryTypeName",
																"src": "23796:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3316,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "23796:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"src": "23783:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"id": 3318,
												"nodeType": "ExpressionStatement",
												"src": "23783:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3321,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3319,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3310,
														"src": "23823:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int160",
															"typeString": "int160"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3320,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3307,
														"src": "23837:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "23823:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3328,
												"nodeType": "IfStatement",
												"src": "23819:98:10",
												"trueBody": {
													"id": 3327,
													"nodeType": "Block",
													"src": "23844:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313630",
																		"id": 3323,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "23895:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		"value": "160"
																	},
																	{
																		"id": 3324,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3307,
																		"src": "23900:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_160_by_1",
																			"typeString": "int_const 160"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3322,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "23865:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3325,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "23865:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3326,
															"nodeType": "RevertStatement",
															"src": "23858:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3305,
										"nodeType": "StructuredDocumentation",
										"src": "23382:312:10",
										"text": " @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits"
									},
									"id": 3330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt160",
									"nameLocation": "23708:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3307,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "23724:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3330,
												"src": "23717:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3306,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "23717:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23716:14:10"
									},
									"returnParameters": {
										"id": 3311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3310,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "23761:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3330,
												"src": "23754:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int160",
													"typeString": "int160"
												},
												"typeName": {
													"id": 3309,
													"name": "int160",
													"nodeType": "ElementaryTypeName",
													"src": "23754:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int160",
														"typeString": "int160"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "23753:19:10"
									},
									"scope": 3855,
									"src": "23699:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3355,
										"nodeType": "Block",
										"src": "24320:150:10",
										"statements": [
											{
												"expression": {
													"id": 3343,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3338,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3336,
														"src": "24330:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3341,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3333,
																"src": "24350:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3340,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24343:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int152_$",
																"typeString": "type(int152)"
															},
															"typeName": {
																"id": 3339,
																"name": "int152",
																"nodeType": "ElementaryTypeName",
																"src": "24343:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3342,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24343:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"src": "24330:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"id": 3344,
												"nodeType": "ExpressionStatement",
												"src": "24330:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3345,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3336,
														"src": "24370:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int152",
															"typeString": "int152"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3346,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3333,
														"src": "24384:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24370:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3354,
												"nodeType": "IfStatement",
												"src": "24366:98:10",
												"trueBody": {
													"id": 3353,
													"nodeType": "Block",
													"src": "24391:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313532",
																		"id": 3349,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24442:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		"value": "152"
																	},
																	{
																		"id": 3350,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3333,
																		"src": "24447:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_152_by_1",
																			"typeString": "int_const 152"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3348,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "24412:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24412:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3352,
															"nodeType": "RevertStatement",
															"src": "24405:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3331,
										"nodeType": "StructuredDocumentation",
										"src": "23929:312:10",
										"text": " @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits"
									},
									"id": 3356,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt152",
									"nameLocation": "24255:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3333,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24271:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3356,
												"src": "24264:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3332,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24264:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24263:14:10"
									},
									"returnParameters": {
										"id": 3337,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3336,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24308:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3356,
												"src": "24301:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int152",
													"typeString": "int152"
												},
												"typeName": {
													"id": 3335,
													"name": "int152",
													"nodeType": "ElementaryTypeName",
													"src": "24301:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int152",
														"typeString": "int152"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24300:19:10"
									},
									"scope": 3855,
									"src": "24246:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3381,
										"nodeType": "Block",
										"src": "24867:150:10",
										"statements": [
											{
												"expression": {
													"id": 3369,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3364,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3362,
														"src": "24877:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3367,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3359,
																"src": "24897:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3366,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "24890:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int144_$",
																"typeString": "type(int144)"
															},
															"typeName": {
																"id": 3365,
																"name": "int144",
																"nodeType": "ElementaryTypeName",
																"src": "24890:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3368,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "24890:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"src": "24877:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"id": 3370,
												"nodeType": "ExpressionStatement",
												"src": "24877:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3371,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3362,
														"src": "24917:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int144",
															"typeString": "int144"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3372,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3359,
														"src": "24931:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "24917:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3380,
												"nodeType": "IfStatement",
												"src": "24913:98:10",
												"trueBody": {
													"id": 3379,
													"nodeType": "Block",
													"src": "24938:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313434",
																		"id": 3375,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "24989:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		"value": "144"
																	},
																	{
																		"id": 3376,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3359,
																		"src": "24994:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_144_by_1",
																			"typeString": "int_const 144"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3374,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "24959:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3377,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "24959:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3378,
															"nodeType": "RevertStatement",
															"src": "24952:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3357,
										"nodeType": "StructuredDocumentation",
										"src": "24476:312:10",
										"text": " @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits"
									},
									"id": 3382,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt144",
									"nameLocation": "24802:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3360,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3359,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "24818:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3382,
												"src": "24811:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3358,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "24811:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24810:14:10"
									},
									"returnParameters": {
										"id": 3363,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3362,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "24855:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3382,
												"src": "24848:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int144",
													"typeString": "int144"
												},
												"typeName": {
													"id": 3361,
													"name": "int144",
													"nodeType": "ElementaryTypeName",
													"src": "24848:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int144",
														"typeString": "int144"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "24847:19:10"
									},
									"scope": 3855,
									"src": "24793:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3407,
										"nodeType": "Block",
										"src": "25414:150:10",
										"statements": [
											{
												"expression": {
													"id": 3395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3390,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3388,
														"src": "25424:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3393,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3385,
																"src": "25444:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3392,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25437:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int136_$",
																"typeString": "type(int136)"
															},
															"typeName": {
																"id": 3391,
																"name": "int136",
																"nodeType": "ElementaryTypeName",
																"src": "25437:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3394,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25437:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"src": "25424:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"id": 3396,
												"nodeType": "ExpressionStatement",
												"src": "25424:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3399,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3397,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3388,
														"src": "25464:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int136",
															"typeString": "int136"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3398,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3385,
														"src": "25478:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "25464:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3406,
												"nodeType": "IfStatement",
												"src": "25460:98:10",
												"trueBody": {
													"id": 3405,
													"nodeType": "Block",
													"src": "25485:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313336",
																		"id": 3401,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "25536:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		"value": "136"
																	},
																	{
																		"id": 3402,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3385,
																		"src": "25541:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_136_by_1",
																			"typeString": "int_const 136"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3400,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "25506:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3403,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "25506:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3404,
															"nodeType": "RevertStatement",
															"src": "25499:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3383,
										"nodeType": "StructuredDocumentation",
										"src": "25023:312:10",
										"text": " @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits"
									},
									"id": 3408,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt136",
									"nameLocation": "25349:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3385,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25365:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "25358:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3384,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25358:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25357:14:10"
									},
									"returnParameters": {
										"id": 3389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3388,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25402:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3408,
												"src": "25395:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int136",
													"typeString": "int136"
												},
												"typeName": {
													"id": 3387,
													"name": "int136",
													"nodeType": "ElementaryTypeName",
													"src": "25395:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int136",
														"typeString": "int136"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25394:19:10"
									},
									"scope": 3855,
									"src": "25340:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3433,
										"nodeType": "Block",
										"src": "25961:150:10",
										"statements": [
											{
												"expression": {
													"id": 3421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3416,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3414,
														"src": "25971:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3419,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3411,
																"src": "25991:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "25984:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int128_$",
																"typeString": "type(int128)"
															},
															"typeName": {
																"id": 3417,
																"name": "int128",
																"nodeType": "ElementaryTypeName",
																"src": "25984:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "25984:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"src": "25971:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"id": 3422,
												"nodeType": "ExpressionStatement",
												"src": "25971:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3425,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3423,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3414,
														"src": "26011:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int128",
															"typeString": "int128"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3424,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3411,
														"src": "26025:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26011:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3432,
												"nodeType": "IfStatement",
												"src": "26007:98:10",
												"trueBody": {
													"id": 3431,
													"nodeType": "Block",
													"src": "26032:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313238",
																		"id": 3427,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26083:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		"value": "128"
																	},
																	{
																		"id": 3428,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3411,
																		"src": "26088:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_128_by_1",
																			"typeString": "int_const 128"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3426,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "26053:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3429,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26053:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3430,
															"nodeType": "RevertStatement",
															"src": "26046:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3409,
										"nodeType": "StructuredDocumentation",
										"src": "25570:312:10",
										"text": " @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits"
									},
									"id": 3434,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt128",
									"nameLocation": "25896:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3411,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "25912:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3434,
												"src": "25905:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3410,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "25905:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25904:14:10"
									},
									"returnParameters": {
										"id": 3415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3414,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "25949:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3434,
												"src": "25942:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int128",
													"typeString": "int128"
												},
												"typeName": {
													"id": 3413,
													"name": "int128",
													"nodeType": "ElementaryTypeName",
													"src": "25942:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int128",
														"typeString": "int128"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "25941:19:10"
									},
									"scope": 3855,
									"src": "25887:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3459,
										"nodeType": "Block",
										"src": "26508:150:10",
										"statements": [
											{
												"expression": {
													"id": 3447,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3442,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3440,
														"src": "26518:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3445,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3437,
																"src": "26538:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3444,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "26531:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int120_$",
																"typeString": "type(int120)"
															},
															"typeName": {
																"id": 3443,
																"name": "int120",
																"nodeType": "ElementaryTypeName",
																"src": "26531:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "26531:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"src": "26518:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"id": 3448,
												"nodeType": "ExpressionStatement",
												"src": "26518:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3451,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3449,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3440,
														"src": "26558:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int120",
															"typeString": "int120"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3450,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3437,
														"src": "26572:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "26558:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3458,
												"nodeType": "IfStatement",
												"src": "26554:98:10",
												"trueBody": {
													"id": 3457,
													"nodeType": "Block",
													"src": "26579:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313230",
																		"id": 3453,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "26630:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		"value": "120"
																	},
																	{
																		"id": 3454,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3437,
																		"src": "26635:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_120_by_1",
																			"typeString": "int_const 120"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3452,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "26600:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3455,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "26600:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3456,
															"nodeType": "RevertStatement",
															"src": "26593:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3435,
										"nodeType": "StructuredDocumentation",
										"src": "26117:312:10",
										"text": " @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits"
									},
									"id": 3460,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt120",
									"nameLocation": "26443:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3438,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3437,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "26459:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3460,
												"src": "26452:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3436,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26452:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26451:14:10"
									},
									"returnParameters": {
										"id": 3441,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3440,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "26496:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3460,
												"src": "26489:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int120",
													"typeString": "int120"
												},
												"typeName": {
													"id": 3439,
													"name": "int120",
													"nodeType": "ElementaryTypeName",
													"src": "26489:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int120",
														"typeString": "int120"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26488:19:10"
									},
									"scope": 3855,
									"src": "26434:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3485,
										"nodeType": "Block",
										"src": "27055:150:10",
										"statements": [
											{
												"expression": {
													"id": 3473,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3468,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3466,
														"src": "27065:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3471,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3463,
																"src": "27085:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3470,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27078:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int112_$",
																"typeString": "type(int112)"
															},
															"typeName": {
																"id": 3469,
																"name": "int112",
																"nodeType": "ElementaryTypeName",
																"src": "27078:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3472,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27078:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"src": "27065:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"id": 3474,
												"nodeType": "ExpressionStatement",
												"src": "27065:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3477,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3475,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3466,
														"src": "27105:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int112",
															"typeString": "int112"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3476,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3463,
														"src": "27119:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27105:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3484,
												"nodeType": "IfStatement",
												"src": "27101:98:10",
												"trueBody": {
													"id": 3483,
													"nodeType": "Block",
													"src": "27126:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313132",
																		"id": 3479,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27177:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		"value": "112"
																	},
																	{
																		"id": 3480,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3463,
																		"src": "27182:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_112_by_1",
																			"typeString": "int_const 112"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3478,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "27147:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3481,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27147:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3482,
															"nodeType": "RevertStatement",
															"src": "27140:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3461,
										"nodeType": "StructuredDocumentation",
										"src": "26664:312:10",
										"text": " @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits"
									},
									"id": 3486,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt112",
									"nameLocation": "26990:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3463,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27006:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3486,
												"src": "26999:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3462,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "26999:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "26998:14:10"
									},
									"returnParameters": {
										"id": 3467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3466,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27043:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3486,
												"src": "27036:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int112",
													"typeString": "int112"
												},
												"typeName": {
													"id": 3465,
													"name": "int112",
													"nodeType": "ElementaryTypeName",
													"src": "27036:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int112",
														"typeString": "int112"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27035:19:10"
									},
									"scope": 3855,
									"src": "26981:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3511,
										"nodeType": "Block",
										"src": "27602:150:10",
										"statements": [
											{
												"expression": {
													"id": 3499,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3494,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3492,
														"src": "27612:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3497,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3489,
																"src": "27632:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3496,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "27625:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int104_$",
																"typeString": "type(int104)"
															},
															"typeName": {
																"id": 3495,
																"name": "int104",
																"nodeType": "ElementaryTypeName",
																"src": "27625:6:10",
																"typeDescriptions": {}
															}
														},
														"id": 3498,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "27625:13:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"src": "27612:26:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"id": 3500,
												"nodeType": "ExpressionStatement",
												"src": "27612:26:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3501,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3492,
														"src": "27652:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int104",
															"typeString": "int104"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3502,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3489,
														"src": "27666:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "27652:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3510,
												"nodeType": "IfStatement",
												"src": "27648:98:10",
												"trueBody": {
													"id": 3509,
													"nodeType": "Block",
													"src": "27673:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "313034",
																		"id": 3505,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "27724:3:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		"value": "104"
																	},
																	{
																		"id": 3506,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3489,
																		"src": "27729:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_104_by_1",
																			"typeString": "int_const 104"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3504,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "27694:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "27694:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3508,
															"nodeType": "RevertStatement",
															"src": "27687:48:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3487,
										"nodeType": "StructuredDocumentation",
										"src": "27211:312:10",
										"text": " @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits"
									},
									"id": 3512,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt104",
									"nameLocation": "27537:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3489,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "27553:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3512,
												"src": "27546:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3488,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "27546:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27545:14:10"
									},
									"returnParameters": {
										"id": 3493,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3492,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "27590:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3512,
												"src": "27583:17:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int104",
													"typeString": "int104"
												},
												"typeName": {
													"id": 3491,
													"name": "int104",
													"nodeType": "ElementaryTypeName",
													"src": "27583:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int104",
														"typeString": "int104"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "27582:19:10"
									},
									"scope": 3855,
									"src": "27528:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3537,
										"nodeType": "Block",
										"src": "28142:148:10",
										"statements": [
											{
												"expression": {
													"id": 3525,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3520,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3518,
														"src": "28152:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3523,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3515,
																"src": "28171:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3522,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28165:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int96_$",
																"typeString": "type(int96)"
															},
															"typeName": {
																"id": 3521,
																"name": "int96",
																"nodeType": "ElementaryTypeName",
																"src": "28165:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 3524,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28165:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"src": "28152:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"id": 3526,
												"nodeType": "ExpressionStatement",
												"src": "28152:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3529,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3527,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3518,
														"src": "28191:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int96",
															"typeString": "int96"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3528,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3515,
														"src": "28205:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28191:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3536,
												"nodeType": "IfStatement",
												"src": "28187:97:10",
												"trueBody": {
													"id": 3535,
													"nodeType": "Block",
													"src": "28212:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3936",
																		"id": 3531,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28263:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		"value": "96"
																	},
																	{
																		"id": 3532,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3515,
																		"src": "28267:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_96_by_1",
																			"typeString": "int_const 96"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3530,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "28233:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28233:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3534,
															"nodeType": "RevertStatement",
															"src": "28226:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3513,
										"nodeType": "StructuredDocumentation",
										"src": "27758:307:10",
										"text": " @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits"
									},
									"id": 3538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt96",
									"nameLocation": "28079:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3516,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3515,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28094:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3538,
												"src": "28087:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3514,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28087:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28086:14:10"
									},
									"returnParameters": {
										"id": 3519,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3518,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28130:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3538,
												"src": "28124:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int96",
													"typeString": "int96"
												},
												"typeName": {
													"id": 3517,
													"name": "int96",
													"nodeType": "ElementaryTypeName",
													"src": "28124:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int96",
														"typeString": "int96"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28123:18:10"
									},
									"scope": 3855,
									"src": "28070:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3563,
										"nodeType": "Block",
										"src": "28680:148:10",
										"statements": [
											{
												"expression": {
													"id": 3551,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3546,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3544,
														"src": "28690:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3549,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3541,
																"src": "28709:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3548,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "28703:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int88_$",
																"typeString": "type(int88)"
															},
															"typeName": {
																"id": 3547,
																"name": "int88",
																"nodeType": "ElementaryTypeName",
																"src": "28703:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 3550,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "28703:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"src": "28690:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"id": 3552,
												"nodeType": "ExpressionStatement",
												"src": "28690:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3553,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3544,
														"src": "28729:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int88",
															"typeString": "int88"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3554,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3541,
														"src": "28743:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "28729:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3562,
												"nodeType": "IfStatement",
												"src": "28725:97:10",
												"trueBody": {
													"id": 3561,
													"nodeType": "Block",
													"src": "28750:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3838",
																		"id": 3557,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "28801:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		"value": "88"
																	},
																	{
																		"id": 3558,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3541,
																		"src": "28805:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_88_by_1",
																			"typeString": "int_const 88"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3556,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "28771:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3559,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "28771:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3560,
															"nodeType": "RevertStatement",
															"src": "28764:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3539,
										"nodeType": "StructuredDocumentation",
										"src": "28296:307:10",
										"text": " @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits"
									},
									"id": 3564,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt88",
									"nameLocation": "28617:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3542,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3541,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "28632:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3564,
												"src": "28625:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3540,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "28625:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28624:14:10"
									},
									"returnParameters": {
										"id": 3545,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3544,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "28668:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3564,
												"src": "28662:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int88",
													"typeString": "int88"
												},
												"typeName": {
													"id": 3543,
													"name": "int88",
													"nodeType": "ElementaryTypeName",
													"src": "28662:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int88",
														"typeString": "int88"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "28661:18:10"
									},
									"scope": 3855,
									"src": "28608:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3589,
										"nodeType": "Block",
										"src": "29218:148:10",
										"statements": [
											{
												"expression": {
													"id": 3577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3572,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3570,
														"src": "29228:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3575,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3567,
																"src": "29247:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3574,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29241:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int80_$",
																"typeString": "type(int80)"
															},
															"typeName": {
																"id": 3573,
																"name": "int80",
																"nodeType": "ElementaryTypeName",
																"src": "29241:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 3576,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29241:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"src": "29228:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"id": 3578,
												"nodeType": "ExpressionStatement",
												"src": "29228:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3581,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3579,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3570,
														"src": "29267:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int80",
															"typeString": "int80"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3580,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3567,
														"src": "29281:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29267:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3588,
												"nodeType": "IfStatement",
												"src": "29263:97:10",
												"trueBody": {
													"id": 3587,
													"nodeType": "Block",
													"src": "29288:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3830",
																		"id": 3583,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29339:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		"value": "80"
																	},
																	{
																		"id": 3584,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3567,
																		"src": "29343:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_80_by_1",
																			"typeString": "int_const 80"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3582,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "29309:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3585,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29309:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3586,
															"nodeType": "RevertStatement",
															"src": "29302:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3565,
										"nodeType": "StructuredDocumentation",
										"src": "28834:307:10",
										"text": " @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits"
									},
									"id": 3590,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt80",
									"nameLocation": "29155:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3568,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3567,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29170:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3590,
												"src": "29163:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3566,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29163:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29162:14:10"
									},
									"returnParameters": {
										"id": 3571,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3570,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29206:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3590,
												"src": "29200:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int80",
													"typeString": "int80"
												},
												"typeName": {
													"id": 3569,
													"name": "int80",
													"nodeType": "ElementaryTypeName",
													"src": "29200:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int80",
														"typeString": "int80"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29199:18:10"
									},
									"scope": 3855,
									"src": "29146:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3615,
										"nodeType": "Block",
										"src": "29756:148:10",
										"statements": [
											{
												"expression": {
													"id": 3603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3598,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3596,
														"src": "29766:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3601,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3593,
																"src": "29785:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3600,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "29779:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int72_$",
																"typeString": "type(int72)"
															},
															"typeName": {
																"id": 3599,
																"name": "int72",
																"nodeType": "ElementaryTypeName",
																"src": "29779:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 3602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "29779:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"src": "29766:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"id": 3604,
												"nodeType": "ExpressionStatement",
												"src": "29766:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3605,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3596,
														"src": "29805:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int72",
															"typeString": "int72"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3606,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3593,
														"src": "29819:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "29805:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3614,
												"nodeType": "IfStatement",
												"src": "29801:97:10",
												"trueBody": {
													"id": 3613,
													"nodeType": "Block",
													"src": "29826:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3732",
																		"id": 3609,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "29877:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		"value": "72"
																	},
																	{
																		"id": 3610,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3593,
																		"src": "29881:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_72_by_1",
																			"typeString": "int_const 72"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3608,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "29847:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3611,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "29847:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3612,
															"nodeType": "RevertStatement",
															"src": "29840:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3591,
										"nodeType": "StructuredDocumentation",
										"src": "29372:307:10",
										"text": " @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits"
									},
									"id": 3616,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt72",
									"nameLocation": "29693:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3593,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "29708:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3616,
												"src": "29701:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3592,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "29701:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29700:14:10"
									},
									"returnParameters": {
										"id": 3597,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3596,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "29744:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3616,
												"src": "29738:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int72",
													"typeString": "int72"
												},
												"typeName": {
													"id": 3595,
													"name": "int72",
													"nodeType": "ElementaryTypeName",
													"src": "29738:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int72",
														"typeString": "int72"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "29737:18:10"
									},
									"scope": 3855,
									"src": "29684:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3641,
										"nodeType": "Block",
										"src": "30294:148:10",
										"statements": [
											{
												"expression": {
													"id": 3629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3624,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3622,
														"src": "30304:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3627,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3619,
																"src": "30323:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3626,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30317:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int64_$",
																"typeString": "type(int64)"
															},
															"typeName": {
																"id": 3625,
																"name": "int64",
																"nodeType": "ElementaryTypeName",
																"src": "30317:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 3628,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30317:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"src": "30304:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"id": 3630,
												"nodeType": "ExpressionStatement",
												"src": "30304:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3631,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3622,
														"src": "30343:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int64",
															"typeString": "int64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3632,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3619,
														"src": "30357:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30343:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3640,
												"nodeType": "IfStatement",
												"src": "30339:97:10",
												"trueBody": {
													"id": 3639,
													"nodeType": "Block",
													"src": "30364:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3634",
																		"id": 3635,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30415:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		"value": "64"
																	},
																	{
																		"id": 3636,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3619,
																		"src": "30419:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_64_by_1",
																			"typeString": "int_const 64"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3634,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "30385:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3637,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30385:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3638,
															"nodeType": "RevertStatement",
															"src": "30378:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3617,
										"nodeType": "StructuredDocumentation",
										"src": "29910:307:10",
										"text": " @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits"
									},
									"id": 3642,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt64",
									"nameLocation": "30231:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3620,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3619,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30246:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3642,
												"src": "30239:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3618,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30239:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30238:14:10"
									},
									"returnParameters": {
										"id": 3623,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3622,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30282:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3642,
												"src": "30276:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int64",
													"typeString": "int64"
												},
												"typeName": {
													"id": 3621,
													"name": "int64",
													"nodeType": "ElementaryTypeName",
													"src": "30276:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int64",
														"typeString": "int64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30275:18:10"
									},
									"scope": 3855,
									"src": "30222:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3667,
										"nodeType": "Block",
										"src": "30832:148:10",
										"statements": [
											{
												"expression": {
													"id": 3655,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3650,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3648,
														"src": "30842:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3653,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3645,
																"src": "30861:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3652,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "30855:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int56_$",
																"typeString": "type(int56)"
															},
															"typeName": {
																"id": 3651,
																"name": "int56",
																"nodeType": "ElementaryTypeName",
																"src": "30855:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 3654,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "30855:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"src": "30842:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"id": 3656,
												"nodeType": "ExpressionStatement",
												"src": "30842:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3659,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3657,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3648,
														"src": "30881:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int56",
															"typeString": "int56"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3658,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3645,
														"src": "30895:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "30881:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3666,
												"nodeType": "IfStatement",
												"src": "30877:97:10",
												"trueBody": {
													"id": 3665,
													"nodeType": "Block",
													"src": "30902:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3536",
																		"id": 3661,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "30953:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		"value": "56"
																	},
																	{
																		"id": 3662,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3645,
																		"src": "30957:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_56_by_1",
																			"typeString": "int_const 56"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3660,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "30923:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3663,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "30923:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3664,
															"nodeType": "RevertStatement",
															"src": "30916:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3643,
										"nodeType": "StructuredDocumentation",
										"src": "30448:307:10",
										"text": " @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits"
									},
									"id": 3668,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt56",
									"nameLocation": "30769:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3645,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "30784:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3668,
												"src": "30777:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3644,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "30777:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30776:14:10"
									},
									"returnParameters": {
										"id": 3649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3648,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "30820:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3668,
												"src": "30814:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int56",
													"typeString": "int56"
												},
												"typeName": {
													"id": 3647,
													"name": "int56",
													"nodeType": "ElementaryTypeName",
													"src": "30814:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int56",
														"typeString": "int56"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "30813:18:10"
									},
									"scope": 3855,
									"src": "30760:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3693,
										"nodeType": "Block",
										"src": "31370:148:10",
										"statements": [
											{
												"expression": {
													"id": 3681,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3676,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3674,
														"src": "31380:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3679,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3671,
																"src": "31399:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3678,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31393:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int48_$",
																"typeString": "type(int48)"
															},
															"typeName": {
																"id": 3677,
																"name": "int48",
																"nodeType": "ElementaryTypeName",
																"src": "31393:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 3680,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31393:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"src": "31380:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"id": 3682,
												"nodeType": "ExpressionStatement",
												"src": "31380:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3685,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3683,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3674,
														"src": "31419:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int48",
															"typeString": "int48"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3684,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3671,
														"src": "31433:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31419:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3692,
												"nodeType": "IfStatement",
												"src": "31415:97:10",
												"trueBody": {
													"id": 3691,
													"nodeType": "Block",
													"src": "31440:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3438",
																		"id": 3687,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "31491:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		"value": "48"
																	},
																	{
																		"id": 3688,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3671,
																		"src": "31495:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_48_by_1",
																			"typeString": "int_const 48"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3686,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "31461:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3689,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31461:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3690,
															"nodeType": "RevertStatement",
															"src": "31454:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3669,
										"nodeType": "StructuredDocumentation",
										"src": "30986:307:10",
										"text": " @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits"
									},
									"id": 3694,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt48",
									"nameLocation": "31307:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3672,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3671,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31322:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3694,
												"src": "31315:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3670,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31315:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31314:14:10"
									},
									"returnParameters": {
										"id": 3675,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3674,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31358:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3694,
												"src": "31352:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int48",
													"typeString": "int48"
												},
												"typeName": {
													"id": 3673,
													"name": "int48",
													"nodeType": "ElementaryTypeName",
													"src": "31352:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int48",
														"typeString": "int48"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31351:18:10"
									},
									"scope": 3855,
									"src": "31298:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3719,
										"nodeType": "Block",
										"src": "31908:148:10",
										"statements": [
											{
												"expression": {
													"id": 3707,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3702,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3700,
														"src": "31918:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3705,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3697,
																"src": "31937:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3704,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "31931:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int40_$",
																"typeString": "type(int40)"
															},
															"typeName": {
																"id": 3703,
																"name": "int40",
																"nodeType": "ElementaryTypeName",
																"src": "31931:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 3706,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "31931:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"src": "31918:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"id": 3708,
												"nodeType": "ExpressionStatement",
												"src": "31918:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3711,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3709,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3700,
														"src": "31957:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int40",
															"typeString": "int40"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3710,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3697,
														"src": "31971:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "31957:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3718,
												"nodeType": "IfStatement",
												"src": "31953:97:10",
												"trueBody": {
													"id": 3717,
													"nodeType": "Block",
													"src": "31978:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3430",
																		"id": 3713,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32029:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		"value": "40"
																	},
																	{
																		"id": 3714,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3697,
																		"src": "32033:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_40_by_1",
																			"typeString": "int_const 40"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3712,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "31999:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3715,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "31999:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3716,
															"nodeType": "RevertStatement",
															"src": "31992:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3695,
										"nodeType": "StructuredDocumentation",
										"src": "31524:307:10",
										"text": " @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits"
									},
									"id": 3720,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt40",
									"nameLocation": "31845:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3698,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3697,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "31860:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3720,
												"src": "31853:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3696,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "31853:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31852:14:10"
									},
									"returnParameters": {
										"id": 3701,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3700,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "31896:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3720,
												"src": "31890:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int40",
													"typeString": "int40"
												},
												"typeName": {
													"id": 3699,
													"name": "int40",
													"nodeType": "ElementaryTypeName",
													"src": "31890:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int40",
														"typeString": "int40"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "31889:18:10"
									},
									"scope": 3855,
									"src": "31836:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3745,
										"nodeType": "Block",
										"src": "32446:148:10",
										"statements": [
											{
												"expression": {
													"id": 3733,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3728,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3726,
														"src": "32456:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3731,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3723,
																"src": "32475:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3730,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "32469:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int32_$",
																"typeString": "type(int32)"
															},
															"typeName": {
																"id": 3729,
																"name": "int32",
																"nodeType": "ElementaryTypeName",
																"src": "32469:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 3732,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "32469:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"src": "32456:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"id": 3734,
												"nodeType": "ExpressionStatement",
												"src": "32456:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3737,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3735,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3726,
														"src": "32495:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int32",
															"typeString": "int32"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3736,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3723,
														"src": "32509:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "32495:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3744,
												"nodeType": "IfStatement",
												"src": "32491:97:10",
												"trueBody": {
													"id": 3743,
													"nodeType": "Block",
													"src": "32516:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3332",
																		"id": 3739,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "32567:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		"value": "32"
																	},
																	{
																		"id": 3740,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3723,
																		"src": "32571:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_32_by_1",
																			"typeString": "int_const 32"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3738,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "32537:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "32537:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3742,
															"nodeType": "RevertStatement",
															"src": "32530:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3721,
										"nodeType": "StructuredDocumentation",
										"src": "32062:307:10",
										"text": " @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits"
									},
									"id": 3746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt32",
									"nameLocation": "32383:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3724,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3723,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32398:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3746,
												"src": "32391:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3722,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32391:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32390:14:10"
									},
									"returnParameters": {
										"id": 3727,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3726,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32434:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3746,
												"src": "32428:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int32",
													"typeString": "int32"
												},
												"typeName": {
													"id": 3725,
													"name": "int32",
													"nodeType": "ElementaryTypeName",
													"src": "32428:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int32",
														"typeString": "int32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32427:18:10"
									},
									"scope": 3855,
									"src": "32374:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3771,
										"nodeType": "Block",
										"src": "32984:148:10",
										"statements": [
											{
												"expression": {
													"id": 3759,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3754,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3752,
														"src": "32994:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3757,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3749,
																"src": "33013:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3756,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33007:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int24_$",
																"typeString": "type(int24)"
															},
															"typeName": {
																"id": 3755,
																"name": "int24",
																"nodeType": "ElementaryTypeName",
																"src": "33007:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 3758,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33007:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"src": "32994:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"id": 3760,
												"nodeType": "ExpressionStatement",
												"src": "32994:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3763,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3761,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3752,
														"src": "33033:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int24",
															"typeString": "int24"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3762,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3749,
														"src": "33047:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33033:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3770,
												"nodeType": "IfStatement",
												"src": "33029:97:10",
												"trueBody": {
													"id": 3769,
													"nodeType": "Block",
													"src": "33054:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3234",
																		"id": 3765,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33105:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		"value": "24"
																	},
																	{
																		"id": 3766,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3749,
																		"src": "33109:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_24_by_1",
																			"typeString": "int_const 24"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3764,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "33075:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3767,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33075:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3768,
															"nodeType": "RevertStatement",
															"src": "33068:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3747,
										"nodeType": "StructuredDocumentation",
										"src": "32600:307:10",
										"text": " @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits"
									},
									"id": 3772,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt24",
									"nameLocation": "32921:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3749,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "32936:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3772,
												"src": "32929:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3748,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "32929:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32928:14:10"
									},
									"returnParameters": {
										"id": 3753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3752,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "32972:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3772,
												"src": "32966:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int24",
													"typeString": "int24"
												},
												"typeName": {
													"id": 3751,
													"name": "int24",
													"nodeType": "ElementaryTypeName",
													"src": "32966:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int24",
														"typeString": "int24"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "32965:18:10"
									},
									"scope": 3855,
									"src": "32912:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3797,
										"nodeType": "Block",
										"src": "33522:148:10",
										"statements": [
											{
												"expression": {
													"id": 3785,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3780,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3778,
														"src": "33532:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3783,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3775,
																"src": "33551:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3782,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "33545:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int16_$",
																"typeString": "type(int16)"
															},
															"typeName": {
																"id": 3781,
																"name": "int16",
																"nodeType": "ElementaryTypeName",
																"src": "33545:5:10",
																"typeDescriptions": {}
															}
														},
														"id": 3784,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "33545:12:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"src": "33532:25:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"id": 3786,
												"nodeType": "ExpressionStatement",
												"src": "33532:25:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3787,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3778,
														"src": "33571:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int16",
															"typeString": "int16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3788,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3775,
														"src": "33585:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "33571:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3796,
												"nodeType": "IfStatement",
												"src": "33567:97:10",
												"trueBody": {
													"id": 3795,
													"nodeType": "Block",
													"src": "33592:72:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "3136",
																		"id": 3791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "33643:2:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		"value": "16"
																	},
																	{
																		"id": 3792,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3775,
																		"src": "33647:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_16_by_1",
																			"typeString": "int_const 16"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3790,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "33613:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3793,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "33613:40:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3794,
															"nodeType": "RevertStatement",
															"src": "33606:47:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3773,
										"nodeType": "StructuredDocumentation",
										"src": "33138:307:10",
										"text": " @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits"
									},
									"id": 3798,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt16",
									"nameLocation": "33459:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3775,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "33474:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3798,
												"src": "33467:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3774,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33467:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33466:14:10"
									},
									"returnParameters": {
										"id": 3779,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3778,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "33510:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3798,
												"src": "33504:16:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int16",
													"typeString": "int16"
												},
												"typeName": {
													"id": 3777,
													"name": "int16",
													"nodeType": "ElementaryTypeName",
													"src": "33504:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int16",
														"typeString": "int16"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33503:18:10"
									},
									"scope": 3855,
									"src": "33450:220:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3823,
										"nodeType": "Block",
										"src": "34053:146:10",
										"statements": [
											{
												"expression": {
													"id": 3811,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 3806,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3804,
														"src": "34063:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 3809,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3801,
																"src": "34081:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3808,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34076:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_int8_$",
																"typeString": "type(int8)"
															},
															"typeName": {
																"id": 3807,
																"name": "int8",
																"nodeType": "ElementaryTypeName",
																"src": "34076:4:10",
																"typeDescriptions": {}
															}
														},
														"id": 3810,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34076:11:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"src": "34063:24:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"id": 3812,
												"nodeType": "ExpressionStatement",
												"src": "34063:24:10"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													},
													"id": 3815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3813,
														"name": "downcasted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3804,
														"src": "34101:10:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int8",
															"typeString": "int8"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 3814,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3801,
														"src": "34115:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_int256",
															"typeString": "int256"
														}
													},
													"src": "34101:19:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3822,
												"nodeType": "IfStatement",
												"src": "34097:96:10",
												"trueBody": {
													"id": 3821,
													"nodeType": "Block",
													"src": "34122:71:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"hexValue": "38",
																		"id": 3817,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "34173:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		"value": "8"
																	},
																	{
																		"id": 3818,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3801,
																		"src": "34176:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_8_by_1",
																			"typeString": "int_const 8"
																		},
																		{
																			"typeIdentifier": "t_int256",
																			"typeString": "int256"
																		}
																	],
																	"id": 3816,
																	"name": "SafeCastOverflowedIntDowncast",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2122,
																	"src": "34143:29:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint8_$_t_int256_$returns$_t_error_$",
																		"typeString": "function (uint8,int256) pure returns (error)"
																	}
																},
																"id": 3819,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34143:39:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3820,
															"nodeType": "RevertStatement",
															"src": "34136:46:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 3799,
										"nodeType": "StructuredDocumentation",
										"src": "33676:302:10",
										"text": " @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits"
									},
									"id": 3824,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt8",
									"nameLocation": "33992:6:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3802,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3801,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34006:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3824,
												"src": "33999:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3800,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "33999:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "33998:14:10"
									},
									"returnParameters": {
										"id": 3805,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3804,
												"mutability": "mutable",
												"name": "downcasted",
												"nameLocation": "34041:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 3824,
												"src": "34036:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int8",
													"typeString": "int8"
												},
												"typeName": {
													"id": 3803,
													"name": "int8",
													"nodeType": "ElementaryTypeName",
													"src": "34036:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int8",
														"typeString": "int8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34035:17:10"
									},
									"scope": 3855,
									"src": "33983:216:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 3853,
										"nodeType": "Block",
										"src": "34439:250:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 3841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 3832,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3827,
														"src": "34552:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"arguments": [
															{
																"expression": {
																	"arguments": [
																		{
																			"id": 3837,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "34573:6:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			},
																			"typeName": {
																				"id": 3836,
																				"name": "int256",
																				"nodeType": "ElementaryTypeName",
																				"src": "34573:6:10",
																				"typeDescriptions": {}
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_type$_t_int256_$",
																				"typeString": "type(int256)"
																			}
																		],
																		"id": 3835,
																		"name": "type",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967269,
																		"src": "34568:4:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																			"typeString": "function () pure"
																		}
																	},
																	"id": 3838,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "functionCall",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "34568:12:10",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_meta_type_t_int256",
																		"typeString": "type(int256)"
																	}
																},
																"id": 3839,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "34581:3:10",
																"memberName": "max",
																"nodeType": "MemberAccess",
																"src": "34568:16:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_int256",
																	"typeString": "int256"
																}
															],
															"id": 3834,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "34560:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 3833,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "34560:7:10",
																"typeDescriptions": {}
															}
														},
														"id": 3840,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "34560:25:10",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "34552:33:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 3847,
												"nodeType": "IfStatement",
												"src": "34548:105:10",
												"trueBody": {
													"id": 3846,
													"nodeType": "Block",
													"src": "34587:66:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 3843,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 3827,
																		"src": "34636:5:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"id": 3842,
																	"name": "SafeCastOverflowedUintToInt",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2127,
																	"src": "34608:27:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256) pure returns (error)"
																	}
																},
																"id": 3844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "34608:34:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 3845,
															"nodeType": "RevertStatement",
															"src": "34601:41:10"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 3850,
															"name": "value",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3827,
															"src": "34676:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 3849,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "34669:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_int256_$",
															"typeString": "type(int256)"
														},
														"typeName": {
															"id": 3848,
															"name": "int256",
															"nodeType": "ElementaryTypeName",
															"src": "34669:6:10",
															"typeDescriptions": {}
														}
													},
													"id": 3851,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "34669:13:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"functionReturnParameters": 3831,
												"id": 3852,
												"nodeType": "Return",
												"src": "34662:20:10"
											}
										]
									},
									"documentation": {
										"id": 3825,
										"nodeType": "StructuredDocumentation",
										"src": "34205:165:10",
										"text": " @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256."
									},
									"id": 3854,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "toInt256",
									"nameLocation": "34384:8:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 3828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3827,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "34401:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 3854,
												"src": "34393:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "34393:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34392:15:10"
									},
									"returnParameters": {
										"id": 3831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 3854,
												"src": "34431:6:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_int256",
													"typeString": "int256"
												},
												"typeName": {
													"id": 3829,
													"name": "int256",
													"nodeType": "ElementaryTypeName",
													"src": "34431:6:10",
													"typeDescriptions": {
														"typeIdentifier": "t_int256",
														"typeString": "int256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "34430:8:10"
									},
									"scope": 3855,
									"src": "34375:314:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 3856,
							"src": "764:33927:10",
							"usedErrors": [
								2110,
								2115,
								2122,
								2127
							],
							"usedEvents": []
						}
					],
					"src": "192:34500:10"
				},
				"id": 10
			},
			"contracts/BountyEscrow.sol": {
				"ast": {
					"absolutePath": "contracts/BountyEscrow.sol",
					"exportedSymbols": {
						"BountyEscrow": [
							4740
						],
						"IERC20": [
							225
						],
						"IERC20Metadata": [
							251
						],
						"Math": [
							2100
						],
						"Ownable": [
							147
						],
						"Pausable": [
							977
						],
						"ReentrancyGuard": [
							1046
						],
						"SafeCast": [
							3855
						],
						"SafeERC20": [
							577
						]
					},
					"id": 4741,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 3857,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol",
							"file": "@openzeppelin/contracts@5.0.2/token/ERC20/IERC20.sol",
							"id": 3859,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4741,
							"sourceUnit": 226,
							"src": "58:76:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3858,
										"name": "IERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 225,
										"src": "66:6:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol",
							"file": "@openzeppelin/contracts@5.0.2/token/ERC20/utils/SafeERC20.sol",
							"id": 3861,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4741,
							"sourceUnit": 578,
							"src": "135:88:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3860,
										"name": "SafeERC20",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 577,
										"src": "143:9:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol",
							"file": "@openzeppelin/contracts@5.0.2/utils/ReentrancyGuard.sol",
							"id": 3863,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4741,
							"sourceUnit": 1047,
							"src": "224:88:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3862,
										"name": "ReentrancyGuard",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1046,
										"src": "232:15:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/Pausable.sol",
							"file": "@openzeppelin/contracts@5.0.2/utils/Pausable.sol",
							"id": 3865,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4741,
							"sourceUnit": 978,
							"src": "313:74:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3864,
										"name": "Pausable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 977,
										"src": "321:8:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/access/Ownable.sol",
							"file": "@openzeppelin/contracts@5.0.2/access/Ownable.sol",
							"id": 3867,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4741,
							"sourceUnit": 148,
							"src": "388:73:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3866,
										"name": "Ownable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 147,
										"src": "396:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol",
							"file": "@openzeppelin/contracts@5.0.2/token/ERC20/extensions/IERC20Metadata.sol",
							"id": 3869,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4741,
							"sourceUnit": 252,
							"src": "462:103:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3868,
										"name": "IERC20Metadata",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 251,
										"src": "470:14:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol",
							"file": "@openzeppelin/contracts@5.0.2/utils/math/SafeCast.sol",
							"id": 3871,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4741,
							"sourceUnit": 3856,
							"src": "566:79:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3870,
										"name": "SafeCast",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 3855,
										"src": "574:8:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
							"file": "@openzeppelin/contracts@5.0.2/utils/math/Math.sol",
							"id": 3873,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 4741,
							"sourceUnit": 2101,
							"src": "646:71:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 3872,
										"name": "Math",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2100,
										"src": "654:4:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3875,
										"name": "ReentrancyGuard",
										"nameLocations": [
											"1988:15:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1046,
										"src": "1988:15:11"
									},
									"id": 3876,
									"nodeType": "InheritanceSpecifier",
									"src": "1988:15:11"
								},
								{
									"baseName": {
										"id": 3877,
										"name": "Pausable",
										"nameLocations": [
											"2005:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 977,
										"src": "2005:8:11"
									},
									"id": 3878,
									"nodeType": "InheritanceSpecifier",
									"src": "2005:8:11"
								},
								{
									"baseName": {
										"id": 3879,
										"name": "Ownable",
										"nameLocations": [
											"2015:7:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 147,
										"src": "2015:7:11"
									},
									"id": 3880,
									"nodeType": "InheritanceSpecifier",
									"src": "2015:7:11"
								}
							],
							"canonicalName": "BountyEscrow",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3874,
								"nodeType": "StructuredDocumentation",
								"src": "719:1243:11",
								"text": " @title BountyEscrow\n @notice Minimal, USDC-based escrow for GitHub issue bounties.\n         Sponsor funds a bounty; a designated resolver can settle to a recipient before the deadline;\n         sponsors can cancel or refund after deadline. Owner sets fee params and can pause.\n @dev Design:\n - Token: single ERC-20 (intended USDC). Address immutable. Decimals cached (best-effort, fallback=6).\n - State machine per-bounty: None → Open → (Resolved | Refunded | Canceled). Terminal states are final.\n - Funds held in-contract; payouts are pull-style via resolver/sponsor actions.\n - Fee assessed only on successful resolution; transfers: recipient (net) + feeVault (fee).\n - Reentrancy: public state-changing entrypoints are nonReentrant; CEI respected.\n - Pausability: owner can pause/unpause all state-changing flows.\n @custom:security\n - Resolver authority is scoped per bounty; cannot change post-creation.\n - Sponsor is the caller that created the bounty; only sponsor can top-up/cancel/refund.\n - No arbitrary token transfers; only the configured _usdc is handled.\n - Fee bounded by MAX_FEE_BPS (10%).\n @custom:oz-version\n - OpenZeppelin 5.0.2 (imports pinned via versioned paths)."
							},
							"fullyImplemented": true,
							"id": 4740,
							"linearizedBaseContracts": [
								4740,
								147,
								977,
								860,
								1046
							],
							"name": "BountyEscrow",
							"nameLocation": "1972:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 3884,
									"libraryName": {
										"id": 3881,
										"name": "SafeERC20",
										"nameLocations": [
											"2035:9:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 577,
										"src": "2035:9:11"
									},
									"nodeType": "UsingForDirective",
									"src": "2029:27:11",
									"typeName": {
										"id": 3883,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3882,
											"name": "IERC20",
											"nameLocations": [
												"2049:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "2049:6:11"
										},
										"referencedDeclaration": 225,
										"src": "2049:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									}
								},
								{
									"global": false,
									"id": 3887,
									"libraryName": {
										"id": 3885,
										"name": "SafeCast",
										"nameLocations": [
											"2067:8:11"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 3855,
										"src": "2067:8:11"
									},
									"nodeType": "UsingForDirective",
									"src": "2061:27:11",
									"typeName": {
										"id": 3886,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2080:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									}
								},
								{
									"constant": true,
									"documentation": {
										"id": 3888,
										"nodeType": "StructuredDocumentation",
										"src": "2094:63:11",
										"text": "@notice Maximum protocol fee in basis points (1_000 = 10%)."
									},
									"functionSelector": "d55be8c6",
									"id": 3891,
									"mutability": "constant",
									"name": "MAX_FEE_BPS",
									"nameLocation": "2185:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 4740,
									"src": "2162:42:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 3889,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "2162:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"value": {
										"hexValue": "315f303030",
										"id": 3890,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2199:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1000_by_1",
											"typeString": "int_const 1000"
										},
										"value": "1_000"
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"documentation": {
										"id": 3892,
										"nodeType": "StructuredDocumentation",
										"src": "2211:49:11",
										"text": "@dev Basis point denominator (10_000 = 100%)."
									},
									"id": 3895,
									"mutability": "constant",
									"name": "FEE_DENOM",
									"nameLocation": "2290:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 4740,
									"src": "2265:43:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 3893,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "2265:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31305f303030",
										"id": 3894,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2302:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_10000_by_1",
											"typeString": "int_const 10000"
										},
										"value": "10_000"
									},
									"visibility": "private"
								},
								{
									"canonicalName": "BountyEscrow.Status",
									"documentation": {
										"id": 3896,
										"nodeType": "StructuredDocumentation",
										"src": "2315:376:11",
										"text": " @notice Lifecycle status of a bounty.\n @dev Transitions:\n - None (default) → Open (on createBounty)\n - Open → Resolved (resolver calls resolve)\n - Open → Refunded (sponsor calls refundExpired after deadline)\n - Open → Canceled (sponsor calls cancel before deadline)\n Terminal states: Resolved, Refunded, Canceled."
									},
									"id": 3902,
									"members": [
										{
											"id": 3897,
											"name": "None",
											"nameLocation": "2718:4:11",
											"nodeType": "EnumValue",
											"src": "2718:4:11"
										},
										{
											"id": 3898,
											"name": "Open",
											"nameLocation": "2732:4:11",
											"nodeType": "EnumValue",
											"src": "2732:4:11"
										},
										{
											"id": 3899,
											"name": "Resolved",
											"nameLocation": "2746:8:11",
											"nodeType": "EnumValue",
											"src": "2746:8:11"
										},
										{
											"id": 3900,
											"name": "Refunded",
											"nameLocation": "2764:8:11",
											"nodeType": "EnumValue",
											"src": "2764:8:11"
										},
										{
											"id": 3901,
											"name": "Canceled",
											"nameLocation": "2782:8:11",
											"nodeType": "EnumValue",
											"src": "2782:8:11"
										}
									],
									"name": "Status",
									"nameLocation": "2701:6:11",
									"nodeType": "EnumDefinition",
									"src": "2696:100:11"
								},
								{
									"canonicalName": "BountyEscrow.Bounty",
									"documentation": {
										"id": 3903,
										"nodeType": "StructuredDocumentation",
										"src": "2802:588:11",
										"text": " @notice Bounty storage layout.\n @param repoIdHash Hash of repository identity (e.g., chain-agnostic slug hash).\n @param sponsor EOA/contract that funded the bounty; only sponsor can top-up/cancel/refund.\n @param resolver Address authorized to resolve this bounty to a recipient.\n @param amount Current escrowed amount (USDC units).\n @param deadline Unix timestamp; after this, sponsor may refund if still Open.\n @param issueNumber GitHub issue number (or equivalent reference).\n @param status Lifecycle state (see Status enum)."
									},
									"id": 3919,
									"members": [
										{
											"constant": false,
											"id": 3905,
											"mutability": "mutable",
											"name": "repoIdHash",
											"nameLocation": "3427:10:11",
											"nodeType": "VariableDeclaration",
											"scope": 3919,
											"src": "3419:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 3904,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "3419:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3907,
											"mutability": "mutable",
											"name": "sponsor",
											"nameLocation": "3455:7:11",
											"nodeType": "VariableDeclaration",
											"scope": 3919,
											"src": "3447:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3906,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3447:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3909,
											"mutability": "mutable",
											"name": "resolver",
											"nameLocation": "3480:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 3919,
											"src": "3472:16:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 3908,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "3472:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3911,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "3505:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 3919,
											"src": "3498:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint96",
												"typeString": "uint96"
											},
											"typeName": {
												"id": 3910,
												"name": "uint96",
												"nodeType": "ElementaryTypeName",
												"src": "3498:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint96",
													"typeString": "uint96"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3913,
											"mutability": "mutable",
											"name": "deadline",
											"nameLocation": "3528:8:11",
											"nodeType": "VariableDeclaration",
											"scope": 3919,
											"src": "3521:15:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 3912,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "3521:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3915,
											"mutability": "mutable",
											"name": "issueNumber",
											"nameLocation": "3553:11:11",
											"nodeType": "VariableDeclaration",
											"scope": 3919,
											"src": "3546:18:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 3914,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "3546:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 3918,
											"mutability": "mutable",
											"name": "status",
											"nameLocation": "3581:6:11",
											"nodeType": "VariableDeclaration",
											"scope": 3919,
											"src": "3574:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_enum$_Status_$3902",
												"typeString": "enum BountyEscrow.Status"
											},
											"typeName": {
												"id": 3917,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 3916,
													"name": "Status",
													"nameLocations": [
														"3574:6:11"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 3902,
													"src": "3574:6:11"
												},
												"referencedDeclaration": 3902,
												"src": "3574:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_enum$_Status_$3902",
													"typeString": "enum BountyEscrow.Status"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bounty",
									"nameLocation": "3402:6:11",
									"nodeType": "StructDefinition",
									"scope": 4740,
									"src": "3395:199:11",
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3920,
										"nodeType": "StructuredDocumentation",
										"src": "3634:82:11",
										"text": "@dev Immutable reference to the ERC-20 used for all transfers (intended USDC)."
									},
									"id": 3923,
									"mutability": "immutable",
									"name": "_usdc",
									"nameLocation": "3746:5:11",
									"nodeType": "VariableDeclaration",
									"scope": 4740,
									"src": "3721:30:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20_$225",
										"typeString": "contract IERC20"
									},
									"typeName": {
										"id": 3922,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 3921,
											"name": "IERC20",
											"nameLocations": [
												"3721:6:11"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 225,
											"src": "3721:6:11"
										},
										"referencedDeclaration": 225,
										"src": "3721:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20_$225",
											"typeString": "contract IERC20"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3924,
										"nodeType": "StructuredDocumentation",
										"src": "3758:84:11",
										"text": "@dev Cached decimals for display/UX; logic does not assume a specific precision."
									},
									"id": 3926,
									"mutability": "immutable",
									"name": "_usdcDecimals",
									"nameLocation": "3871:13:11",
									"nodeType": "VariableDeclaration",
									"scope": 4740,
									"src": "3847:37:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint8",
										"typeString": "uint8"
									},
									"typeName": {
										"id": 3925,
										"name": "uint8",
										"nodeType": "ElementaryTypeName",
										"src": "3847:5:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint8",
											"typeString": "uint8"
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3927,
										"nodeType": "StructuredDocumentation",
										"src": "3891:75:11",
										"text": "@dev BountyId (keccak256(sponsor, repoIdHash, issueNumber)) → Bounty."
									},
									"id": 3932,
									"mutability": "mutable",
									"name": "_bounties",
									"nameLocation": "4006:9:11",
									"nodeType": "VariableDeclaration",
									"scope": 4740,
									"src": "3971:44:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bounty_$3919_storage_$",
										"typeString": "mapping(bytes32 => struct BountyEscrow.Bounty)"
									},
									"typeName": {
										"id": 3931,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 3928,
											"name": "bytes32",
											"nodeType": "ElementaryTypeName",
											"src": "3979:7:11",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											}
										},
										"nodeType": "Mapping",
										"src": "3971:26:11",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bounty_$3919_storage_$",
											"typeString": "mapping(bytes32 => struct BountyEscrow.Bounty)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 3930,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 3929,
												"name": "Bounty",
												"nameLocations": [
													"3990:6:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 3919,
												"src": "3990:6:11"
											},
											"referencedDeclaration": 3919,
											"src": "3990:6:11",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
												"typeString": "struct BountyEscrow.Bounty"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3933,
										"nodeType": "StructuredDocumentation",
										"src": "4022:57:11",
										"text": "@notice Protocol fee in basis points (out of 10_000)."
									},
									"functionSelector": "24a9d853",
									"id": 3935,
									"mutability": "mutable",
									"name": "feeBps",
									"nameLocation": "4098:6:11",
									"nodeType": "VariableDeclaration",
									"scope": 4740,
									"src": "4084:20:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint16",
										"typeString": "uint16"
									},
									"typeName": {
										"id": 3934,
										"name": "uint16",
										"nodeType": "ElementaryTypeName",
										"src": "4084:6:11",
										"typeDescriptions": {
											"typeIdentifier": "t_uint16",
											"typeString": "uint16"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"documentation": {
										"id": 3936,
										"nodeType": "StructuredDocumentation",
										"src": "4111:64:11",
										"text": "@notice Address that receives protocol fees upon resolution."
									},
									"functionSelector": "478222c2",
									"id": 3938,
									"mutability": "mutable",
									"name": "feeVault",
									"nameLocation": "4195:8:11",
									"nodeType": "VariableDeclaration",
									"scope": 4740,
									"src": "4180:23:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 3937,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "4180:7:11",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3939,
										"nodeType": "StructuredDocumentation",
										"src": "4243:556:11",
										"text": " @notice Emitted when a bounty is created and funded.\n @param bountyId Deterministic id: keccak256(sponsor, repoIdHash, issueNumber).\n @param sponsor Bounty sponsor (msg.sender of createBounty).\n @param repoIdHash Repository identifier hash associated with the issue.\n @param issueNumber Issue number within the repository.\n @param deadline Expiration timestamp for refund eligibility.\n @param resolver Address authorized to resolve this bounty.\n @param amount Initial funded amount (USDC units)."
									},
									"eventSelector": "b9f72851bf0c89db77e8b273bf29aef517207f92830df76851a309f1a6c5c80e",
									"id": 3955,
									"name": "BountyCreated",
									"nameLocation": "4810:13:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3941,
												"indexed": true,
												"mutability": "mutable",
												"name": "bountyId",
												"nameLocation": "4849:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3955,
												"src": "4833:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3940,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4833:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3943,
												"indexed": true,
												"mutability": "mutable",
												"name": "sponsor",
												"nameLocation": "4883:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3955,
												"src": "4867:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3942,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4867:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3945,
												"indexed": true,
												"mutability": "mutable",
												"name": "repoIdHash",
												"nameLocation": "4916:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 3955,
												"src": "4900:26:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3944,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4900:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3947,
												"indexed": false,
												"mutability": "mutable",
												"name": "issueNumber",
												"nameLocation": "4943:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 3955,
												"src": "4936:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3946,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4936:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3949,
												"indexed": false,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "4971:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3955,
												"src": "4964:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 3948,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "4964:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3951,
												"indexed": false,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "4997:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3955,
												"src": "4989:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4989:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3953,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "5023:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3955,
												"src": "5015:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5015:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:212:11"
									},
									"src": "4804:232:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3956,
										"nodeType": "StructuredDocumentation",
										"src": "5042:196:11",
										"text": " @notice Emitted when the sponsor tops up an existing Open bounty.\n @param bountyId Id of the bounty funded.\n @param newAmount New total escrowed amount after top-up."
									},
									"eventSelector": "9f4592c3bd42bd33860ee93dc92d07f06e3f4fb6e19a9ca214982fe7c1bdb037",
									"id": 3962,
									"name": "Funded",
									"nameLocation": "5249:6:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3958,
												"indexed": true,
												"mutability": "mutable",
												"name": "bountyId",
												"nameLocation": "5272:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3962,
												"src": "5256:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3957,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5256:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3960,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAmount",
												"nameLocation": "5290:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 3962,
												"src": "5282:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3959,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5282:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5255:45:11"
									},
									"src": "5243:58:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3963,
										"nodeType": "StructuredDocumentation",
										"src": "5307:271:11",
										"text": " @notice Emitted on successful resolution and payout.\n @param bountyId Id of the bounty.\n @param recipient Address receiving the net payout.\n @param net Amount sent to recipient (gross - fee).\n @param fee Amount sent to feeVault."
									},
									"eventSelector": "461dc02513380b552c1c7e42377606be7a1c06610e50589fc4664dd29bf47fc0",
									"id": 3973,
									"name": "Resolved",
									"nameLocation": "5589:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3965,
												"indexed": true,
												"mutability": "mutable",
												"name": "bountyId",
												"nameLocation": "5623:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3973,
												"src": "5607:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3964,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5607:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3967,
												"indexed": true,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "5657:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 3973,
												"src": "5641:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5641:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3969,
												"indexed": false,
												"mutability": "mutable",
												"name": "net",
												"nameLocation": "5684:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3973,
												"src": "5676:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3968,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5676:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3971,
												"indexed": false,
												"mutability": "mutable",
												"name": "fee",
												"nameLocation": "5705:3:11",
												"nodeType": "VariableDeclaration",
												"scope": 3973,
												"src": "5697:11:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5697:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5597:117:11"
									},
									"src": "5583:132:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3974,
										"nodeType": "StructuredDocumentation",
										"src": "5721:221:11",
										"text": " @notice Emitted when an expired Open bounty is refunded to the sponsor.\n @param bountyId Id of the bounty.\n @param sponsor Sponsor receiving the refund.\n @param amount Amount refunded."
									},
									"eventSelector": "f552ca82e113ac3c539c3d617f29fcd19c172a0c75dad017555c9e109f7fe183",
									"id": 3982,
									"name": "Refunded",
									"nameLocation": "5953:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3981,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3976,
												"indexed": true,
												"mutability": "mutable",
												"name": "bountyId",
												"nameLocation": "5987:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3982,
												"src": "5971:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3975,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5971:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3978,
												"indexed": true,
												"mutability": "mutable",
												"name": "sponsor",
												"nameLocation": "6021:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3982,
												"src": "6005:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3977,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6005:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3980,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6046:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3982,
												"src": "6038:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3979,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6038:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5961:97:11"
									},
									"src": "5947:112:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3983,
										"nodeType": "StructuredDocumentation",
										"src": "6065:237:11",
										"text": " @notice Emitted when an Open bounty is canceled by the sponsor before deadline.\n @param bountyId Id of the bounty.\n @param sponsor Sponsor receiving the returned funds.\n @param amount Amount returned."
									},
									"eventSelector": "13ca42b383dddac8a499886c122185485535c8144d34355991f87265cfbee4cc",
									"id": 3991,
									"name": "Canceled",
									"nameLocation": "6313:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3985,
												"indexed": true,
												"mutability": "mutable",
												"name": "bountyId",
												"nameLocation": "6347:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3991,
												"src": "6331:24:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 3984,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6331:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3987,
												"indexed": true,
												"mutability": "mutable",
												"name": "sponsor",
												"nameLocation": "6381:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 3991,
												"src": "6365:23:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3986,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6365:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3989,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "6406:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3991,
												"src": "6398:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3988,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6398:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6321:97:11"
									},
									"src": "6307:112:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 3992,
										"nodeType": "StructuredDocumentation",
										"src": "6425:170:11",
										"text": " @notice Emitted when fee parameters are updated by owner.\n @param feeBps New fee in basis points.\n @param feeVault Address to receive fees."
									},
									"eventSelector": "553bd03bb9146c7a9c7ad0a260aed36e8d47650815df076dfb60f9d47e6cf727",
									"id": 3998,
									"name": "FeeParamsUpdated",
									"nameLocation": "6606:16:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 3997,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 3994,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeBps",
												"nameLocation": "6630:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 3998,
												"src": "6623:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 3993,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "6623:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 3996,
												"indexed": false,
												"mutability": "mutable",
												"name": "feeVault",
												"nameLocation": "6646:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 3998,
												"src": "6638:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 3995,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6638:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6622:33:11"
									},
									"src": "6600:56:11"
								},
								{
									"documentation": {
										"id": 3999,
										"nodeType": "StructuredDocumentation",
										"src": "6695:74:11",
										"text": "@notice Thrown when parameters fail validation (range/overflow/state)."
									},
									"errorSelector": "a86b6512",
									"id": 4001,
									"name": "InvalidParams",
									"nameLocation": "6780:13:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6793:2:11"
									},
									"src": "6774:22:11"
								},
								{
									"documentation": {
										"id": 4002,
										"nodeType": "StructuredDocumentation",
										"src": "6802:74:11",
										"text": "@notice Thrown when attempting to create a bounty that already exists."
									},
									"errorSelector": "23369fa6",
									"id": 4004,
									"name": "AlreadyExists",
									"nameLocation": "6887:13:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6900:2:11"
									},
									"src": "6881:22:11"
								},
								{
									"documentation": {
										"id": 4005,
										"nodeType": "StructuredDocumentation",
										"src": "6909:74:11",
										"text": "@notice Thrown when action requires an Open bounty but it is not Open."
									},
									"errorSelector": "ddafad98",
									"id": 4007,
									"name": "NotOpen",
									"nameLocation": "6994:7:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7001:2:11"
									},
									"src": "6988:16:11"
								},
								{
									"documentation": {
										"id": 4008,
										"nodeType": "StructuredDocumentation",
										"src": "7010:57:11",
										"text": "@notice Thrown when caller is not the bounty sponsor."
									},
									"errorSelector": "df4795c7",
									"id": 4010,
									"name": "NotSponsor",
									"nameLocation": "7078:10:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7088:2:11"
									},
									"src": "7072:19:11"
								},
								{
									"documentation": {
										"id": 4011,
										"nodeType": "StructuredDocumentation",
										"src": "7097:62:11",
										"text": "@notice Thrown when caller is not the designated resolver."
									},
									"errorSelector": "ba2a9fc2",
									"id": 4013,
									"name": "NotResolver",
									"nameLocation": "7170:11:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7181:2:11"
									},
									"src": "7164:20:11"
								},
								{
									"documentation": {
										"id": 4014,
										"nodeType": "StructuredDocumentation",
										"src": "7190:57:11",
										"text": "@notice Thrown when refund attempted before deadline."
									},
									"errorSelector": "66ec4ee6",
									"id": 4016,
									"name": "DeadlineNotReached",
									"nameLocation": "7258:18:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4015,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7276:2:11"
									},
									"src": "7252:27:11"
								},
								{
									"documentation": {
										"id": 4017,
										"nodeType": "StructuredDocumentation",
										"src": "7285:52:11",
										"text": "@notice Thrown when an address argument is zero."
									},
									"errorSelector": "d92e233d",
									"id": 4019,
									"name": "ZeroAddress",
									"nameLocation": "7348:11:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4018,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7359:2:11"
									},
									"src": "7342:20:11"
								},
								{
									"documentation": {
										"id": 4020,
										"nodeType": "StructuredDocumentation",
										"src": "7368:51:11",
										"text": "@notice Thrown when an amount argument is zero."
									},
									"errorSelector": "1f2a2005",
									"id": 4022,
									"name": "ZeroAmount",
									"nameLocation": "7430:10:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 4021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7440:2:11"
									},
									"src": "7424:19:11"
								},
								{
									"body": {
										"id": 4110,
										"nodeType": "Block",
										"src": "7959:603:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 4056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"id": 4049,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4042,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4037,
																"name": "usdc_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4025,
																"src": "7986:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 4040,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8003:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 4039,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7995:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 4038,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7995:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 4041,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7995:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7986:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "||",
														"rightExpression": {
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 4048,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 4043,
																"name": "_feeVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4029,
																"src": "8021:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 4046,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "8042:1:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 4045,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8034:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 4044,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "8034:7:11",
																		"typeDescriptions": {}
																	}
																},
																"id": 4047,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8034:10:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "8021:23:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"src": "7986:58:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 4055,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4050,
															"name": "initialOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4031,
															"src": "8060:12:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 4053,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8084:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 4052,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8076:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4051,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8076:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 4054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8076:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "8060:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "7986:100:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4060,
												"nodeType": "IfStatement",
												"src": "7969:148:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4057,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4019,
															"src": "8104:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4058,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8104:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4059,
													"nodeType": "RevertStatement",
													"src": "8097:20:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 4063,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4061,
														"name": "_feeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4027,
														"src": "8131:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 4062,
														"name": "MAX_FEE_BPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3891,
														"src": "8141:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "8131:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4067,
												"nodeType": "IfStatement",
												"src": "8127:49:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4064,
															"name": "InvalidParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4001,
															"src": "8161:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4065,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8161:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4066,
													"nodeType": "RevertStatement",
													"src": "8154:22:11"
												}
											},
											{
												"expression": {
													"id": 4072,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4068,
														"name": "_usdc",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3923,
														"src": "8187:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 4070,
																"name": "usdc_",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4025,
																"src": "8202:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 4069,
															"name": "IERC20",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 225,
															"src": "8195:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20_$225_$",
																"typeString": "type(contract IERC20)"
															}
														},
														"id": 4071,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8195:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20_$225",
															"typeString": "contract IERC20"
														}
													},
													"src": "8187:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"id": 4073,
												"nodeType": "ExpressionStatement",
												"src": "8187:21:11"
											},
											{
												"assignments": [
													4075
												],
												"declarations": [
													{
														"constant": false,
														"id": 4075,
														"mutability": "mutable",
														"name": "dec",
														"nameLocation": "8331:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 4110,
														"src": "8325:9:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														},
														"typeName": {
															"id": 4074,
															"name": "uint8",
															"nodeType": "ElementaryTypeName",
															"src": "8325:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint8",
																"typeString": "uint8"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4076,
												"nodeType": "VariableDeclarationStatement",
												"src": "8325:9:11"
											},
											{
												"clauses": [
													{
														"block": {
															"id": 4089,
															"nodeType": "Block",
															"src": "8399:32:11",
															"statements": [
																{
																	"expression": {
																		"id": 4087,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 4085,
																			"name": "dec",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4075,
																			"src": "8413:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"id": 4086,
																			"name": "d",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4083,
																			"src": "8419:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"src": "8413:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 4088,
																	"nodeType": "ExpressionStatement",
																	"src": "8413:7:11"
																}
															]
														},
														"errorName": "",
														"id": 4090,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 4084,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 4083,
																	"mutability": "mutable",
																	"name": "d",
																	"nameLocation": "8396:1:11",
																	"nodeType": "VariableDeclaration",
																	"scope": 4090,
																	"src": "8390:7:11",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint8",
																		"typeString": "uint8"
																	},
																	"typeName": {
																		"id": 4082,
																		"name": "uint8",
																		"nodeType": "ElementaryTypeName",
																		"src": "8390:5:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "8389:9:11"
														},
														"src": "8381:50:11"
													},
													{
														"block": {
															"id": 4095,
															"nodeType": "Block",
															"src": "8438:32:11",
															"statements": [
																{
																	"expression": {
																		"id": 4093,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftHandSide": {
																			"id": 4091,
																			"name": "dec",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4075,
																			"src": "8452:3:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint8",
																				"typeString": "uint8"
																			}
																		},
																		"nodeType": "Assignment",
																		"operator": "=",
																		"rightHandSide": {
																			"hexValue": "36",
																			"id": 4092,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "number",
																			"lValueRequested": false,
																			"nodeType": "Literal",
																			"src": "8458:1:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_rational_6_by_1",
																				"typeString": "int_const 6"
																			},
																			"value": "6"
																		},
																		"src": "8452:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint8",
																			"typeString": "uint8"
																		}
																	},
																	"id": 4094,
																	"nodeType": "ExpressionStatement",
																	"src": "8452:7:11"
																}
															]
														},
														"errorName": "",
														"id": 4096,
														"nodeType": "TryCatchClause",
														"src": "8432:38:11"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 4078,
																	"name": "usdc_",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4025,
																	"src": "8363:5:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 4077,
																"name": "IERC20Metadata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 251,
																"src": "8348:14:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Metadata_$251_$",
																	"typeString": "type(contract IERC20Metadata)"
																}
															},
															"id": 4079,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8348:21:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Metadata_$251",
																"typeString": "contract IERC20Metadata"
															}
														},
														"id": 4080,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8370:8:11",
														"memberName": "decimals",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 250,
														"src": "8348:30:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_uint8_$",
															"typeString": "function () view external returns (uint8)"
														}
													},
													"id": 4081,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8348:32:11",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 4097,
												"nodeType": "TryStatement",
												"src": "8344:126:11"
											},
											{
												"expression": {
													"id": 4100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4098,
														"name": "_usdcDecimals",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3926,
														"src": "8479:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4099,
														"name": "dec",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4075,
														"src": "8495:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "8479:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"id": 4101,
												"nodeType": "ExpressionStatement",
												"src": "8479:19:11"
											},
											{
												"expression": {
													"id": 4104,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4102,
														"name": "feeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3935,
														"src": "8509:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4103,
														"name": "_feeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4027,
														"src": "8518:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "8509:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 4105,
												"nodeType": "ExpressionStatement",
												"src": "8509:16:11"
											},
											{
												"expression": {
													"id": 4108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4106,
														"name": "feeVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3938,
														"src": "8535:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4107,
														"name": "_feeVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4029,
														"src": "8546:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "8535:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 4109,
												"nodeType": "ExpressionStatement",
												"src": "8535:20:11"
											}
										]
									},
									"documentation": {
										"id": 4023,
										"nodeType": "StructuredDocumentation",
										"src": "7487:323:11",
										"text": " @param usdc_ ERC-20 token address used for all escrowed transfers (intended USDC).\n @param _feeBps Initial protocol fee in basis points (≤ MAX_FEE_BPS).\n @param _feeVault Address to receive protocol fees on resolution.\n @param initialOwner Contract owner (admin for pause/fee params)."
									},
									"id": 4111,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 4034,
													"name": "initialOwner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 4031,
													"src": "7945:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												}
											],
											"id": 4035,
											"kind": "baseConstructorSpecifier",
											"modifierName": {
												"id": 4033,
												"name": "Ownable",
												"nameLocations": [
													"7937:7:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 147,
												"src": "7937:7:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "7937:21:11"
										}
									],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4032,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4025,
												"mutability": "mutable",
												"name": "usdc_",
												"nameLocation": "7844:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 4111,
												"src": "7836:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4024,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7836:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4027,
												"mutability": "mutable",
												"name": "_feeBps",
												"nameLocation": "7866:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 4111,
												"src": "7859:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 4026,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "7859:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4029,
												"mutability": "mutable",
												"name": "_feeVault",
												"nameLocation": "7891:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 4111,
												"src": "7883:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4028,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7883:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4031,
												"mutability": "mutable",
												"name": "initialOwner",
												"nameLocation": "7918:12:11",
												"nodeType": "VariableDeclaration",
												"scope": 4111,
												"src": "7910:20:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4030,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7910:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7826:110:11"
									},
									"returnParameters": {
										"id": 4036,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7959:0:11"
									},
									"scope": 4740,
									"src": "7815:747:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4132,
										"nodeType": "Block",
										"src": "9157:85:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 4126,
																	"name": "sponsor",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4114,
																	"src": "9201:7:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 4127,
																	"name": "repoIdHash",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4116,
																	"src": "9210:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"id": 4128,
																	"name": "issueNumber",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4118,
																	"src": "9222:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																],
																"expression": {
																	"id": 4124,
																	"name": "abi",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967295,
																	"src": "9184:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_abi",
																		"typeString": "abi"
																	}
																},
																"id": 4125,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"memberLocation": "9188:12:11",
																"memberName": "encodePacked",
																"nodeType": "MemberAccess",
																"src": "9184:16:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																	"typeString": "function () pure returns (bytes memory)"
																}
															},
															"id": 4129,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "9184:50:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 4123,
														"name": "keccak256",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967288,
														"src": "9174:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
															"typeString": "function (bytes memory) pure returns (bytes32)"
														}
													},
													"id": 4130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9174:61:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 4122,
												"id": 4131,
												"nodeType": "Return",
												"src": "9167:68:11"
											}
										]
									},
									"documentation": {
										"id": 4112,
										"nodeType": "StructuredDocumentation",
										"src": "8616:385:11",
										"text": " @notice Compute the deterministic bounty id.\n @dev Establishes a one-bounty-per (sponsor, repoIdHash, issueNumber) invariant.\n @param sponsor Address of the sponsor (creator/funder).\n @param repoIdHash Repository identifier hash.\n @param issueNumber Issue number reference.\n @return bountyId keccak256(sponsor, repoIdHash, issueNumber)."
									},
									"functionSelector": "cd2025c3",
									"id": 4133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "computeBountyId",
									"nameLocation": "9015:15:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4114,
												"mutability": "mutable",
												"name": "sponsor",
												"nameLocation": "9048:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 4133,
												"src": "9040:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4113,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9040:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4116,
												"mutability": "mutable",
												"name": "repoIdHash",
												"nameLocation": "9073:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4133,
												"src": "9065:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4115,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9065:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4118,
												"mutability": "mutable",
												"name": "issueNumber",
												"nameLocation": "9100:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 4133,
												"src": "9093:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4117,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "9093:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9030:87:11"
									},
									"returnParameters": {
										"id": 4122,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4121,
												"mutability": "mutable",
												"name": "bountyId",
												"nameLocation": "9147:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4133,
												"src": "9139:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "9139:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9138:18:11"
									},
									"scope": 4740,
									"src": "9006:236:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 4142,
										"nodeType": "Block",
										"src": "9435:25:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 4139,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 960,
														"src": "9445:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 4140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9445:8:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4141,
												"nodeType": "ExpressionStatement",
												"src": "9445:8:11"
											}
										]
									},
									"documentation": {
										"id": 4134,
										"nodeType": "StructuredDocumentation",
										"src": "9280:114:11",
										"text": " @notice Pause all state-changing functions.\n @dev Only owner. Idempotent via OZ Pausable."
									},
									"functionSelector": "8456cb59",
									"id": 4143,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4137,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4136,
												"name": "onlyOwner",
												"nameLocations": [
													"9425:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9425:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9425:9:11"
										}
									],
									"name": "pause",
									"nameLocation": "9408:5:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4135,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9413:2:11"
									},
									"returnParameters": {
										"id": 4138,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9435:0:11"
									},
									"scope": 4740,
									"src": "9399:61:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4152,
										"nodeType": "Block",
										"src": "9625:27:11",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 4149,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 976,
														"src": "9635:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 4150,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "9635:10:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4151,
												"nodeType": "ExpressionStatement",
												"src": "9635:10:11"
											}
										]
									},
									"documentation": {
										"id": 4144,
										"nodeType": "StructuredDocumentation",
										"src": "9466:116:11",
										"text": " @notice Unpause all state-changing functions.\n @dev Only owner. Idempotent via OZ Pausable."
									},
									"functionSelector": "3f4ba83a",
									"id": 4153,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4147,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4146,
												"name": "onlyOwner",
												"nameLocations": [
													"9615:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9615:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9615:9:11"
										}
									],
									"name": "unpause",
									"nameLocation": "9596:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4145,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9603:2:11"
									},
									"returnParameters": {
										"id": 4148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "9625:0:11"
									},
									"scope": 4740,
									"src": "9587:65:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4193,
										"nodeType": "Block",
										"src": "10006:232:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4168,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4163,
														"name": "_feeVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4158,
														"src": "10020:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 4166,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "10041:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 4165,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "10033:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4164,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "10033:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 4167,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10033:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10020:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4172,
												"nodeType": "IfStatement",
												"src": "10016:49:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4169,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4019,
															"src": "10052:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4170,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10052:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4171,
													"nodeType": "RevertStatement",
													"src": "10045:20:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													},
													"id": 4175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4173,
														"name": "_feeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4156,
														"src": "10079:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"id": 4174,
														"name": "MAX_FEE_BPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3891,
														"src": "10089:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "10079:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4179,
												"nodeType": "IfStatement",
												"src": "10075:49:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4176,
															"name": "InvalidParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4001,
															"src": "10109:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4177,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "10109:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4178,
													"nodeType": "RevertStatement",
													"src": "10102:22:11"
												}
											},
											{
												"expression": {
													"id": 4182,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4180,
														"name": "feeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3935,
														"src": "10134:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4181,
														"name": "_feeBps",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4156,
														"src": "10143:7:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint16",
															"typeString": "uint16"
														}
													},
													"src": "10134:16:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"id": 4183,
												"nodeType": "ExpressionStatement",
												"src": "10134:16:11"
											},
											{
												"expression": {
													"id": 4186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4184,
														"name": "feeVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3938,
														"src": "10160:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4185,
														"name": "_feeVault",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4158,
														"src": "10171:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "10160:20:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 4187,
												"nodeType": "ExpressionStatement",
												"src": "10160:20:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4189,
															"name": "_feeBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4156,
															"src": "10212:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 4190,
															"name": "_feeVault",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4158,
															"src": "10221:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 4188,
														"name": "FeeParamsUpdated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3998,
														"src": "10195:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint16_$_t_address_$returns$__$",
															"typeString": "function (uint16,address)"
														}
													},
													"id": 4191,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "10195:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4192,
												"nodeType": "EmitStatement",
												"src": "10190:41:11"
											}
										]
									},
									"documentation": {
										"id": 4154,
										"nodeType": "StructuredDocumentation",
										"src": "9658:245:11",
										"text": " @notice Update protocol fee and fee vault address.\n @dev Only owner. Fee bounded by MAX_FEE_BPS. feeVault must be non-zero.\n @param _feeBps New fee in basis points.\n @param _feeVault New fee receiver address."
									},
									"functionSelector": "e0120cf8",
									"id": 4194,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4161,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4160,
												"name": "onlyOwner",
												"nameLocations": [
													"9996:9:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 58,
												"src": "9996:9:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "9996:9:11"
										}
									],
									"name": "setFeeParams",
									"nameLocation": "9917:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4159,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4156,
												"mutability": "mutable",
												"name": "_feeBps",
												"nameLocation": "9946:7:11",
												"nodeType": "VariableDeclaration",
												"scope": 4194,
												"src": "9939:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint16",
													"typeString": "uint16"
												},
												"typeName": {
													"id": 4155,
													"name": "uint16",
													"nodeType": "ElementaryTypeName",
													"src": "9939:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint16",
														"typeString": "uint16"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4158,
												"mutability": "mutable",
												"name": "_feeVault",
												"nameLocation": "9971:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 4194,
												"src": "9963:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "9963:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "9929:57:11"
									},
									"returnParameters": {
										"id": 4162,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "10006:0:11"
									},
									"scope": 4740,
									"src": "9908:330:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4349,
										"nodeType": "Block",
										"src": "11318:1027:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4219,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4214,
														"name": "resolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4197,
														"src": "11332:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 4217,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "11352:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 4216,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "11344:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4215,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "11344:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 4218,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11344:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11332:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4223,
												"nodeType": "IfStatement",
												"src": "11328:48:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4220,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4019,
															"src": "11363:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4221,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11363:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4222,
													"nodeType": "RevertStatement",
													"src": "11356:20:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 4233,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"id": 4229,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4224,
															"name": "repoIdHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4199,
															"src": "11390:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 4227,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "11412:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 4226,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "11404:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_bytes32_$",
																	"typeString": "type(bytes32)"
																},
																"typeName": {
																	"id": 4225,
																	"name": "bytes32",
																	"nodeType": "ElementaryTypeName",
																	"src": "11404:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 4228,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "11404:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"src": "11390:24:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 4232,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 4230,
															"name": "issueNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4201,
															"src": "11418:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 4231,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "11433:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "11418:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "11390:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4237,
												"nodeType": "IfStatement",
												"src": "11386:84:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4234,
															"name": "InvalidParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4001,
															"src": "11455:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4235,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11455:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4236,
													"nodeType": "RevertStatement",
													"src": "11448:22:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4241,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4238,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4203,
														"src": "11484:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<=",
													"rightExpression": {
														"expression": {
															"id": 4239,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "11496:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 4240,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11502:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "11496:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "11484:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4245,
												"nodeType": "IfStatement",
												"src": "11480:55:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4242,
															"name": "InvalidParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4001,
															"src": "11520:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4243,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11520:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4244,
													"nodeType": "RevertStatement",
													"src": "11513:22:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4246,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4205,
														"src": "11549:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 4247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "11559:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "11549:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4252,
												"nodeType": "IfStatement",
												"src": "11545:36:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4249,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4022,
															"src": "11569:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4250,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11569:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4251,
													"nodeType": "RevertStatement",
													"src": "11562:19:11"
												}
											},
											{
												"expression": {
													"id": 4260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 4253,
														"name": "bountyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4212,
														"src": "11592:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"expression": {
																	"id": 4255,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "11619:3:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 4256,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "11623:6:11",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "11619:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 4257,
																"name": "repoIdHash",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4199,
																"src": "11631:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 4258,
																"name": "issueNumber",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4201,
																"src": "11643:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															],
															"id": 4254,
															"name": "computeBountyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4133,
															"src": "11603:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_address_$_t_bytes32_$_t_uint64_$returns$_t_bytes32_$",
																"typeString": "function (address,bytes32,uint64) pure returns (bytes32)"
															}
														},
														"id": 4259,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11603:52:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "11592:63:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 4261,
												"nodeType": "ExpressionStatement",
												"src": "11592:63:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Status_$3902",
														"typeString": "enum BountyEscrow.Status"
													},
													"id": 4268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"baseExpression": {
																"id": 4262,
																"name": "_bounties",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3932,
																"src": "11669:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bounty_$3919_storage_$",
																	"typeString": "mapping(bytes32 => struct BountyEscrow.Bounty storage ref)"
																}
															},
															"id": 4264,
															"indexExpression": {
																"id": 4263,
																"name": "bountyId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4212,
																"src": "11679:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "11669:19:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage",
																"typeString": "struct BountyEscrow.Bounty storage ref"
															}
														},
														"id": 4265,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11689:6:11",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3918,
														"src": "11669:26:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 4266,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3902,
															"src": "11699:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$3902_$",
																"typeString": "type(enum BountyEscrow.Status)"
															}
														},
														"id": 4267,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "11706:4:11",
														"memberName": "None",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3897,
														"src": "11699:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"src": "11669:41:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4272,
												"nodeType": "IfStatement",
												"src": "11665:69:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4269,
															"name": "AlreadyExists",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4004,
															"src": "11719:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4270,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11719:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4271,
													"nodeType": "RevertStatement",
													"src": "11712:22:11"
												}
											},
											{
												"assignments": [
													4275
												],
												"declarations": [
													{
														"constant": false,
														"id": 4275,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "11760:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 4349,
														"src": "11745:16:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
															"typeString": "struct BountyEscrow.Bounty"
														},
														"typeName": {
															"id": 4274,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4273,
																"name": "Bounty",
																"nameLocations": [
																	"11745:6:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3919,
																"src": "11745:6:11"
															},
															"referencedDeclaration": 3919,
															"src": "11745:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4279,
												"initialValue": {
													"baseExpression": {
														"id": 4276,
														"name": "_bounties",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3932,
														"src": "11764:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bounty_$3919_storage_$",
															"typeString": "mapping(bytes32 => struct BountyEscrow.Bounty storage ref)"
														}
													},
													"id": 4278,
													"indexExpression": {
														"id": 4277,
														"name": "bountyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4212,
														"src": "11774:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "11764:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bounty_$3919_storage",
														"typeString": "struct BountyEscrow.Bounty storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "11745:38:11"
											},
											{
												"expression": {
													"id": 4284,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4280,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4275,
															"src": "11793:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4282,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11795:10:11",
														"memberName": "repoIdHash",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3905,
														"src": "11793:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4283,
														"name": "repoIdHash",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4199,
														"src": "11808:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "11793:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 4285,
												"nodeType": "ExpressionStatement",
												"src": "11793:25:11"
											},
											{
												"expression": {
													"id": 4291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4286,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4275,
															"src": "11828:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4288,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11830:7:11",
														"memberName": "sponsor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3907,
														"src": "11828:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4289,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "11840:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 4290,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "11844:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "11840:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11828:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 4292,
												"nodeType": "ExpressionStatement",
												"src": "11828:22:11"
											},
											{
												"expression": {
													"id": 4297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4293,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4275,
															"src": "11860:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4295,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11862:8:11",
														"memberName": "resolver",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3909,
														"src": "11860:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4296,
														"name": "resolver",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4197,
														"src": "11873:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "11860:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 4298,
												"nodeType": "ExpressionStatement",
												"src": "11860:21:11"
											},
											{
												"expression": {
													"id": 4305,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4299,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4275,
															"src": "11891:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4301,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11893:6:11",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3911,
														"src": "11891:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 4302,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4205,
																"src": "11902:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4303,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "11909:8:11",
															"memberName": "toUint96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2687,
															"src": "11902:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$attached_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint96)"
															}
														},
														"id": 4304,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "11902:17:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "11891:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 4306,
												"nodeType": "ExpressionStatement",
												"src": "11891:28:11"
											},
											{
												"expression": {
													"id": 4311,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4307,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4275,
															"src": "11982:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4309,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "11984:8:11",
														"memberName": "deadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3913,
														"src": "11982:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4310,
														"name": "deadline",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4203,
														"src": "11995:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "11982:21:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 4312,
												"nodeType": "ExpressionStatement",
												"src": "11982:21:11"
											},
											{
												"expression": {
													"id": 4317,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4313,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4275,
															"src": "12013:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4315,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12015:11:11",
														"memberName": "issueNumber",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3915,
														"src": "12013:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 4316,
														"name": "issueNumber",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4201,
														"src": "12029:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "12013:27:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 4318,
												"nodeType": "ExpressionStatement",
												"src": "12013:27:11"
											},
											{
												"expression": {
													"id": 4324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4319,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4275,
															"src": "12050:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4321,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "12052:6:11",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3918,
														"src": "12050:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4322,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3902,
															"src": "12061:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$3902_$",
																"typeString": "type(enum BountyEscrow.Status)"
															}
														},
														"id": 4323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12068:4:11",
														"memberName": "Open",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3898,
														"src": "12061:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"src": "12050:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$3902",
														"typeString": "enum BountyEscrow.Status"
													}
												},
												"id": 4325,
												"nodeType": "ExpressionStatement",
												"src": "12050:22:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4329,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12106:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4330,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12110:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12106:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4333,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "12126:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BountyEscrow_$4740",
																		"typeString": "contract BountyEscrow"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BountyEscrow_$4740",
																		"typeString": "contract BountyEscrow"
																	}
																],
																"id": 4332,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "12118:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4331,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "12118:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 4334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "12118:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4335,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4205,
															"src": "12133:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4326,
															"name": "_usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3923,
															"src": "12083:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 4328,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12089:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "12083:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 4336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12083:57:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4337,
												"nodeType": "ExpressionStatement",
												"src": "12083:57:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4339,
															"name": "bountyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4212,
															"src": "12183:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 4340,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "12205:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4341,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "12209:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "12205:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4342,
															"name": "repoIdHash",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4199,
															"src": "12229:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 4343,
															"name": "issueNumber",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4201,
															"src": "12253:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 4344,
															"name": "deadline",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4203,
															"src": "12278:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														{
															"id": 4345,
															"name": "resolver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4197,
															"src": "12300:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4346,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4205,
															"src": "12322:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4338,
														"name": "BountyCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3955,
														"src": "12156:13:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_bytes32_$_t_uint64_$_t_uint64_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,bytes32,uint64,uint64,address,uint256)"
														}
													},
													"id": 4347,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "12156:182:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4348,
												"nodeType": "EmitStatement",
												"src": "12151:187:11"
											}
										]
									},
									"documentation": {
										"id": 4195,
										"nodeType": "StructuredDocumentation",
										"src": "10281:810:11",
										"text": " @notice Create a new bounty and fund it in a single transaction.\n @dev Requirements:\n - resolver != 0\n - repoIdHash != 0 and issueNumber != 0\n - deadline > now\n - amount > 0\n - bountyId (sponsor, repoIdHash, issueNumber) must not already exist\n Effects:\n - Initializes Bounty struct with Status.Open\n - Transfers `amount` of _usdc from msg.sender to this contract\n @param resolver Address allowed to resolve this bounty.\n @param repoIdHash Repository identifier hash.\n @param issueNumber Issue number within the repository.\n @param deadline Timestamp after which sponsor can refund if still Open.\n @param amount Amount to escrow (USDC units).\n @return bountyId Deterministic id for the created bounty."
									},
									"functionSelector": "c23945ac",
									"id": 4350,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4208,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4207,
												"name": "nonReentrant",
												"nameLocations": [
													"11264:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1010,
												"src": "11264:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "11264:12:11"
										},
										{
											"id": 4210,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4209,
												"name": "whenNotPaused",
												"nameLocations": [
													"11277:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 902,
												"src": "11277:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "11277:13:11"
										}
									],
									"name": "createBounty",
									"nameLocation": "11105:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4197,
												"mutability": "mutable",
												"name": "resolver",
												"nameLocation": "11135:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4350,
												"src": "11127:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4196,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "11127:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4199,
												"mutability": "mutable",
												"name": "repoIdHash",
												"nameLocation": "11161:10:11",
												"nodeType": "VariableDeclaration",
												"scope": 4350,
												"src": "11153:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4198,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11153:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4201,
												"mutability": "mutable",
												"name": "issueNumber",
												"nameLocation": "11188:11:11",
												"nodeType": "VariableDeclaration",
												"scope": 4350,
												"src": "11181:18:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4200,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "11181:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4203,
												"mutability": "mutable",
												"name": "deadline",
												"nameLocation": "11216:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4350,
												"src": "11209:15:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 4202,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "11209:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4205,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "11242:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 4350,
												"src": "11234:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4204,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "11234:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11117:137:11"
									},
									"returnParameters": {
										"id": 4213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4212,
												"mutability": "mutable",
												"name": "bountyId",
												"nameLocation": "11308:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4350,
												"src": "11300:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "11300:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "11299:18:11"
									},
									"scope": 4740,
									"src": "11096:1249:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4440,
										"nodeType": "Block",
										"src": "12754:525:11",
										"statements": [
											{
												"assignments": [
													4364
												],
												"declarations": [
													{
														"constant": false,
														"id": 4364,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "12779:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 4440,
														"src": "12764:16:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
															"typeString": "struct BountyEscrow.Bounty"
														},
														"typeName": {
															"id": 4363,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4362,
																"name": "Bounty",
																"nameLocations": [
																	"12764:6:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3919,
																"src": "12764:6:11"
															},
															"referencedDeclaration": 3919,
															"src": "12764:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4368,
												"initialValue": {
													"baseExpression": {
														"id": 4365,
														"name": "_bounties",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3932,
														"src": "12783:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bounty_$3919_storage_$",
															"typeString": "mapping(bytes32 => struct BountyEscrow.Bounty storage ref)"
														}
													},
													"id": 4367,
													"indexExpression": {
														"id": 4366,
														"name": "bountyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4353,
														"src": "12793:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "12783:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bounty_$3919_storage",
														"typeString": "struct BountyEscrow.Bounty storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "12764:38:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Status_$3902",
														"typeString": "enum BountyEscrow.Status"
													},
													"id": 4373,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4369,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4364,
															"src": "12816:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4370,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12818:6:11",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3918,
														"src": "12816:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 4371,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3902,
															"src": "12828:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$3902_$",
																"typeString": "type(enum BountyEscrow.Status)"
															}
														},
														"id": 4372,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "12835:4:11",
														"memberName": "Open",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3898,
														"src": "12828:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"src": "12816:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4377,
												"nodeType": "IfStatement",
												"src": "12812:45:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4374,
															"name": "NotOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4007,
															"src": "12848:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4375,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12848:9:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4376,
													"nodeType": "RevertStatement",
													"src": "12841:16:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4382,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4378,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "12871:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 4379,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12875:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "12871:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 4380,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4364,
															"src": "12885:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4381,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "12887:7:11",
														"memberName": "sponsor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3907,
														"src": "12885:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "12871:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4386,
												"nodeType": "IfStatement",
												"src": "12867:48:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4383,
															"name": "NotSponsor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4010,
															"src": "12903:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4384,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12903:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4385,
													"nodeType": "RevertStatement",
													"src": "12896:19:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4387,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4355,
														"src": "12929:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 4388,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "12939:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "12929:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4393,
												"nodeType": "IfStatement",
												"src": "12925:36:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4390,
															"name": "ZeroAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4022,
															"src": "12949:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4391,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "12949:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4392,
													"nodeType": "RevertStatement",
													"src": "12942:19:11"
												}
											},
											{
												"assignments": [
													4395
												],
												"declarations": [
													{
														"constant": false,
														"id": 4395,
														"mutability": "mutable",
														"name": "newAmt",
														"nameLocation": "13028:6:11",
														"nodeType": "VariableDeclaration",
														"scope": 4440,
														"src": "13020:14:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4394,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13020:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4403,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4402,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"expression": {
																	"id": 4398,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4364,
																	"src": "13045:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																		"typeString": "struct BountyEscrow.Bounty storage pointer"
																	}
																},
																"id": 4399,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13047:6:11",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3911,
																"src": "13045:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint96",
																	"typeString": "uint96"
																}
															],
															"id": 4397,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "13037:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_uint256_$",
																"typeString": "type(uint256)"
															},
															"typeName": {
																"id": 4396,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "13037:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 4400,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13037:17:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 4401,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4355,
														"src": "13057:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "13037:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13020:43:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4410,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4404,
														"name": "newAmt",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4395,
														"src": "13077:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 4407,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "13091:6:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	},
																	"typeName": {
																		"id": 4406,
																		"name": "uint96",
																		"nodeType": "ElementaryTypeName",
																		"src": "13091:6:11",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint96_$",
																		"typeString": "type(uint96)"
																	}
																],
																"id": 4405,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "13086:4:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 4408,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13086:12:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint96",
																"typeString": "type(uint96)"
															}
														},
														"id": 4409,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13099:3:11",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "13086:16:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "13077:25:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4414,
												"nodeType": "IfStatement",
												"src": "13073:53:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4411,
															"name": "InvalidParams",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4001,
															"src": "13111:13:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4412,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13111:15:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4413,
													"nodeType": "RevertStatement",
													"src": "13104:22:11"
												}
											},
											{
												"expression": {
													"id": 4421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4415,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4364,
															"src": "13136:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4417,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13138:6:11",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3911,
														"src": "13136:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"id": 4418,
																"name": "newAmt",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4395,
																"src": "13147:6:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 4419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13154:8:11",
															"memberName": "toUint96",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2687,
															"src": "13147:15:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint96_$attached_to$_t_uint256_$",
																"typeString": "function (uint256) pure returns (uint96)"
															}
														},
														"id": 4420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13147:17:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"src": "13136:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 4422,
												"nodeType": "ExpressionStatement",
												"src": "13136:28:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 4426,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "13198:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 4427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13202:6:11",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "13198:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 4430,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "13218:4:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_BountyEscrow_$4740",
																		"typeString": "contract BountyEscrow"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_BountyEscrow_$4740",
																		"typeString": "contract BountyEscrow"
																	}
																],
																"id": 4429,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "13210:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 4428,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "13210:7:11",
																	"typeDescriptions": {}
																}
															},
															"id": 4431,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "13210:13:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4432,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4355,
															"src": "13225:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4423,
															"name": "_usdc",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3923,
															"src": "13175:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20_$225",
																"typeString": "contract IERC20"
															}
														},
														"id": 4425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13181:16:11",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 364,
														"src": "13175:22:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
															"typeString": "function (contract IERC20,address,address,uint256)"
														}
													},
													"id": 4433,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13175:57:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4434,
												"nodeType": "ExpressionStatement",
												"src": "13175:57:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4436,
															"name": "bountyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4353,
															"src": "13255:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 4437,
															"name": "newAmt",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4395,
															"src": "13265:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4435,
														"name": "Funded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3962,
														"src": "13248:6:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,uint256)"
														}
													},
													"id": 4438,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13248:24:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4439,
												"nodeType": "EmitStatement",
												"src": "13243:29:11"
											}
										]
									},
									"documentation": {
										"id": 4351,
										"nodeType": "StructuredDocumentation",
										"src": "12351:292:11",
										"text": " @notice Top up an existing Open bounty.\n @dev Only the sponsor can fund. Amount must be > 0. Status must be Open.\n      Emits the new total escrowed amount for auditability.\n @param bountyId Target bounty.\n @param amount Additional amount to escrow."
									},
									"functionSelector": "e46bbc9e",
									"id": 4441,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4358,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4357,
												"name": "nonReentrant",
												"nameLocations": [
													"12727:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1010,
												"src": "12727:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "12727:12:11"
										},
										{
											"id": 4360,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4359,
												"name": "whenNotPaused",
												"nameLocations": [
													"12740:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 902,
												"src": "12740:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "12740:13:11"
										}
									],
									"name": "fund",
									"nameLocation": "12657:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4353,
												"mutability": "mutable",
												"name": "bountyId",
												"nameLocation": "12679:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4441,
												"src": "12671:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4352,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "12671:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4355,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "12705:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 4441,
												"src": "12697:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4354,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "12697:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "12661:56:11"
									},
									"returnParameters": {
										"id": 4361,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "12754:0:11"
									},
									"scope": 4740,
									"src": "12648:631:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4513,
										"nodeType": "Block",
										"src": "13580:374:11",
										"statements": [
											{
												"assignments": [
													4453
												],
												"declarations": [
													{
														"constant": false,
														"id": 4453,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "13605:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 4513,
														"src": "13590:16:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
															"typeString": "struct BountyEscrow.Bounty"
														},
														"typeName": {
															"id": 4452,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4451,
																"name": "Bounty",
																"nameLocations": [
																	"13590:6:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3919,
																"src": "13590:6:11"
															},
															"referencedDeclaration": 3919,
															"src": "13590:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4457,
												"initialValue": {
													"baseExpression": {
														"id": 4454,
														"name": "_bounties",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3932,
														"src": "13609:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bounty_$3919_storage_$",
															"typeString": "mapping(bytes32 => struct BountyEscrow.Bounty storage ref)"
														}
													},
													"id": 4456,
													"indexExpression": {
														"id": 4455,
														"name": "bountyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4444,
														"src": "13619:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "13609:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bounty_$3919_storage",
														"typeString": "struct BountyEscrow.Bounty storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13590:38:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Status_$3902",
														"typeString": "enum BountyEscrow.Status"
													},
													"id": 4462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4458,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4453,
															"src": "13642:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4459,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13644:6:11",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3918,
														"src": "13642:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 4460,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3902,
															"src": "13654:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$3902_$",
																"typeString": "type(enum BountyEscrow.Status)"
															}
														},
														"id": 4461,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13661:4:11",
														"memberName": "Open",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3898,
														"src": "13654:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"src": "13642:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4466,
												"nodeType": "IfStatement",
												"src": "13638:45:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4463,
															"name": "NotOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4007,
															"src": "13674:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13674:9:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4465,
													"nodeType": "RevertStatement",
													"src": "13667:16:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4467,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "13697:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 4468,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13701:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "13697:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 4469,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4453,
															"src": "13711:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4470,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "13713:7:11",
														"memberName": "sponsor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3907,
														"src": "13711:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "13697:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4475,
												"nodeType": "IfStatement",
												"src": "13693:48:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4472,
															"name": "NotSponsor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4010,
															"src": "13729:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4473,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13729:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4474,
													"nodeType": "RevertStatement",
													"src": "13722:19:11"
												}
											},
											{
												"expression": {
													"id": 4481,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4476,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4453,
															"src": "13752:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4478,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13754:6:11",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3918,
														"src": "13752:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4479,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3902,
															"src": "13763:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$3902_$",
																"typeString": "type(enum BountyEscrow.Status)"
															}
														},
														"id": 4480,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "13770:8:11",
														"memberName": "Canceled",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3901,
														"src": "13763:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"src": "13752:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$3902",
														"typeString": "enum BountyEscrow.Status"
													}
												},
												"id": 4482,
												"nodeType": "ExpressionStatement",
												"src": "13752:26:11"
											},
											{
												"assignments": [
													4484
												],
												"declarations": [
													{
														"constant": false,
														"id": 4484,
														"mutability": "mutable",
														"name": "gross",
														"nameLocation": "13796:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 4513,
														"src": "13788:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4483,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "13788:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4487,
												"initialValue": {
													"expression": {
														"id": 4485,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4453,
														"src": "13804:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
															"typeString": "struct BountyEscrow.Bounty storage pointer"
														}
													},
													"id": 4486,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "13806:6:11",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3911,
													"src": "13804:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "13788:24:11"
											},
											{
												"expression": {
													"id": 4492,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4488,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4453,
															"src": "13822:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4490,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "13824:6:11",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3911,
														"src": "13822:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 4491,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13833:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13822:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 4493,
												"nodeType": "ExpressionStatement",
												"src": "13822:12:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4494,
														"name": "gross",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4484,
														"src": "13849:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 4495,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "13857:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "13849:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4505,
												"nodeType": "IfStatement",
												"src": "13845:51:11",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 4500,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4453,
																	"src": "13879:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																		"typeString": "struct BountyEscrow.Bounty storage pointer"
																	}
																},
																"id": 4501,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "13881:7:11",
																"memberName": "sponsor",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3907,
																"src": "13879:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 4502,
																"name": "gross",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4484,
																"src": "13890:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 4497,
																"name": "_usdc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3923,
																"src": "13860:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 4499,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13866:12:11",
															"memberName": "safeTransfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 337,
															"src": "13860:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
																"typeString": "function (contract IERC20,address,uint256)"
															}
														},
														"id": 4503,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "13860:36:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4504,
													"nodeType": "ExpressionStatement",
													"src": "13860:36:11"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4507,
															"name": "bountyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4444,
															"src": "13920:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 4508,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4453,
																"src": "13930:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																	"typeString": "struct BountyEscrow.Bounty storage pointer"
																}
															},
															"id": 4509,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "13932:7:11",
															"memberName": "sponsor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3907,
															"src": "13930:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4510,
															"name": "gross",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4484,
															"src": "13941:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4506,
														"name": "Canceled",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3991,
														"src": "13911:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,uint256)"
														}
													},
													"id": 4511,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "13911:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4512,
												"nodeType": "EmitStatement",
												"src": "13906:41:11"
											}
										]
									},
									"documentation": {
										"id": 4442,
										"nodeType": "StructuredDocumentation",
										"src": "13285:220:11",
										"text": " @notice Cancel an Open bounty before the deadline and retrieve funds.\n @dev Only sponsor; bounty must be Open. Sets status to Canceled and returns all funds.\n @param bountyId Target bounty."
									},
									"functionSelector": "c4d252f5",
									"id": 4514,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4447,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4446,
												"name": "nonReentrant",
												"nameLocations": [
													"13553:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1010,
												"src": "13553:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "13553:12:11"
										},
										{
											"id": 4449,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4448,
												"name": "whenNotPaused",
												"nameLocations": [
													"13566:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 902,
												"src": "13566:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "13566:13:11"
										}
									],
									"name": "cancel",
									"nameLocation": "13519:6:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4445,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4444,
												"mutability": "mutable",
												"name": "bountyId",
												"nameLocation": "13534:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4514,
												"src": "13526:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4443,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "13526:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "13525:18:11"
									},
									"returnParameters": {
										"id": 4450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "13580:0:11"
									},
									"scope": 4740,
									"src": "13510:444:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4623,
										"nodeType": "Block",
										"src": "14489:647:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4526,
														"name": "recipient",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4519,
														"src": "14503:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 4529,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "14524:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 4528,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "14516:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 4527,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "14516:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 4530,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14516:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14503:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4535,
												"nodeType": "IfStatement",
												"src": "14499:49:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4532,
															"name": "ZeroAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4019,
															"src": "14535:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4533,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14535:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4534,
													"nodeType": "RevertStatement",
													"src": "14528:20:11"
												}
											},
											{
												"assignments": [
													4538
												],
												"declarations": [
													{
														"constant": false,
														"id": 4538,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "14574:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 4623,
														"src": "14559:16:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
															"typeString": "struct BountyEscrow.Bounty"
														},
														"typeName": {
															"id": 4537,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4536,
																"name": "Bounty",
																"nameLocations": [
																	"14559:6:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3919,
																"src": "14559:6:11"
															},
															"referencedDeclaration": 3919,
															"src": "14559:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4542,
												"initialValue": {
													"baseExpression": {
														"id": 4539,
														"name": "_bounties",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3932,
														"src": "14578:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bounty_$3919_storage_$",
															"typeString": "mapping(bytes32 => struct BountyEscrow.Bounty storage ref)"
														}
													},
													"id": 4541,
													"indexExpression": {
														"id": 4540,
														"name": "bountyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4517,
														"src": "14588:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "14578:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bounty_$3919_storage",
														"typeString": "struct BountyEscrow.Bounty storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14559:38:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Status_$3902",
														"typeString": "enum BountyEscrow.Status"
													},
													"id": 4547,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4543,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4538,
															"src": "14611:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4544,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14613:6:11",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3918,
														"src": "14611:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 4545,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3902,
															"src": "14623:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$3902_$",
																"typeString": "type(enum BountyEscrow.Status)"
															}
														},
														"id": 4546,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14630:4:11",
														"memberName": "Open",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3898,
														"src": "14623:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"src": "14611:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4551,
												"nodeType": "IfStatement",
												"src": "14607:45:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4548,
															"name": "NotOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4007,
															"src": "14643:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4549,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14643:9:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4550,
													"nodeType": "RevertStatement",
													"src": "14636:16:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4556,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4552,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "14666:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 4553,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14670:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "14666:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 4554,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4538,
															"src": "14680:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4555,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14682:8:11",
														"memberName": "resolver",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3909,
														"src": "14680:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "14666:24:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4560,
												"nodeType": "IfStatement",
												"src": "14662:50:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4557,
															"name": "NotResolver",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4013,
															"src": "14699:11:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4558,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14699:13:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4559,
													"nodeType": "RevertStatement",
													"src": "14692:20:11"
												}
											},
											{
												"expression": {
													"id": 4566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4561,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4538,
															"src": "14723:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4563,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14725:6:11",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3918,
														"src": "14723:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4564,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3902,
															"src": "14734:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$3902_$",
																"typeString": "type(enum BountyEscrow.Status)"
															}
														},
														"id": 4565,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "14741:8:11",
														"memberName": "Resolved",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3899,
														"src": "14734:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"src": "14723:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$3902",
														"typeString": "enum BountyEscrow.Status"
													}
												},
												"id": 4567,
												"nodeType": "ExpressionStatement",
												"src": "14723:26:11"
											},
											{
												"assignments": [
													4569
												],
												"declarations": [
													{
														"constant": false,
														"id": 4569,
														"mutability": "mutable",
														"name": "gross",
														"nameLocation": "14767:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 4623,
														"src": "14759:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4568,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14759:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4572,
												"initialValue": {
													"expression": {
														"id": 4570,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4538,
														"src": "14775:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
															"typeString": "struct BountyEscrow.Bounty storage pointer"
														}
													},
													"id": 4571,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "14777:6:11",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3911,
													"src": "14775:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14759:24:11"
											},
											{
												"expression": {
													"id": 4577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4573,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4538,
															"src": "14793:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4575,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "14795:6:11",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3911,
														"src": "14793:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 4576,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14804:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14793:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 4578,
												"nodeType": "ExpressionStatement",
												"src": "14793:12:11"
											},
											{
												"assignments": [
													4580
												],
												"declarations": [
													{
														"constant": false,
														"id": 4580,
														"mutability": "mutable",
														"name": "fee",
														"nameLocation": "14882:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 4623,
														"src": "14874:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4579,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14874:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4587,
												"initialValue": {
													"arguments": [
														{
															"id": 4583,
															"name": "gross",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4569,
															"src": "14900:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4584,
															"name": "feeBps",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3935,
															"src": "14907:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															}
														},
														{
															"id": 4585,
															"name": "FEE_DENOM",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3895,
															"src": "14915:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint16",
																"typeString": "uint16"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 4581,
															"name": "Math",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2100,
															"src": "14888:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_Math_$2100_$",
																"typeString": "type(library Math)"
															}
														},
														"id": 4582,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "14893:6:11",
														"memberName": "mulDiv",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1434,
														"src": "14888:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 4586,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "14888:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14874:51:11"
											},
											{
												"assignments": [
													4589
												],
												"declarations": [
													{
														"constant": false,
														"id": 4589,
														"mutability": "mutable",
														"name": "net",
														"nameLocation": "14943:3:11",
														"nodeType": "VariableDeclaration",
														"scope": 4623,
														"src": "14935:11:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4588,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "14935:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4593,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4592,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4590,
														"name": "gross",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4569,
														"src": "14949:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"id": 4591,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4580,
														"src": "14957:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "14949:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "14935:25:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4594,
														"name": "net",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4589,
														"src": "14975:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 4595,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "14981:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "14975:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4604,
												"nodeType": "IfStatement",
												"src": "14971:47:11",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 4600,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4519,
																"src": "15003:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 4601,
																"name": "net",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4589,
																"src": "15014:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 4597,
																"name": "_usdc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3923,
																"src": "14984:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 4599,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "14990:12:11",
															"memberName": "safeTransfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 337,
															"src": "14984:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
																"typeString": "function (contract IERC20,address,uint256)"
															}
														},
														"id": 4602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "14984:34:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4603,
													"nodeType": "ExpressionStatement",
													"src": "14984:34:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4607,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4605,
														"name": "fee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4580,
														"src": "15032:3:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 4606,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15038:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15032:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4615,
												"nodeType": "IfStatement",
												"src": "15028:46:11",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"id": 4611,
																"name": "feeVault",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3938,
																"src": "15060:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 4612,
																"name": "fee",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4580,
																"src": "15070:3:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 4608,
																"name": "_usdc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3923,
																"src": "15041:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 4610,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15047:12:11",
															"memberName": "safeTransfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 337,
															"src": "15041:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
																"typeString": "function (contract IERC20,address,uint256)"
															}
														},
														"id": 4613,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15041:33:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4614,
													"nodeType": "ExpressionStatement",
													"src": "15041:33:11"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4617,
															"name": "bountyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4517,
															"src": "15099:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 4618,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4519,
															"src": "15109:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4619,
															"name": "net",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4589,
															"src": "15120:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 4620,
															"name": "fee",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4580,
															"src": "15125:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4616,
														"name": "Resolved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3973,
														"src": "15090:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,uint256,uint256)"
														}
													},
													"id": 4621,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15090:39:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4622,
												"nodeType": "EmitStatement",
												"src": "15085:44:11"
											}
										]
									},
									"documentation": {
										"id": 4515,
										"nodeType": "StructuredDocumentation",
										"src": "13960:412:11",
										"text": " @notice Resolve an Open bounty to a recipient, paying out net amount and fee.\n @dev Only the designated resolver; recipient must be non-zero.\n      Fee = floor(gross * feeBps / 10_000); Net = gross - fee.\n      Uses Math.mulDiv for precise, overflow-safe multiplication/division.\n @param bountyId Target bounty.\n @param recipient Address receiving the net payout."
									},
									"functionSelector": "d1686604",
									"id": 4624,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4522,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4521,
												"name": "nonReentrant",
												"nameLocations": [
													"14462:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1010,
												"src": "14462:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "14462:12:11"
										},
										{
											"id": 4524,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4523,
												"name": "whenNotPaused",
												"nameLocations": [
													"14475:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 902,
												"src": "14475:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "14475:13:11"
										}
									],
									"name": "resolve",
									"nameLocation": "14386:7:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4520,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4517,
												"mutability": "mutable",
												"name": "bountyId",
												"nameLocation": "14411:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4624,
												"src": "14403:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4516,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "14403:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 4519,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "14437:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 4624,
												"src": "14429:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 4518,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "14429:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "14393:59:11"
									},
									"returnParameters": {
										"id": 4525,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "14489:0:11"
									},
									"scope": 4740,
									"src": "14377:759:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4705,
										"nodeType": "Block",
										"src": "15488:445:11",
										"statements": [
											{
												"assignments": [
													4636
												],
												"declarations": [
													{
														"constant": false,
														"id": 4636,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "15513:1:11",
														"nodeType": "VariableDeclaration",
														"scope": 4705,
														"src": "15498:16:11",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
															"typeString": "struct BountyEscrow.Bounty"
														},
														"typeName": {
															"id": 4635,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 4634,
																"name": "Bounty",
																"nameLocations": [
																	"15498:6:11"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 3919,
																"src": "15498:6:11"
															},
															"referencedDeclaration": 3919,
															"src": "15498:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4640,
												"initialValue": {
													"baseExpression": {
														"id": 4637,
														"name": "_bounties",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3932,
														"src": "15517:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bounty_$3919_storage_$",
															"typeString": "mapping(bytes32 => struct BountyEscrow.Bounty storage ref)"
														}
													},
													"id": 4639,
													"indexExpression": {
														"id": 4638,
														"name": "bountyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4627,
														"src": "15527:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "15517:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bounty_$3919_storage",
														"typeString": "struct BountyEscrow.Bounty storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15498:38:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_enum$_Status_$3902",
														"typeString": "enum BountyEscrow.Status"
													},
													"id": 4645,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4641,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4636,
															"src": "15550:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4642,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15552:6:11",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3918,
														"src": "15550:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 4643,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3902,
															"src": "15562:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$3902_$",
																"typeString": "type(enum BountyEscrow.Status)"
															}
														},
														"id": 4644,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15569:4:11",
														"memberName": "Open",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3898,
														"src": "15562:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"src": "15550:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4649,
												"nodeType": "IfStatement",
												"src": "15546:45:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4646,
															"name": "NotOpen",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4007,
															"src": "15582:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4647,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15582:9:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4648,
													"nodeType": "RevertStatement",
													"src": "15575:16:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4650,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "15605:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 4651,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15611:9:11",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "15605:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"id": 4652,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4636,
															"src": "15623:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4653,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15625:8:11",
														"memberName": "deadline",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3913,
														"src": "15623:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "15605:28:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4658,
												"nodeType": "IfStatement",
												"src": "15601:61:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4655,
															"name": "DeadlineNotReached",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4016,
															"src": "15642:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4656,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15642:20:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4657,
													"nodeType": "RevertStatement",
													"src": "15635:27:11"
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 4663,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 4659,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "15676:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 4660,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15680:6:11",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "15676:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"id": 4661,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4636,
															"src": "15690:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4662,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "15692:7:11",
														"memberName": "sponsor",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3907,
														"src": "15690:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "15676:23:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4667,
												"nodeType": "IfStatement",
												"src": "15672:48:11",
												"trueBody": {
													"errorCall": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 4664,
															"name": "NotSponsor",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4010,
															"src": "15708:10:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																"typeString": "function () pure returns (error)"
															}
														},
														"id": 4665,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15708:12:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_error",
															"typeString": "error"
														}
													},
													"id": 4666,
													"nodeType": "RevertStatement",
													"src": "15701:19:11"
												}
											},
											{
												"expression": {
													"id": 4673,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4668,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4636,
															"src": "15731:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4670,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15733:6:11",
														"memberName": "status",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3918,
														"src": "15731:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"expression": {
															"id": 4671,
															"name": "Status",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 3902,
															"src": "15742:6:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_enum$_Status_$3902_$",
																"typeString": "type(enum BountyEscrow.Status)"
															}
														},
														"id": 4672,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "15749:8:11",
														"memberName": "Refunded",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3900,
														"src": "15742:15:11",
														"typeDescriptions": {
															"typeIdentifier": "t_enum$_Status_$3902",
															"typeString": "enum BountyEscrow.Status"
														}
													},
													"src": "15731:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_enum$_Status_$3902",
														"typeString": "enum BountyEscrow.Status"
													}
												},
												"id": 4674,
												"nodeType": "ExpressionStatement",
												"src": "15731:26:11"
											},
											{
												"assignments": [
													4676
												],
												"declarations": [
													{
														"constant": false,
														"id": 4676,
														"mutability": "mutable",
														"name": "gross",
														"nameLocation": "15775:5:11",
														"nodeType": "VariableDeclaration",
														"scope": 4705,
														"src": "15767:13:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 4675,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "15767:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 4679,
												"initialValue": {
													"expression": {
														"id": 4677,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4636,
														"src": "15783:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
															"typeString": "struct BountyEscrow.Bounty storage pointer"
														}
													},
													"id": 4678,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "15785:6:11",
													"memberName": "amount",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 3911,
													"src": "15783:8:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "15767:24:11"
											},
											{
												"expression": {
													"id": 4684,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 4680,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4636,
															"src": "15801:1:11",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																"typeString": "struct BountyEscrow.Bounty storage pointer"
															}
														},
														"id": 4682,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "15803:6:11",
														"memberName": "amount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 3911,
														"src": "15801:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint96",
															"typeString": "uint96"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "30",
														"id": 4683,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15812:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15801:12:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint96",
														"typeString": "uint96"
													}
												},
												"id": 4685,
												"nodeType": "ExpressionStatement",
												"src": "15801:12:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 4688,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 4686,
														"name": "gross",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4676,
														"src": "15828:5:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 4687,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "15836:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "15828:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 4697,
												"nodeType": "IfStatement",
												"src": "15824:51:11",
												"trueBody": {
													"expression": {
														"arguments": [
															{
																"expression": {
																	"id": 4692,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4636,
																	"src": "15858:1:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																		"typeString": "struct BountyEscrow.Bounty storage pointer"
																	}
																},
																"id": 4693,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "15860:7:11",
																"memberName": "sponsor",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 3907,
																"src": "15858:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"id": 4694,
																"name": "gross",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4676,
																"src": "15869:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"expression": {
																"id": 4689,
																"name": "_usdc",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 3923,
																"src": "15839:5:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_IERC20_$225",
																	"typeString": "contract IERC20"
																}
															},
															"id": 4691,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15845:12:11",
															"memberName": "safeTransfer",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 337,
															"src": "15839:18:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$225_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$225_$",
																"typeString": "function (contract IERC20,address,uint256)"
															}
														},
														"id": 4695,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "15839:36:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_tuple$__$",
															"typeString": "tuple()"
														}
													},
													"id": 4696,
													"nodeType": "ExpressionStatement",
													"src": "15839:36:11"
												}
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 4699,
															"name": "bountyId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4627,
															"src": "15899:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"expression": {
																"id": 4700,
																"name": "b",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4636,
																"src": "15909:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
																	"typeString": "struct BountyEscrow.Bounty storage pointer"
																}
															},
															"id": 4701,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "15911:7:11",
															"memberName": "sponsor",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 3907,
															"src": "15909:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 4702,
															"name": "gross",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4676,
															"src": "15920:5:11",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 4698,
														"name": "Refunded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3982,
														"src": "15890:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (bytes32,address,uint256)"
														}
													},
													"id": 4703,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "15890:36:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 4704,
												"nodeType": "EmitStatement",
												"src": "15885:41:11"
											}
										]
									},
									"documentation": {
										"id": 4625,
										"nodeType": "StructuredDocumentation",
										"src": "15142:250:11",
										"text": " @notice Refund an Open bounty after the deadline back to the sponsor.\n @dev Only sponsor; requires block.timestamp ≥ deadline.\n      Sets status to Refunded and returns all funds.\n @param bountyId Target bounty."
									},
									"functionSelector": "cc3e049b",
									"id": 4706,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 4630,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4629,
												"name": "nonReentrant",
												"nameLocations": [
													"15461:12:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1010,
												"src": "15461:12:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "15461:12:11"
										},
										{
											"id": 4632,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 4631,
												"name": "whenNotPaused",
												"nameLocations": [
													"15474:13:11"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 902,
												"src": "15474:13:11"
											},
											"nodeType": "ModifierInvocation",
											"src": "15474:13:11"
										}
									],
									"name": "refundExpired",
									"nameLocation": "15406:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4628,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4627,
												"mutability": "mutable",
												"name": "bountyId",
												"nameLocation": "15437:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4706,
												"src": "15429:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4626,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "15429:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "15419:32:11"
									},
									"returnParameters": {
										"id": 4633,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "15488:0:11"
									},
									"scope": 4740,
									"src": "15397:536:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4715,
										"nodeType": "Block",
										"src": "16106:29:11",
										"statements": [
											{
												"expression": {
													"id": 4713,
													"name": "_usdc",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3923,
													"src": "16123:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"functionReturnParameters": 4712,
												"id": 4714,
												"nodeType": "Return",
												"src": "16116:12:11"
											}
										]
									},
									"documentation": {
										"id": 4707,
										"nodeType": "StructuredDocumentation",
										"src": "15982:72:11",
										"text": " @notice ERC-20 token used for escrow (intended USDC)."
									},
									"functionSelector": "3e413bee",
									"id": 4716,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "usdc",
									"nameLocation": "16068:4:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4708,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16072:2:11"
									},
									"returnParameters": {
										"id": 4712,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4711,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4716,
												"src": "16098:6:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_IERC20_$225",
													"typeString": "contract IERC20"
												},
												"typeName": {
													"id": 4710,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4709,
														"name": "IERC20",
														"nameLocations": [
															"16098:6:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 225,
														"src": "16098:6:11"
													},
													"referencedDeclaration": 225,
													"src": "16098:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20_$225",
														"typeString": "contract IERC20"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16097:8:11"
									},
									"scope": 4740,
									"src": "16059:76:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4724,
										"nodeType": "Block",
										"src": "16288:37:11",
										"statements": [
											{
												"expression": {
													"id": 4722,
													"name": "_usdcDecimals",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 3926,
													"src": "16305:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"functionReturnParameters": 4721,
												"id": 4723,
												"nodeType": "Return",
												"src": "16298:20:11"
											}
										]
									},
									"documentation": {
										"id": 4717,
										"nodeType": "StructuredDocumentation",
										"src": "16141:88:11",
										"text": " @notice Cached decimals of the escrow token (best-effort; default 6)."
									},
									"functionSelector": "7bf42165",
									"id": 4725,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "usdcDecimals",
									"nameLocation": "16243:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4718,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "16255:2:11"
									},
									"returnParameters": {
										"id": 4721,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4720,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4725,
												"src": "16281:5:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint8",
													"typeString": "uint8"
												},
												"typeName": {
													"id": 4719,
													"name": "uint8",
													"nodeType": "ElementaryTypeName",
													"src": "16281:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_uint8",
														"typeString": "uint8"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16280:7:11"
									},
									"scope": 4740,
									"src": "16234:91:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 4738,
										"nodeType": "Block",
										"src": "16591:43:11",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 4734,
														"name": "_bounties",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 3932,
														"src": "16608:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_Bounty_$3919_storage_$",
															"typeString": "mapping(bytes32 => struct BountyEscrow.Bounty storage ref)"
														}
													},
													"id": 4736,
													"indexExpression": {
														"id": 4735,
														"name": "bountyId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4728,
														"src": "16618:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "16608:19:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bounty_$3919_storage",
														"typeString": "struct BountyEscrow.Bounty storage ref"
													}
												},
												"functionReturnParameters": 4733,
												"id": 4737,
												"nodeType": "Return",
												"src": "16601:26:11"
											}
										]
									},
									"documentation": {
										"id": 4726,
										"nodeType": "StructuredDocumentation",
										"src": "16331:180:11",
										"text": " @notice Read the full Bounty struct for a given id.\n @dev Returns a memory copy; safe for off-chain indexing/UX.\n @param bountyId Bounty id to query."
									},
									"functionSelector": "2417395c",
									"id": 4739,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBounty",
									"nameLocation": "16525:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 4729,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4728,
												"mutability": "mutable",
												"name": "bountyId",
												"nameLocation": "16543:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 4739,
												"src": "16535:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 4727,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "16535:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16534:18:11"
									},
									"returnParameters": {
										"id": 4733,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4732,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 4739,
												"src": "16576:13:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bounty_$3919_memory_ptr",
													"typeString": "struct BountyEscrow.Bounty"
												},
												"typeName": {
													"id": 4731,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 4730,
														"name": "Bounty",
														"nameLocations": [
															"16576:6:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 3919,
														"src": "16576:6:11"
													},
													"referencedDeclaration": 3919,
													"src": "16576:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bounty_$3919_storage_ptr",
														"typeString": "struct BountyEscrow.Bounty"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "16575:15:11"
									},
									"scope": 4740,
									"src": "16516:118:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 4741,
							"src": "1963:14673:11",
							"usedErrors": [
								13,
								18,
								304,
								585,
								590,
								593,
								882,
								885,
								991,
								1052,
								2110,
								4001,
								4004,
								4007,
								4010,
								4013,
								4016,
								4019,
								4022
							],
							"usedEvents": [
								24,
								874,
								879,
								3955,
								3962,
								3973,
								3982,
								3991,
								3998
							]
						}
					],
					"src": "32:16605:11"
				},
				"id": 11
			}
		}
	}
}